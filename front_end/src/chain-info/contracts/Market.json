{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "listingId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "Cancel",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "listingId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Listed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "listingId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Sale",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "listingId",
          "type": "uint256"
        }
      ],
      "name": "buyToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "listingId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAmoutListing",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "listingId",
          "type": "uint256"
        }
      ],
      "name": "getListing",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum Market.ListingStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Market.Listing",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "listToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
    "8": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/IERC165.sol",
    "9": "contracts/Market.sol"
  },
  "ast": {
    "absolutePath": "contracts/Market.sol",
    "exportedSymbols": {
      "IERC165": [
        1352
      ],
      "IERC721": [
        524
      ],
      "Market": [
        275
      ]
    },
    "id": 276,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:9"
      },
      {
        "absolutePath": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 276,
        "sourceUnit": 525,
        "src": "58:58:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Market",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 275,
        "linearizedBaseContracts": [
          275
        ],
        "name": "Market",
        "nameLocation": "127:6:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Market.ListingStatus",
            "id": 6,
            "members": [
              {
                "id": 3,
                "name": "Active",
                "nameLocation": "169:6:9",
                "nodeType": "EnumValue",
                "src": "169:6:9"
              },
              {
                "id": 4,
                "name": "Sold",
                "nameLocation": "185:4:9",
                "nodeType": "EnumValue",
                "src": "185:4:9"
              },
              {
                "id": 5,
                "name": "Cancelled",
                "nameLocation": "199:9:9",
                "nodeType": "EnumValue",
                "src": "199:9:9"
              }
            ],
            "name": "ListingStatus",
            "nameLocation": "145:13:9",
            "nodeType": "EnumDefinition",
            "src": "140:74:9"
          },
          {
            "canonicalName": "Market.Listing",
            "id": 18,
            "members": [
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "258:6:9",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "244:20:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ListingStatus_$6",
                  "typeString": "enum Market.ListingStatus"
                },
                "typeName": {
                  "id": 8,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 7,
                    "name": "ListingStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 6,
                    "src": "244:13:9"
                  },
                  "referencedDeclaration": 6,
                  "src": "244:13:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ListingStatus_$6",
                    "typeString": "enum Market.ListingStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "282:6:9",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "274:14:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "274:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "306:5:9",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "298:13:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "298:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "329:7:9",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "321:15:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "321:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "354:5:9",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "346:13:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "346:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Listing",
            "nameLocation": "226:7:9",
            "nodeType": "StructDefinition",
            "scope": 275,
            "src": "219:147:9",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 30,
            "name": "Listed",
            "nameLocation": "378:6:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "402:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "394:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "429:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "421:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "453:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "445:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "476:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "468:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "501:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "493:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "384:128:9"
            },
            "src": "372:141:9"
          },
          {
            "anonymous": false,
            "id": 42,
            "name": "Sale",
            "nameLocation": "524:4:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "546:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "538:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "573:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "565:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "596:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "588:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "588:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "619:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "611:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "644:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "636:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "528:127:9"
            },
            "src": "518:138:9"
          },
          {
            "anonymous": false,
            "id": 48,
            "name": "Cancel",
            "nameLocation": "667:6:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "682:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "674:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "701:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "693:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "673:35:9"
            },
            "src": "661:48:9"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "_listingId",
            "nameLocation": "731:10:9",
            "nodeType": "VariableDeclaration",
            "scope": 275,
            "src": "715:30:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 49,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "715:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 50,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "744:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "_listings",
            "nameLocation": "787:9:9",
            "nodeType": "VariableDeclaration",
            "scope": 275,
            "src": "751:45:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$18_storage_$",
              "typeString": "mapping(uint256 => struct Market.Listing)"
            },
            "typeName": {
              "id": 55,
              "keyType": {
                "id": 52,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "759:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "751:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$18_storage_$",
                "typeString": "mapping(uint256 => struct Market.Listing)"
              },
              "valueType": {
                "id": 54,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 53,
                  "name": "Listing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "770:7:9"
                },
                "referencedDeclaration": 18,
                "src": "770:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                  "typeString": "struct Market.Listing"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "908:383:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 69,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "946:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "946:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 73,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "966:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$275",
                              "typeString": "contract Market"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Market_$275",
                              "typeString": "contract Market"
                            }
                          ],
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "958:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 71,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "958:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "958:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "973:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 66,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "926:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 65,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 524,
                          "src": "918:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$524_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "918:14:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$524",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 477,
                      "src": "918:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "918:63:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "918:63:9"
                },
                {
                  "assignments": [
                    80
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80,
                      "mutability": "mutable",
                      "name": "listing",
                      "nameLocation": "1006:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 109,
                      "src": "991:22:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Listing_$18_memory_ptr",
                        "typeString": "struct Market.Listing"
                      },
                      "typeName": {
                        "id": 79,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78,
                          "name": "Listing",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 18,
                          "src": "991:7:9"
                        },
                        "referencedDeclaration": 18,
                        "src": "991:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                          "typeString": "struct Market.Listing"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 82,
                          "name": "ListingStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1037:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ListingStatus_$6_$",
                            "typeString": "type(enum Market.ListingStatus)"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3,
                        "src": "1037:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ListingStatus_$6",
                          "typeString": "enum Market.ListingStatus"
                        }
                      },
                      {
                        "expression": {
                          "id": 84,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1071:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1071:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1095:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "1114:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 88,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1135:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ListingStatus_$6",
                          "typeString": "enum Market.ListingStatus"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 81,
                      "name": "Listing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1016:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Listing_$18_storage_ptr_$",
                        "typeString": "type(struct Market.Listing storage pointer)"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1016:134:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Listing_$18_memory_ptr",
                      "typeString": "struct Market.Listing memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "991:159:9"
                },
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1161:12:9",
                    "subExpression": {
                      "id": 91,
                      "name": "_listingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "1161:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1161:12:9"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 94,
                        "name": "_listings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1184:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$18_storage_$",
                          "typeString": "mapping(uint256 => struct Market.Listing storage ref)"
                        }
                      },
                      "id": 96,
                      "indexExpression": {
                        "id": 95,
                        "name": "_listingId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1194:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1184:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Listing_$18_storage",
                        "typeString": "struct Market.Listing storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 97,
                      "name": "listing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "1208:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Listing_$18_memory_ptr",
                        "typeString": "struct Market.Listing memory"
                      }
                    },
                    "src": "1184:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Listing_$18_storage",
                      "typeString": "struct Market.Listing storage ref"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:31:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 101,
                        "name": "_listingId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1238:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 102,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1250:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1250:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 104,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1262:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 105,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "1269:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 106,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1278:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100,
                      "name": "Listed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1231:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256,uint256)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1231:53:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "EmitStatement",
                  "src": "1226:58:9"
                }
              ]
            },
            "functionSelector": "7e07590d",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "listToken",
            "nameLocation": "812:9:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "839:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "831:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "831:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "862:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "854:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "854:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "887:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "879:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "821:77:9"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:0:9"
            },
            "scope": 275,
            "src": "803:488:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1403:44:9",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 118,
                      "name": "_listings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1420:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$18_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Listing storage ref)"
                      }
                    },
                    "id": 120,
                    "indexExpression": {
                      "id": 119,
                      "name": "listingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "1430:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1420:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Listing_$18_storage",
                      "typeString": "struct Market.Listing storage ref"
                    }
                  },
                  "functionReturnParameters": 117,
                  "id": 121,
                  "nodeType": "Return",
                  "src": "1413:27:9"
                }
              ]
            },
            "functionSelector": "107a274a",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getListing",
            "nameLocation": "1306:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "1325:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1317:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1317:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1316:19:9"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1383:14:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Listing_$18_memory_ptr",
                    "typeString": "struct Market.Listing"
                  },
                  "typeName": {
                    "id": 115,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 114,
                      "name": "Listing",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18,
                      "src": "1383:7:9"
                    },
                    "referencedDeclaration": 18,
                    "src": "1383:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                      "typeString": "struct Market.Listing"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1382:16:9"
            },
            "scope": 275,
            "src": "1297:150:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "1512:34:9",
              "statements": [
                {
                  "expression": {
                    "id": 128,
                    "name": "_listingId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51,
                    "src": "1529:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 127,
                  "id": 129,
                  "nodeType": "Return",
                  "src": "1522:17:9"
                }
              ]
            },
            "functionSelector": "71187cdb",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmoutListing",
            "nameLocation": "1462:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1477:2:9"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "1503:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1502:9:9"
            },
            "scope": 275,
            "src": "1453:93:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 214,
              "nodeType": "Block",
              "src": "1606:722:9",
              "statements": [
                {
                  "assignments": [
                    138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138,
                      "mutability": "mutable",
                      "name": "listing",
                      "nameLocation": "1632:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 214,
                      "src": "1616:23:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                        "typeString": "struct Market.Listing"
                      },
                      "typeName": {
                        "id": 137,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 136,
                          "name": "Listing",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 18,
                          "src": "1616:7:9"
                        },
                        "referencedDeclaration": 18,
                        "src": "1616:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                          "typeString": "struct Market.Listing"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 142,
                  "initialValue": {
                    "baseExpression": {
                      "id": 139,
                      "name": "_listings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1642:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$18_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Listing storage ref)"
                      }
                    },
                    "id": 141,
                    "indexExpression": {
                      "id": 140,
                      "name": "listingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "1652:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1642:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Listing_$18_storage",
                      "typeString": "struct Market.Listing storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1616:46:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 144,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1681:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1681:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 146,
                            "name": "listing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "1695:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                              "typeString": "struct Market.Listing storage pointer"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "1695:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1681:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c6c65722063616e6e6f74206265206275796572",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1711:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ded7f3be04ae1eb4d1ee2df2f764e9cfb73ed05076e3ba9d8431084d88ade7a",
                          "typeString": "literal_string \"Seller cannot be buyer\""
                        },
                        "value": "Seller cannot be buyer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ded7f3be04ae1eb4d1ee2df2f764e9cfb73ed05076e3ba9d8431084d88ade7a",
                          "typeString": "literal_string \"Seller cannot be buyer\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1673:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1673:63:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "1673:63:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ListingStatus_$6",
                          "typeString": "enum Market.ListingStatus"
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 153,
                            "name": "listing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "1767:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                              "typeString": "struct Market.Listing storage pointer"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9,
                          "src": "1767:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ListingStatus_$6",
                            "typeString": "enum Market.ListingStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 155,
                            "name": "ListingStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "1785:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ListingStatus_$6_$",
                              "typeString": "type(enum Market.ListingStatus)"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3,
                          "src": "1785:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ListingStatus_$6",
                            "typeString": "enum Market.ListingStatus"
                          }
                        },
                        "src": "1767:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c697374696e67206973206e6f7420616374697665",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1819:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690",
                          "typeString": "literal_string \"Listing is not active\""
                        },
                        "value": "Listing is not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690",
                          "typeString": "literal_string \"Listing is not active\""
                        }
                      ],
                      "id": 152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1746:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1746:106:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1746:106:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 162,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1871:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1871:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 164,
                            "name": "listing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "1884:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                              "typeString": "struct Market.Listing storage pointer"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "1884:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1871:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e74207061796d656e",
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1899:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a0e8127b544f4772a15ea6e5f2844d9935eb883651e41e3cce1789686283342",
                          "typeString": "literal_string \"Insufficient paymen\""
                        },
                        "value": "Insufficient paymen"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a0e8127b544f4772a15ea6e5f2844d9935eb883651e41e3cce1789686283342",
                          "typeString": "literal_string \"Insufficient paymen\""
                        }
                      ],
                      "id": 161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1863:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1863:58:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1863:58:9"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 170,
                        "name": "listing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "1932:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                          "typeString": "struct Market.Listing storage pointer"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1932:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ListingStatus_$6",
                        "typeString": "enum Market.ListingStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 173,
                        "name": "ListingStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1949:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ListingStatus_$6_$",
                          "typeString": "type(enum Market.ListingStatus)"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Sold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "1949:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ListingStatus_$6",
                        "typeString": "enum Market.ListingStatus"
                      }
                    },
                    "src": "1932:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ListingStatus_$6",
                      "typeString": "enum Market.ListingStatus"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:35:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 184,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2035:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$275",
                              "typeString": "contract Market"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Market_$275",
                              "typeString": "contract Market"
                            }
                          ],
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2027:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 182,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2027:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2027:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 186,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2054:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2054:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 188,
                          "name": "listing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "2078:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                            "typeString": "struct Market.Listing storage pointer"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15,
                        "src": "2078:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 178,
                              "name": "listing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "1986:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                                "typeString": "struct Market.Listing storage pointer"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "1986:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 177,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 524,
                          "src": "1978:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$524_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1978:22:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$524",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 477,
                      "src": "1978:35:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1978:125:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "1978:125:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 198,
                          "name": "listing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "2147:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                            "typeString": "struct Market.Listing storage pointer"
                          }
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "2147:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 194,
                              "name": "listing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "2122:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                                "typeString": "struct Market.Listing storage pointer"
                              }
                            },
                            "id": 195,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11,
                            "src": "2122:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2114:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 192,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2114:8:9",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2114:23:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2114:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2114:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "2114:47:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 203,
                        "name": "listingId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "2195:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2218:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2218:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 206,
                          "name": "listing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "2242:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                            "typeString": "struct Market.Listing storage pointer"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "2242:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 208,
                          "name": "listing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "2269:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                            "typeString": "struct Market.Listing storage pointer"
                          }
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15,
                        "src": "2269:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 210,
                          "name": "listing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "2298:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                            "typeString": "struct Market.Listing storage pointer"
                          }
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "2298:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 202,
                      "name": "Sale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2177:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256,uint256)"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2177:144:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "EmitStatement",
                  "src": "2172:149:9"
                }
              ]
            },
            "functionSelector": "2d296bf1",
            "id": 215,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyToken",
            "nameLocation": "1561:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "1578:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "1570:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1570:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1569:19:9"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1606:0:9"
            },
            "scope": 275,
            "src": "1552:776:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "2376:493:9",
              "statements": [
                {
                  "assignments": [
                    222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 222,
                      "mutability": "mutable",
                      "name": "listing",
                      "nameLocation": "2402:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 273,
                      "src": "2386:23:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                        "typeString": "struct Market.Listing"
                      },
                      "typeName": {
                        "id": 221,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 220,
                          "name": "Listing",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 18,
                          "src": "2386:7:9"
                        },
                        "referencedDeclaration": 18,
                        "src": "2386:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                          "typeString": "struct Market.Listing"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 226,
                  "initialValue": {
                    "baseExpression": {
                      "id": 223,
                      "name": "_listings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "2412:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$18_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Listing storage ref)"
                      }
                    },
                    "id": 225,
                    "indexExpression": {
                      "id": 224,
                      "name": "listingId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "2422:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2412:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Listing_$18_storage",
                      "typeString": "struct Market.Listing storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2386:46:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 228,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2451:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2451:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 230,
                            "name": "listing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "2465:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                              "typeString": "struct Market.Listing storage pointer"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "2465:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2451:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792073656c6c65722063616e2063616e63656c206c697374696e67",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2481:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b286d8d8ff3c56672c07f994ba61159db18b658668f399a420593b90b0d913d",
                          "typeString": "literal_string \"only seller can cancel listing\""
                        },
                        "value": "only seller can cancel listing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b286d8d8ff3c56672c07f994ba61159db18b658668f399a420593b90b0d913d",
                          "typeString": "literal_string \"only seller can cancel listing\""
                        }
                      ],
                      "id": 227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2443:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2443:71:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2443:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ListingStatus_$6",
                          "typeString": "enum Market.ListingStatus"
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 237,
                            "name": "listing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "2545:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                              "typeString": "struct Market.Listing storage pointer"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9,
                          "src": "2545:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ListingStatus_$6",
                            "typeString": "enum Market.ListingStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 239,
                            "name": "ListingStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "2563:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ListingStatus_$6_$",
                              "typeString": "type(enum Market.ListingStatus)"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3,
                          "src": "2563:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ListingStatus_$6",
                            "typeString": "enum Market.ListingStatus"
                          }
                        },
                        "src": "2545:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c697374696e67206973206e6f7420616374697665",
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2597:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690",
                          "typeString": "literal_string \"Listing is not active\""
                        },
                        "value": "Listing is not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a9d86df5a17d2e64d94c92a00571bc62c4a629d78187aab72e5203bed12c690",
                          "typeString": "literal_string \"Listing is not active\""
                        }
                      ],
                      "id": 236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2524:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2524:106:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "2524:106:9"
                },
                {
                  "expression": {
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 245,
                        "name": "listing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2641:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                          "typeString": "struct Market.Listing storage pointer"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "2641:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ListingStatus_$6",
                        "typeString": "enum Market.ListingStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 248,
                        "name": "ListingStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2658:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ListingStatus_$6_$",
                          "typeString": "type(enum Market.ListingStatus)"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "2658:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ListingStatus_$6",
                        "typeString": "enum Market.ListingStatus"
                      }
                    },
                    "src": "2641:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ListingStatus_$6",
                      "typeString": "enum Market.ListingStatus"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "2641:40:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 259,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2749:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$275",
                              "typeString": "contract Market"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Market_$275",
                              "typeString": "contract Market"
                            }
                          ],
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2741:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 257,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2741:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2741:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 261,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2768:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2768:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 263,
                          "name": "listing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "2792:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                            "typeString": "struct Market.Listing storage pointer"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15,
                        "src": "2792:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 253,
                              "name": "listing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "2700:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Listing_$18_storage_ptr",
                                "typeString": "struct Market.Listing storage pointer"
                              }
                            },
                            "id": 254,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "2700:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 252,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 524,
                          "src": "2692:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$524_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2692:22:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$524",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 477,
                      "src": "2692:35:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2692:125:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "2692:125:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 268,
                        "name": "listingId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "2840:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 269,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2851:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2851:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 267,
                      "name": "Cancel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2833:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2833:29:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "EmitStatement",
                  "src": "2828:34:9"
                }
              ]
            },
            "functionSelector": "40e58ee5",
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "2343:6:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "2358:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "2350:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2350:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2349:19:9"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2376:0:9"
            },
            "scope": 275,
            "src": "2334:535:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 276,
        "src": "118:2753:9",
        "usedErrors": []
      }
    ],
    "src": "32:2840:9"
  },
  "bytecode": "60806040526000805534801561001457600080fd5b5061083b806100246000396000f3fe60806040526004361061004a5760003560e01c8063107a274a1461004f5780632d296bf11461008557806340e58ee51461009a57806371187cdb146100ba5780637e07590d146100d8575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610707565b6100f8565b60405161007c9190610736565b60405180910390f35b610098610093366004610707565b6101a5565b005b3480156100a657600080fd5b506100986100b5366004610707565b6103e0565b3480156100c657600080fd5b5060005460405190815260200161007c565b3480156100e457600080fd5b506100986100f336600461079b565b61055d565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915260008281526001602052604090819020815160a081019092528054829060ff16600281111561015457610154610720565b600281111561016557610165610720565b815281546001600160a01b036101009091048116602083015260018301541660408201526002820154606082015260039091015460809091015292915050565b6000818152600160205260409020805461010090046001600160a01b03163314156102105760405162461bcd60e51b815260206004820152601660248201527529b2b63632b91031b0b73737ba10313290313abcb2b960511b60448201526064015b60405180910390fd5b6000815460ff16600281111561022857610228610720565b1461026d5760405162461bcd60e51b81526020600482015260156024820152744c697374696e67206973206e6f742061637469766560581b6044820152606401610207565b80600301543410156102b75760405162461bcd60e51b815260206004820152601360248201527224b739bab33334b1b4b2b73a103830bcb6b2b760691b6044820152606401610207565b805460ff19166001908117825581015460028201546040516323b872dd60e01b815230600482015233602482015260448101919091526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561031c57600080fd5b505af1158015610330573d6000803e3d6000fd5b5050825460038401546040516101009092046001600160a01b031693506108fc8115029250906000818181858888f19350505050158015610375573d6000803e3d6000fd5b50600181015460028201546003830154604080518681523360208201526001600160a01b0390941690840152606083019190915260808201527ff3debaf22196a6ddf52a60fa71058cd7edf5e25bb98f4e96c994a5d4a9b0dd3e9060a0015b60405180910390a15050565b6000818152600160205260409020805461010090046001600160a01b0316331461044c5760405162461bcd60e51b815260206004820152601e60248201527f6f6e6c792073656c6c65722063616e2063616e63656c206c697374696e6700006044820152606401610207565b6000815460ff16600281111561046457610464610720565b146104a95760405162461bcd60e51b81526020600482015260156024820152744c697374696e67206973206e6f742061637469766560581b6044820152606401610207565b805460ff1916600290811782556001820154908201546040516323b872dd60e01b815230600482015233602482015260448101919091526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561050f57600080fd5b505af1158015610523573d6000803e3d6000fd5b5050604080518581523360208201527f8dd3c361eb2366ff27c2db0eb07b9261f1d052570742ab8c9a0c326f37aa576d93500190506103d4565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd90606401600060405180830381600087803b1580156105ab57600080fd5b505af11580156105bf573d6000803e3d6000fd5b5050505060006040518060a00160405280600060028111156105e3576105e3610720565b81523360208201526001600160a01b0386166040820152606081018590526080018390526000805491925080610618836107dc565b9091555050600080548152600160208190526040909120825181548493839160ff19169083600281111561064e5761064e610720565b02179055506020828101518254610100600160a81b0319166101006001600160a01b03928316021783556040808501516001850180546001600160a01b031916918416919091179055606080860151600286015560809586015160039095019490945560005481519081523393810193909352908816908201529081018590529081018390527f723f73331eaee88eec7fc68ef60ab6ed15e4b90d0472b55eb92fa43910bab6dd9060a00160405180910390a150505050565b60006020828403121561071957600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b815160a08201906003811061075b57634e487b7160e01b600052602160045260246000fd5b80835250602083015160018060a01b0380821660208501528060408601511660408501525050606083015160608301526080830151608083015292915050565b6000806000606084860312156107b057600080fd5b83356001600160a01b03811681146107c757600080fd5b95602085013595506040909401359392505050565b60006000198214156107fe57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220c5cbc86a4d7b523baa36801e9b11808d13aaaee7fd4bd8c7d2dbf2f58220277664736f6c634300080a0033",
  "bytecodeSha1": "1f209561a56d7614ef8bcb1ddd8ede9237c74347",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "Market",
  "coverageMap": {
    "branches": {
      "1": {},
      "8": {},
      "9": {
        "Market.buyToken": {
          "18": [
            1681,
            1709,
            true
          ],
          "19": [
            1767,
            1805,
            true
          ],
          "20": [
            1871,
            1897,
            true
          ]
        },
        "Market.cancel": {
          "21": [
            2451,
            2479,
            true
          ],
          "22": [
            2545,
            2583,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {},
      "8": {},
      "9": {
        "Market.buyToken": {
          "2": [
            1673,
            1736
          ],
          "3": [
            1746,
            1852
          ],
          "4": [
            1863,
            1921
          ],
          "5": [
            1932,
            1967
          ],
          "6": [
            1978,
            2103
          ],
          "7": [
            2114,
            2161
          ],
          "8": [
            2172,
            2321
          ]
        },
        "Market.cancel": {
          "9": [
            2443,
            2514
          ],
          "10": [
            2524,
            2630
          ],
          "11": [
            2641,
            2681
          ],
          "12": [
            2692,
            2817
          ],
          "13": [
            2828,
            2862
          ]
        },
        "Market.getAmoutListing": {
          "0": [
            1522,
            1539
          ]
        },
        "Market.getListing": {
          "1": [
            1413,
            1440
          ]
        },
        "Market.listToken": {
          "14": [
            918,
            981
          ],
          "15": [
            1161,
            1173
          ],
          "16": [
            1184,
            1215
          ],
          "17": [
            1226,
            1284
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC721"
  ],
  "deployedBytecode": "60806040526004361061004a5760003560e01c8063107a274a1461004f5780632d296bf11461008557806340e58ee51461009a57806371187cdb146100ba5780637e07590d146100d8575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610707565b6100f8565b60405161007c9190610736565b60405180910390f35b610098610093366004610707565b6101a5565b005b3480156100a657600080fd5b506100986100b5366004610707565b6103e0565b3480156100c657600080fd5b5060005460405190815260200161007c565b3480156100e457600080fd5b506100986100f336600461079b565b61055d565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915260008281526001602052604090819020815160a081019092528054829060ff16600281111561015457610154610720565b600281111561016557610165610720565b815281546001600160a01b036101009091048116602083015260018301541660408201526002820154606082015260039091015460809091015292915050565b6000818152600160205260409020805461010090046001600160a01b03163314156102105760405162461bcd60e51b815260206004820152601660248201527529b2b63632b91031b0b73737ba10313290313abcb2b960511b60448201526064015b60405180910390fd5b6000815460ff16600281111561022857610228610720565b1461026d5760405162461bcd60e51b81526020600482015260156024820152744c697374696e67206973206e6f742061637469766560581b6044820152606401610207565b80600301543410156102b75760405162461bcd60e51b815260206004820152601360248201527224b739bab33334b1b4b2b73a103830bcb6b2b760691b6044820152606401610207565b805460ff19166001908117825581015460028201546040516323b872dd60e01b815230600482015233602482015260448101919091526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561031c57600080fd5b505af1158015610330573d6000803e3d6000fd5b5050825460038401546040516101009092046001600160a01b031693506108fc8115029250906000818181858888f19350505050158015610375573d6000803e3d6000fd5b50600181015460028201546003830154604080518681523360208201526001600160a01b0390941690840152606083019190915260808201527ff3debaf22196a6ddf52a60fa71058cd7edf5e25bb98f4e96c994a5d4a9b0dd3e9060a0015b60405180910390a15050565b6000818152600160205260409020805461010090046001600160a01b0316331461044c5760405162461bcd60e51b815260206004820152601e60248201527f6f6e6c792073656c6c65722063616e2063616e63656c206c697374696e6700006044820152606401610207565b6000815460ff16600281111561046457610464610720565b146104a95760405162461bcd60e51b81526020600482015260156024820152744c697374696e67206973206e6f742061637469766560581b6044820152606401610207565b805460ff1916600290811782556001820154908201546040516323b872dd60e01b815230600482015233602482015260448101919091526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561050f57600080fd5b505af1158015610523573d6000803e3d6000fd5b5050604080518581523360208201527f8dd3c361eb2366ff27c2db0eb07b9261f1d052570742ab8c9a0c326f37aa576d93500190506103d4565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd90606401600060405180830381600087803b1580156105ab57600080fd5b505af11580156105bf573d6000803e3d6000fd5b5050505060006040518060a00160405280600060028111156105e3576105e3610720565b81523360208201526001600160a01b0386166040820152606081018590526080018390526000805491925080610618836107dc565b9091555050600080548152600160208190526040909120825181548493839160ff19169083600281111561064e5761064e610720565b02179055506020828101518254610100600160a81b0319166101006001600160a01b03928316021783556040808501516001850180546001600160a01b031916918416919091179055606080860151600286015560809586015160039095019490945560005481519081523393810193909352908816908201529081018590529081018390527f723f73331eaee88eec7fc68ef60ab6ed15e4b90d0472b55eb92fa43910bab6dd9060a00160405180910390a150505050565b60006020828403121561071957600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b815160a08201906003811061075b57634e487b7160e01b600052602160045260246000fd5b80835250602083015160018060a01b0380821660208501528060408601511660408501525050606083015160608301526080830151608083015292915050565b6000806000606084860312156107b057600080fd5b83356001600160a01b03811681146107c757600080fd5b95602085013595506040909401359392505050565b60006000198214156107fe57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220c5cbc86a4d7b523baa36801e9b11808d13aaaee7fd4bd8c7d2dbf2f58220277664736f6c634300080a0033",
  "deployedSourceMap": "118:2753:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1297:150;;;;;;;;;;-1:-1:-1;1297:150:9;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1552:776;;;;;;:::i;:::-;;:::i;:::-;;2334:535;;;;;;;;;;-1:-1:-1;2334:535:9;;;;;:::i;:::-;;:::i;1453:93::-;;;;;;;;;;-1:-1:-1;1503:7:9;1529:10;1453:93;;1232:25:11;;;1220:2;1205:18;1453:93:9;1086:177:11;803:488:9;;;;;;;;;;-1:-1:-1;803:488:9;;;;;:::i;:::-;;:::i;1297:150::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1420:20:9;;;;:9;:20;;;;;;;1413:27;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1413:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1297:150;-1:-1:-1;;1297:150:9:o;1552:776::-;1616:23;1642:20;;;:9;:20;;;;;1695:14;;;;;-1:-1:-1;;;;;1695:14:9;1681:10;:28;;1673:63;;;;-1:-1:-1;;;1673:63:9;;1897:2:11;1673:63:9;;;1879:21:11;1936:2;1916:18;;;1909:30;-1:-1:-1;;;1955:18:11;;;1948:52;2017:18;;1673:63:9;;;;;;;;;1785:20;1767:14;;;;:38;;;;;;;;:::i;:::-;;1746:106;;;;-1:-1:-1;;;1746:106:9;;2248:2:11;1746:106:9;;;2230:21:11;2287:2;2267:18;;;2260:30;-1:-1:-1;;;2306:18:11;;;2299:51;2367:18;;1746:106:9;2046:345:11;1746:106:9;1884:7;:13;;;1871:9;:26;;1863:58;;;;-1:-1:-1;;;1863:58:9;;2598:2:11;1863:58:9;;;2580:21:11;2637:2;2617:18;;;2610:30;-1:-1:-1;;;2656:18:11;;;2649:49;2715:18;;1863:58:9;2396:343:11;1863:58:9;1932:35;;-1:-1:-1;;1932:35:9;1949:18;1932:35;;;;;1986:13;;;2078:15;;;;1978:125;;-1:-1:-1;;;1978:125:9;;2035:4;1978:125;;;2984:34:11;2054:10:9;3034:18:11;;;3027:43;3086:18;;;3079:34;;;;-1:-1:-1;;;;;1986:13:9;;;;1978:35;;2919:18:11;;1978:125:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2122:14:9;;2147:13;;;;2114:47;;2122:14;;;;-1:-1:-1;;;;;2122:14:9;;-1:-1:-1;2114:47:9;;;;;-1:-1:-1;2147:13:9;2122:14;2114:47;2122:14;2114:47;2147:13;2122:14;2114:47;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2242:13:9;;;;2269:15;;;;2298:13;;;;2177:144;;;3383:25:11;;;2218:10:9;3477:2:11;3462:18;;3455:43;-1:-1:-1;;;;;2242:13:9;;;3514:18:11;;;3507:43;3581:2;3566:18;;3559:34;;;;3624:3;3609:19;;3602:35;2177:144:9;;3370:3:11;3355:19;2177:144:9;;;;;;;;1606:722;1552:776;:::o;2334:535::-;2386:23;2412:20;;;:9;:20;;;;;2465:14;;;;;-1:-1:-1;;;;;2465:14:9;2451:10;:28;2443:71;;;;-1:-1:-1;;;2443:71:9;;3850:2:11;2443:71:9;;;3832:21:11;3889:2;3869:18;;;3862:30;3928:32;3908:18;;;3901:60;3978:18;;2443:71:9;3648:354:11;2443:71:9;2563:20;2545:14;;;;:38;;;;;;;;:::i;:::-;;2524:106;;;;-1:-1:-1;;;2524:106:9;;2248:2:11;2524:106:9;;;2230:21:11;2287:2;2267:18;;;2260:30;-1:-1:-1;;;2306:18:11;;;2299:51;2367:18;;2524:106:9;2046:345:11;2524:106:9;2641:40;;-1:-1:-1;;2641:40:9;2658:23;2641:40;;;;;;2700:13;;;2792:15;;;;2692:125;;-1:-1:-1;;;2692:125:9;;2749:4;2692:125;;;2984:34:11;2768:10:9;3034:18:11;;;3027:43;3086:18;;;3079:34;;;;-1:-1:-1;;;;;2700:13:9;;;;2692:35;;2919:18:11;;2692:125:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2833:29:9;;;4181:25:11;;;2851:10:9;4237:2:11;4222:18;;4215:60;2833:29:9;;-1:-1:-1;4154:18:11;;-1:-1:-1;2833:29:9;4007:274:11;803:488:9;918:63;;-1:-1:-1;;;918:63:9;;946:10;918:63;;;2984:34:11;966:4:9;3034:18:11;;;3027:43;3086:18;;;3079:34;;;-1:-1:-1;;;;;918:27:9;;;;;2919:18:11;;918:63:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;991:22;1016:134;;;;;;;;1037:20;1016:134;;;;;;;;:::i;:::-;;;1071:10;1016:134;;;;-1:-1:-1;;;;;1016:134:9;;;;;;;;;;;;;;;;;-1:-1:-1;1161:12:9;;991:159;;-1:-1:-1;;1161:12:9;;;:::i;:::-;;;;-1:-1:-1;;1184:21:9;1194:10;;1184:21;;:9;:21;;;;;;;;:31;;;;1208:7;;1184:21;;-1:-1:-1;;1184:31:9;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1184:31:9;;;;;;;-1:-1:-1;;;;;;1184:31:9;;-1:-1:-1;;;;;1184:31:9;;;;;;;;;;;;-1:-1:-1;1184:31:9;;;;-1:-1:-1;;;;;;1184:31:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1238:10:9;1231:53;;3383:25:11;;;1250:10:9;3462:18:11;;;3455:43;;;;3534:15;;;3514:18;;;3507:43;3566:18;;;3559:34;;;3609:19;;;3602:35;;;1231:53:9;;3370:3:11;3355:19;1231:53:9;;;;;;;908:383;803:488;;;:::o;14:180:11:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:11;;14:180;-1:-1:-1;14:180:11:o;199:127::-;260:10;255:3;251:20;248:1;241:31;291:4;288:1;281:15;315:4;312:1;305:15;331:750;534:13;;511:3;496:19;;;573:1;566:9;;556:140;;618:10;613:3;609:20;606:1;599:31;653:4;650:1;643:15;681:4;678:1;671:15;556:140;723:2;712:9;705:21;;773:4;765:6;761:17;755:24;815:1;811;806:3;802:11;798:19;873:2;859:12;855:21;848:4;837:9;833:20;826:51;945:2;937:4;929:6;925:17;919:24;915:33;908:4;897:9;893:20;886:63;;;1005:4;997:6;993:17;987:24;980:4;969:9;965:20;958:54;1068:4;1060:6;1056:17;1050:24;1043:4;1032:9;1028:20;1021:54;331:750;;;;:::o;1268:422::-;1345:6;1353;1361;1414:2;1402:9;1393:7;1389:23;1385:32;1382:52;;;1430:1;1427;1420:12;1382:52;1456:23;;-1:-1:-1;;;;;1508:31:11;;1498:42;;1488:70;;1554:1;1551;1544:12;1488:70;1577:5;1629:2;1614:18;;1601:32;;-1:-1:-1;1680:2:11;1665:18;;;1652:32;;1268:422;-1:-1:-1;;;1268:422:11:o;4286:232::-;4325:3;-1:-1:-1;;4346:17:11;;4343:140;;;4405:10;4400:3;4396:20;4393:1;4386:31;4440:4;4437:1;4430:15;4468:4;4465:1;4458:15;4343:140;-1:-1:-1;4510:1:11;4499:13;;4286:232::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    118,
    2871
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x107A274A EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x2D296BF1 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x40E58EE5 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0x71187CDB EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x7E07590D EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x707 JUMP JUMPDEST PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH2 0x93 CALLDATASIZE PUSH1 0x4 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x1A5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x98 PUSH2 0xB5 CALLDATASIZE PUSH1 0x4 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x98 PUSH2 0xF3 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x154 JUMPI PUSH2 0x154 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x165 JUMPI PUSH2 0x165 PUSH2 0x720 JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP4 ADD SLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x210 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x29B2B63632B91031B0B73737BA10313290313ABCB2B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x228 JUMPI PUSH2 0x228 PUSH2 0x720 JUMP JUMPDEST EQ PUSH2 0x26D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4C697374696E67206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x207 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x24B739BAB33334B1B4B2B73A103830BCB6B2B7 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x207 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x330 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP DUP3 SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP PUSH2 0x8FC DUP2 ISZERO MUL SWAP3 POP SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x375 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0xF3DEBAF22196A6DDF52A60FA71058CD7EDF5E25BB98F4E96C994A5D4A9B0DD3E SWAP1 PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792073656C6C65722063616E2063616E63656C206C697374696E670000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x207 JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x464 JUMPI PUSH2 0x464 PUSH2 0x720 JUMP JUMPDEST EQ PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4C697374696E67206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x207 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x523 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x8DD3C361EB2366FF27C2DB0EB07B9261F1D052570742AB8C9A0C326F37AA576D SWAP4 POP ADD SWAP1 POP PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5E3 JUMPI PUSH2 0x5E3 PUSH2 0x720 JUMP JUMPDEST DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD SWAP2 SWAP3 POP DUP1 PUSH2 0x618 DUP4 PUSH2 0x7DC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD DUP5 SWAP4 DUP4 SWAP2 PUSH1 0xFF NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x64E JUMPI PUSH2 0x64E PUSH2 0x720 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP3 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND MUL OR DUP4 SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x1 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD PUSH1 0x2 DUP7 ADD SSTORE PUSH1 0x80 SWAP6 DUP7 ADD MLOAD PUSH1 0x3 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x0 SLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP9 AND SWAP1 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x723F73331EAEE88EEC7FC68EF60AB6ED15E4B90D0472B55EB92FA43910BAB6DD SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xA0 DUP3 ADD SWAP1 PUSH1 0x3 DUP2 LT PUSH2 0x75B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP4 MSTORE POP PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE DUP1 PUSH1 0x40 DUP7 ADD MLOAD AND PUSH1 0x40 DUP6 ADD MSTORE POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x7FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xCB 0xC8 PUSH11 0x4D7B523BAA36801E9B1180 DUP14 SGT 0xAA 0xAE 0xE7 REVERT 0x4B 0xD8 0xC7 0xD2 0xDB CALLCODE CREATE2 DUP3 KECCAK256 0x27 PUSH23 0x64736F6C634300080A0033000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        118,
        2871
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "8": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "LT",
      "path": "9"
    },
    "9": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4A"
    },
    "12": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "13": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "16": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "SHR",
      "path": "9"
    },
    "19": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "DUP1",
      "path": "9"
    },
    "20": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x107A274A"
    },
    "25": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "EQ",
      "path": "9"
    },
    "26": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4F"
    },
    "29": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "30": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "DUP1",
      "path": "9"
    },
    "31": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x2D296BF1"
    },
    "36": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "EQ",
      "path": "9"
    },
    "37": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x85"
    },
    "40": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "41": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "DUP1",
      "path": "9"
    },
    "42": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x40E58EE5"
    },
    "47": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "EQ",
      "path": "9"
    },
    "48": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9A"
    },
    "51": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "52": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "DUP1",
      "path": "9"
    },
    "53": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x71187CDB"
    },
    "58": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "EQ",
      "path": "9"
    },
    "59": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBA"
    },
    "62": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "63": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "DUP1",
      "path": "9"
    },
    "64": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x7E07590D"
    },
    "69": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "EQ",
      "path": "9"
    },
    "70": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD8"
    },
    "73": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "74": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "75": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "77": {
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "DUP1",
      "path": "9"
    },
    "78": {
      "first_revert": true,
      "fn": null,
      "offset": [
        118,
        2871
      ],
      "op": "REVERT",
      "path": "9"
    },
    "79": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "80": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "81": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "DUP1",
      "path": "9"
    },
    "82": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "83": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5B"
    },
    "86": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "87": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "89": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "DUP1",
      "path": "9"
    },
    "90": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "REVERT",
      "path": "9"
    },
    "91": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "92": {
      "op": "POP"
    },
    "93": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6F"
    },
    "96": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6A"
    },
    "99": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "100": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "102": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x707"
    },
    "105": {
      "fn": "Market.getListing",
      "jump": "i",
      "offset": [
        1297,
        1447
      ],
      "op": "JUMP",
      "path": "9"
    },
    "106": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "107": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF8"
    },
    "110": {
      "fn": "Market.getListing",
      "jump": "i",
      "offset": [
        1297,
        1447
      ],
      "op": "JUMP",
      "path": "9"
    },
    "111": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "112": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "114": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "115": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7C"
    },
    "118": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "119": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "120": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x736"
    },
    "123": {
      "fn": "Market.getListing",
      "jump": "i",
      "offset": [
        1297,
        1447
      ],
      "op": "JUMP",
      "path": "9"
    },
    "124": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "125": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "127": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "128": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "DUP1",
      "path": "9"
    },
    "129": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "130": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "SUB",
      "path": "9"
    },
    "131": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "132": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "RETURN",
      "path": "9"
    },
    "133": {
      "fn": "Market.buyToken",
      "offset": [
        1552,
        2328
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "134": {
      "fn": "Market.buyToken",
      "offset": [
        1552,
        2328
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x98"
    },
    "137": {
      "fn": "Market.buyToken",
      "offset": [
        1552,
        2328
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x93"
    },
    "140": {
      "fn": "Market.buyToken",
      "offset": [
        1552,
        2328
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "141": {
      "fn": "Market.buyToken",
      "offset": [
        1552,
        2328
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "143": {
      "fn": "Market.buyToken",
      "offset": [
        1552,
        2328
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x707"
    },
    "146": {
      "fn": "Market.buyToken",
      "jump": "i",
      "offset": [
        1552,
        2328
      ],
      "op": "JUMP",
      "path": "9"
    },
    "147": {
      "fn": "Market.buyToken",
      "offset": [
        1552,
        2328
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "148": {
      "fn": "Market.buyToken",
      "offset": [
        1552,
        2328
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A5"
    },
    "151": {
      "fn": "Market.buyToken",
      "jump": "i",
      "offset": [
        1552,
        2328
      ],
      "op": "JUMP",
      "path": "9"
    },
    "152": {
      "fn": "Market.buyToken",
      "offset": [
        1552,
        2328
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "153": {
      "fn": "Market.buyToken",
      "offset": [
        1552,
        2328
      ],
      "op": "STOP",
      "path": "9"
    },
    "154": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "155": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "156": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "DUP1",
      "path": "9"
    },
    "157": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "158": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA6"
    },
    "161": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "162": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "164": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "DUP1",
      "path": "9"
    },
    "165": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "REVERT",
      "path": "9"
    },
    "166": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "167": {
      "op": "POP"
    },
    "168": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x98"
    },
    "171": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB5"
    },
    "174": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "175": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "177": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x707"
    },
    "180": {
      "fn": "Market.cancel",
      "jump": "i",
      "offset": [
        2334,
        2869
      ],
      "op": "JUMP",
      "path": "9"
    },
    "181": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "182": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3E0"
    },
    "185": {
      "fn": "Market.cancel",
      "jump": "i",
      "offset": [
        2334,
        2869
      ],
      "op": "JUMP",
      "path": "9"
    },
    "186": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1453,
        1546
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "187": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1453,
        1546
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "188": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1453,
        1546
      ],
      "op": "DUP1",
      "path": "9"
    },
    "189": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1453,
        1546
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "190": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1453,
        1546
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC6"
    },
    "193": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1453,
        1546
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "194": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1453,
        1546
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "196": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1453,
        1546
      ],
      "op": "DUP1",
      "path": "9"
    },
    "197": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1453,
        1546
      ],
      "op": "REVERT",
      "path": "9"
    },
    "198": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1453,
        1546
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "199": {
      "op": "POP"
    },
    "200": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1503,
        1510
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "202": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1529,
        1539
      ],
      "op": "SLOAD",
      "path": "9",
      "statement": 0
    },
    "203": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1453,
        1546
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "205": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1453,
        1546
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "206": {
      "op": "SWAP1"
    },
    "207": {
      "op": "DUP2"
    },
    "208": {
      "op": "MSTORE"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "211": {
      "op": "ADD"
    },
    "212": {
      "fn": "Market.getAmoutListing",
      "offset": [
        1453,
        1546
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7C"
    },
    "215": {
      "op": "JUMP"
    },
    "216": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "217": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "218": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "DUP1",
      "path": "9"
    },
    "219": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "220": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE4"
    },
    "223": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "224": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "226": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "DUP1",
      "path": "9"
    },
    "227": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "REVERT",
      "path": "9"
    },
    "228": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "229": {
      "op": "POP"
    },
    "230": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x98"
    },
    "233": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF3"
    },
    "236": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "237": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "239": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x79B"
    },
    "242": {
      "fn": "Market.listToken",
      "jump": "i",
      "offset": [
        803,
        1291
      ],
      "op": "JUMP",
      "path": "9"
    },
    "243": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "244": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x55D"
    },
    "247": {
      "fn": "Market.listToken",
      "jump": "i",
      "offset": [
        803,
        1291
      ],
      "op": "JUMP",
      "path": "9"
    },
    "248": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "251": {
      "op": "DUP1"
    },
    "252": {
      "op": "MLOAD"
    },
    "253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "255": {
      "op": "DUP2"
    },
    "256": {
      "op": "ADD"
    },
    "257": {
      "op": "DUP3"
    },
    "258": {
      "op": "MSTORE"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "261": {
      "op": "DUP1"
    },
    "262": {
      "op": "DUP3"
    },
    "263": {
      "op": "MSTORE"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "266": {
      "op": "DUP3"
    },
    "267": {
      "op": "ADD"
    },
    "268": {
      "op": "DUP2"
    },
    "269": {
      "op": "SWAP1"
    },
    "270": {
      "op": "MSTORE"
    },
    "271": {
      "op": "SWAP2"
    },
    "272": {
      "op": "DUP2"
    },
    "273": {
      "op": "ADD"
    },
    "274": {
      "op": "DUP3"
    },
    "275": {
      "op": "SWAP1"
    },
    "276": {
      "op": "MSTORE"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "279": {
      "op": "DUP2"
    },
    "280": {
      "op": "ADD"
    },
    "281": {
      "op": "DUP3"
    },
    "282": {
      "op": "SWAP1"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "286": {
      "op": "DUP2"
    },
    "287": {
      "op": "ADD"
    },
    "288": {
      "op": "SWAP2"
    },
    "289": {
      "op": "SWAP1"
    },
    "290": {
      "op": "SWAP2"
    },
    "291": {
      "op": "MSTORE"
    },
    "292": {
      "fn": "Market.getListing",
      "offset": [
        1420,
        1440
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 1,
      "value": "0x0"
    },
    "294": {
      "fn": "Market.getListing",
      "offset": [
        1420,
        1440
      ],
      "op": "DUP3",
      "path": "9"
    },
    "295": {
      "fn": "Market.getListing",
      "offset": [
        1420,
        1440
      ],
      "op": "DUP2",
      "path": "9"
    },
    "296": {
      "fn": "Market.getListing",
      "offset": [
        1420,
        1440
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "297": {
      "fn": "Market.getListing",
      "offset": [
        1420,
        1429
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "299": {
      "fn": "Market.getListing",
      "offset": [
        1420,
        1440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "301": {
      "fn": "Market.getListing",
      "offset": [
        1420,
        1440
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "302": {
      "fn": "Market.getListing",
      "offset": [
        1420,
        1440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "304": {
      "fn": "Market.getListing",
      "offset": [
        1420,
        1440
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "305": {
      "fn": "Market.getListing",
      "offset": [
        1420,
        1440
      ],
      "op": "DUP2",
      "path": "9"
    },
    "306": {
      "fn": "Market.getListing",
      "offset": [
        1420,
        1440
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "307": {
      "fn": "Market.getListing",
      "offset": [
        1420,
        1440
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "308": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DUP2",
      "path": "9"
    },
    "309": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "310": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "312": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DUP2",
      "path": "9"
    },
    "313": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "ADD",
      "path": "9"
    },
    "314": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "315": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "316": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "317": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DUP1",
      "path": "9"
    },
    "318": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "319": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DUP3",
      "path": "9"
    },
    "320": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "321": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "323": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "AND",
      "path": "9"
    },
    "324": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "326": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DUP2",
      "path": "9"
    },
    "327": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "GT",
      "path": "9"
    },
    "328": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "329": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x154"
    },
    "332": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "333": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x154"
    },
    "336": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x720"
    },
    "339": {
      "fn": "Market.getListing",
      "jump": "i",
      "offset": [
        1413,
        1440
      ],
      "op": "JUMP",
      "path": "9"
    },
    "340": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "341": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "343": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DUP2",
      "path": "9"
    },
    "344": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "GT",
      "path": "9"
    },
    "345": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "346": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x165"
    },
    "349": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "350": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x165"
    },
    "353": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x720"
    },
    "356": {
      "fn": "Market.getListing",
      "jump": "i",
      "offset": [
        1413,
        1440
      ],
      "op": "JUMP",
      "path": "9"
    },
    "357": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "358": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DUP2",
      "path": "9"
    },
    "359": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "360": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DUP2",
      "path": "9"
    },
    "361": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "368": {
      "op": "SHL"
    },
    "369": {
      "op": "SUB"
    },
    "370": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "373": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "374": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "375": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DIV",
      "path": "9"
    },
    "376": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DUP2",
      "path": "9"
    },
    "377": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "AND",
      "path": "9"
    },
    "378": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "380": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DUP4",
      "path": "9"
    },
    "381": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "ADD",
      "path": "9"
    },
    "382": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "383": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "385": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DUP4",
      "path": "9"
    },
    "386": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "ADD",
      "path": "9"
    },
    "387": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "388": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "AND",
      "path": "9"
    },
    "389": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "391": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DUP3",
      "path": "9"
    },
    "392": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "ADD",
      "path": "9"
    },
    "393": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "394": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "396": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DUP3",
      "path": "9"
    },
    "397": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "ADD",
      "path": "9"
    },
    "398": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "399": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "401": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "DUP3",
      "path": "9"
    },
    "402": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "ADD",
      "path": "9"
    },
    "403": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "404": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "406": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "407": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "408": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "ADD",
      "path": "9"
    },
    "409": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "410": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "412": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "413": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "414": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "ADD",
      "path": "9"
    },
    "415": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "416": {
      "fn": "Market.getListing",
      "offset": [
        1413,
        1440
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "417": {
      "fn": "Market.getListing",
      "offset": [
        1297,
        1447
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "418": {
      "op": "POP"
    },
    "419": {
      "op": "POP"
    },
    "420": {
      "fn": "Market.getListing",
      "jump": "o",
      "offset": [
        1297,
        1447
      ],
      "op": "JUMP",
      "path": "9"
    },
    "421": {
      "fn": "Market.buyToken",
      "offset": [
        1552,
        2328
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "422": {
      "fn": "Market.buyToken",
      "offset": [
        1616,
        1639
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "424": {
      "fn": "Market.buyToken",
      "offset": [
        1642,
        1662
      ],
      "op": "DUP2",
      "path": "9"
    },
    "425": {
      "fn": "Market.buyToken",
      "offset": [
        1642,
        1662
      ],
      "op": "DUP2",
      "path": "9"
    },
    "426": {
      "fn": "Market.buyToken",
      "offset": [
        1642,
        1662
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "427": {
      "fn": "Market.buyToken",
      "offset": [
        1642,
        1651
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "429": {
      "fn": "Market.buyToken",
      "offset": [
        1642,
        1662
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "431": {
      "fn": "Market.buyToken",
      "offset": [
        1642,
        1662
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "432": {
      "fn": "Market.buyToken",
      "offset": [
        1642,
        1662
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "434": {
      "fn": "Market.buyToken",
      "offset": [
        1642,
        1662
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "435": {
      "fn": "Market.buyToken",
      "offset": [
        1642,
        1662
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "436": {
      "fn": "Market.buyToken",
      "offset": [
        1695,
        1709
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 2
    },
    "437": {
      "fn": "Market.buyToken",
      "offset": [
        1695,
        1709
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "438": {
      "fn": "Market.buyToken",
      "offset": [
        1695,
        1709
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "441": {
      "fn": "Market.buyToken",
      "offset": [
        1695,
        1709
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "442": {
      "fn": "Market.buyToken",
      "offset": [
        1695,
        1709
      ],
      "op": "DIV",
      "path": "9"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "449": {
      "op": "SHL"
    },
    "450": {
      "op": "SUB"
    },
    "451": {
      "fn": "Market.buyToken",
      "offset": [
        1695,
        1709
      ],
      "op": "AND",
      "path": "9"
    },
    "452": {
      "fn": "Market.buyToken",
      "offset": [
        1681,
        1691
      ],
      "op": "CALLER",
      "path": "9"
    },
    "453": {
      "fn": "Market.buyToken",
      "offset": [
        1681,
        1709
      ],
      "op": "EQ",
      "path": "9"
    },
    "454": {
      "branch": 18,
      "fn": "Market.buyToken",
      "offset": [
        1681,
        1709
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "455": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x210"
    },
    "458": {
      "branch": 18,
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "459": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "461": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "462": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "466": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "468": {
      "op": "SHL"
    },
    "469": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "DUP2",
      "path": "9"
    },
    "470": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "473": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "475": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "DUP3",
      "path": "9"
    },
    "476": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "ADD",
      "path": "9"
    },
    "477": {
      "op": "MSTORE"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "482": {
      "op": "DUP3"
    },
    "483": {
      "op": "ADD"
    },
    "484": {
      "op": "MSTORE"
    },
    "485": {
      "op": "PUSH22",
      "value": "0x29B2B63632B91031B0B73737BA10313290313ABCB2B9"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "510": {
      "op": "SHL"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "513": {
      "op": "DUP3"
    },
    "514": {
      "op": "ADD"
    },
    "515": {
      "op": "MSTORE"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "518": {
      "op": "ADD"
    },
    "519": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "520": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "522": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "523": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "DUP1",
      "path": "9"
    },
    "524": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "525": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "SUB",
      "path": "9"
    },
    "526": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "527": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "9"
    },
    "528": {
      "fn": "Market.buyToken",
      "offset": [
        1673,
        1736
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "529": {
      "fn": "Market.buyToken",
      "offset": [
        1785,
        1805
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 3,
      "value": "0x0"
    },
    "531": {
      "fn": "Market.buyToken",
      "offset": [
        1767,
        1781
      ],
      "op": "DUP2",
      "path": "9"
    },
    "532": {
      "fn": "Market.buyToken",
      "offset": [
        1767,
        1781
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "533": {
      "fn": "Market.buyToken",
      "offset": [
        1767,
        1781
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "535": {
      "fn": "Market.buyToken",
      "offset": [
        1767,
        1781
      ],
      "op": "AND",
      "path": "9"
    },
    "536": {
      "fn": "Market.buyToken",
      "offset": [
        1767,
        1805
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "538": {
      "fn": "Market.buyToken",
      "offset": [
        1767,
        1805
      ],
      "op": "DUP2",
      "path": "9"
    },
    "539": {
      "fn": "Market.buyToken",
      "offset": [
        1767,
        1805
      ],
      "op": "GT",
      "path": "9"
    },
    "540": {
      "fn": "Market.buyToken",
      "offset": [
        1767,
        1805
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "541": {
      "fn": "Market.buyToken",
      "offset": [
        1767,
        1805
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x228"
    },
    "544": {
      "fn": "Market.buyToken",
      "offset": [
        1767,
        1805
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "545": {
      "fn": "Market.buyToken",
      "offset": [
        1767,
        1805
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x228"
    },
    "548": {
      "fn": "Market.buyToken",
      "offset": [
        1767,
        1805
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x720"
    },
    "551": {
      "fn": "Market.buyToken",
      "jump": "i",
      "offset": [
        1767,
        1805
      ],
      "op": "JUMP",
      "path": "9"
    },
    "552": {
      "fn": "Market.buyToken",
      "offset": [
        1767,
        1805
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "553": {
      "branch": 19,
      "fn": "Market.buyToken",
      "offset": [
        1767,
        1805
      ],
      "op": "EQ",
      "path": "9"
    },
    "554": {
      "fn": "Market.buyToken",
      "offset": [
        1746,
        1852
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26D"
    },
    "557": {
      "branch": 19,
      "fn": "Market.buyToken",
      "offset": [
        1746,
        1852
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "558": {
      "fn": "Market.buyToken",
      "offset": [
        1746,
        1852
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "560": {
      "fn": "Market.buyToken",
      "offset": [
        1746,
        1852
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "561": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "565": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "567": {
      "op": "SHL"
    },
    "568": {
      "fn": "Market.buyToken",
      "offset": [
        1746,
        1852
      ],
      "op": "DUP2",
      "path": "9"
    },
    "569": {
      "fn": "Market.buyToken",
      "offset": [
        1746,
        1852
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "572": {
      "fn": "Market.buyToken",
      "offset": [
        1746,
        1852
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "574": {
      "fn": "Market.buyToken",
      "offset": [
        1746,
        1852
      ],
      "op": "DUP3",
      "path": "9"
    },
    "575": {
      "fn": "Market.buyToken",
      "offset": [
        1746,
        1852
      ],
      "op": "ADD",
      "path": "9"
    },
    "576": {
      "op": "MSTORE"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "581": {
      "op": "DUP3"
    },
    "582": {
      "op": "ADD"
    },
    "583": {
      "op": "MSTORE"
    },
    "584": {
      "op": "PUSH21",
      "value": "0x4C697374696E67206973206E6F7420616374697665"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "608": {
      "op": "SHL"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "611": {
      "op": "DUP3"
    },
    "612": {
      "op": "ADD"
    },
    "613": {
      "op": "MSTORE"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "616": {
      "op": "ADD"
    },
    "617": {
      "fn": "Market.buyToken",
      "offset": [
        1746,
        1852
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x207"
    },
    "620": {
      "op": "JUMP"
    },
    "621": {
      "fn": "Market.buyToken",
      "offset": [
        1746,
        1852
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "622": {
      "fn": "Market.buyToken",
      "offset": [
        1884,
        1891
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 4
    },
    "623": {
      "fn": "Market.buyToken",
      "offset": [
        1884,
        1897
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "625": {
      "fn": "Market.buyToken",
      "offset": [
        1884,
        1897
      ],
      "op": "ADD",
      "path": "9"
    },
    "626": {
      "fn": "Market.buyToken",
      "offset": [
        1884,
        1897
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "627": {
      "fn": "Market.buyToken",
      "offset": [
        1871,
        1880
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "628": {
      "fn": "Market.buyToken",
      "offset": [
        1871,
        1897
      ],
      "op": "LT",
      "path": "9"
    },
    "629": {
      "branch": 20,
      "fn": "Market.buyToken",
      "offset": [
        1871,
        1897
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "630": {
      "fn": "Market.buyToken",
      "offset": [
        1863,
        1921
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2B7"
    },
    "633": {
      "branch": 20,
      "fn": "Market.buyToken",
      "offset": [
        1863,
        1921
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "634": {
      "fn": "Market.buyToken",
      "offset": [
        1863,
        1921
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "636": {
      "fn": "Market.buyToken",
      "offset": [
        1863,
        1921
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "637": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "641": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "643": {
      "op": "SHL"
    },
    "644": {
      "fn": "Market.buyToken",
      "offset": [
        1863,
        1921
      ],
      "op": "DUP2",
      "path": "9"
    },
    "645": {
      "fn": "Market.buyToken",
      "offset": [
        1863,
        1921
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "648": {
      "fn": "Market.buyToken",
      "offset": [
        1863,
        1921
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "650": {
      "fn": "Market.buyToken",
      "offset": [
        1863,
        1921
      ],
      "op": "DUP3",
      "path": "9"
    },
    "651": {
      "fn": "Market.buyToken",
      "offset": [
        1863,
        1921
      ],
      "op": "ADD",
      "path": "9"
    },
    "652": {
      "op": "MSTORE"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "657": {
      "op": "DUP3"
    },
    "658": {
      "op": "ADD"
    },
    "659": {
      "op": "MSTORE"
    },
    "660": {
      "op": "PUSH19",
      "value": "0x24B739BAB33334B1B4B2B73A103830BCB6B2B7"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "682": {
      "op": "SHL"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "685": {
      "op": "DUP3"
    },
    "686": {
      "op": "ADD"
    },
    "687": {
      "op": "MSTORE"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "690": {
      "op": "ADD"
    },
    "691": {
      "fn": "Market.buyToken",
      "offset": [
        1863,
        1921
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x207"
    },
    "694": {
      "op": "JUMP"
    },
    "695": {
      "fn": "Market.buyToken",
      "offset": [
        1863,
        1921
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "696": {
      "fn": "Market.buyToken",
      "offset": [
        1932,
        1967
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 5
    },
    "697": {
      "fn": "Market.buyToken",
      "offset": [
        1932,
        1967
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "698": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "700": {
      "op": "NOT"
    },
    "701": {
      "fn": "Market.buyToken",
      "offset": [
        1932,
        1967
      ],
      "op": "AND",
      "path": "9"
    },
    "702": {
      "fn": "Market.buyToken",
      "offset": [
        1949,
        1967
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "704": {
      "fn": "Market.buyToken",
      "offset": [
        1932,
        1967
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "705": {
      "fn": "Market.buyToken",
      "offset": [
        1932,
        1967
      ],
      "op": "DUP2",
      "path": "9"
    },
    "706": {
      "fn": "Market.buyToken",
      "offset": [
        1932,
        1967
      ],
      "op": "OR",
      "path": "9"
    },
    "707": {
      "fn": "Market.buyToken",
      "offset": [
        1932,
        1967
      ],
      "op": "DUP3",
      "path": "9"
    },
    "708": {
      "fn": "Market.buyToken",
      "offset": [
        1932,
        1967
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "709": {
      "fn": "Market.buyToken",
      "offset": [
        1986,
        1999
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 6
    },
    "710": {
      "fn": "Market.buyToken",
      "offset": [
        1986,
        1999
      ],
      "op": "ADD",
      "path": "9"
    },
    "711": {
      "fn": "Market.buyToken",
      "offset": [
        1986,
        1999
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "712": {
      "fn": "Market.buyToken",
      "offset": [
        2078,
        2093
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "714": {
      "fn": "Market.buyToken",
      "offset": [
        2078,
        2093
      ],
      "op": "DUP3",
      "path": "9"
    },
    "715": {
      "fn": "Market.buyToken",
      "offset": [
        2078,
        2093
      ],
      "op": "ADD",
      "path": "9"
    },
    "716": {
      "fn": "Market.buyToken",
      "offset": [
        2078,
        2093
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "717": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "719": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "720": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "725": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "727": {
      "op": "SHL"
    },
    "728": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "DUP2",
      "path": "9"
    },
    "729": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "730": {
      "fn": "Market.buyToken",
      "offset": [
        2035,
        2039
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "731": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "733": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "DUP3",
      "path": "9"
    },
    "734": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "ADD",
      "path": "9"
    },
    "735": {
      "op": "MSTORE"
    },
    "736": {
      "fn": "Market.buyToken",
      "offset": [
        2054,
        2064
      ],
      "op": "CALLER",
      "path": "9"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "739": {
      "op": "DUP3"
    },
    "740": {
      "op": "ADD"
    },
    "741": {
      "op": "MSTORE"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "744": {
      "op": "DUP2"
    },
    "745": {
      "op": "ADD"
    },
    "746": {
      "op": "SWAP2"
    },
    "747": {
      "op": "SWAP1"
    },
    "748": {
      "op": "SWAP2"
    },
    "749": {
      "op": "MSTORE"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "756": {
      "op": "SHL"
    },
    "757": {
      "op": "SUB"
    },
    "758": {
      "fn": "Market.buyToken",
      "offset": [
        1986,
        1999
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "759": {
      "fn": "Market.buyToken",
      "offset": [
        1986,
        1999
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "760": {
      "fn": "Market.buyToken",
      "offset": [
        1986,
        1999
      ],
      "op": "AND",
      "path": "9"
    },
    "761": {
      "fn": "Market.buyToken",
      "offset": [
        1986,
        1999
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "762": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2013
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x23B872DD"
    },
    "767": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2013
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "770": {
      "op": "ADD"
    },
    "771": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "773": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "775": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "776": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "DUP1",
      "path": "9"
    },
    "777": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "DUP4",
      "path": "9"
    },
    "778": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "SUB",
      "path": "9"
    },
    "779": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "DUP2",
      "path": "9"
    },
    "780": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "782": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "DUP8",
      "path": "9"
    },
    "783": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "DUP1",
      "path": "9"
    },
    "784": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "785": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "786": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "DUP1",
      "path": "9"
    },
    "787": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "788": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x31C"
    },
    "791": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "792": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "794": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "DUP1",
      "path": "9"
    },
    "795": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "REVERT",
      "path": "9"
    },
    "796": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "797": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "POP",
      "path": "9"
    },
    "798": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "GAS",
      "path": "9"
    },
    "799": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "CALL",
      "path": "9"
    },
    "800": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "801": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "DUP1",
      "path": "9"
    },
    "802": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "803": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x330"
    },
    "806": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "807": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "808": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "810": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "DUP1",
      "path": "9"
    },
    "811": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "812": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "813": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "815": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "REVERT",
      "path": "9"
    },
    "816": {
      "fn": "Market.buyToken",
      "offset": [
        1978,
        2103
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "817": {
      "op": "POP"
    },
    "818": {
      "op": "POP"
    },
    "819": {
      "fn": "Market.buyToken",
      "offset": [
        2122,
        2136
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 7
    },
    "820": {
      "fn": "Market.buyToken",
      "offset": [
        2122,
        2136
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "821": {
      "fn": "Market.buyToken",
      "offset": [
        2147,
        2160
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "823": {
      "fn": "Market.buyToken",
      "offset": [
        2147,
        2160
      ],
      "op": "DUP5",
      "path": "9"
    },
    "824": {
      "fn": "Market.buyToken",
      "offset": [
        2147,
        2160
      ],
      "op": "ADD",
      "path": "9"
    },
    "825": {
      "fn": "Market.buyToken",
      "offset": [
        2147,
        2160
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "826": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "828": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "829": {
      "fn": "Market.buyToken",
      "offset": [
        2122,
        2136
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "832": {
      "fn": "Market.buyToken",
      "offset": [
        2122,
        2136
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "833": {
      "fn": "Market.buyToken",
      "offset": [
        2122,
        2136
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "834": {
      "fn": "Market.buyToken",
      "offset": [
        2122,
        2136
      ],
      "op": "DIV",
      "path": "9"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "841": {
      "op": "SHL"
    },
    "842": {
      "op": "SUB"
    },
    "843": {
      "fn": "Market.buyToken",
      "offset": [
        2122,
        2136
      ],
      "op": "AND",
      "path": "9"
    },
    "844": {
      "fn": "Market.buyToken",
      "offset": [
        2122,
        2136
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "845": {
      "op": "POP"
    },
    "846": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8FC"
    },
    "849": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "DUP2",
      "path": "9"
    },
    "850": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "851": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "MUL",
      "path": "9"
    },
    "852": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "853": {
      "op": "POP"
    },
    "854": {
      "fn": "Market.buyToken",
      "offset": [
        2147,
        2160
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "855": {
      "fn": "Market.buyToken",
      "offset": [
        2122,
        2136
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "857": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "DUP2",
      "path": "9"
    },
    "858": {
      "fn": "Market.buyToken",
      "offset": [
        2122,
        2136
      ],
      "op": "DUP2",
      "path": "9"
    },
    "859": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "DUP2",
      "path": "9"
    },
    "860": {
      "fn": "Market.buyToken",
      "offset": [
        2147,
        2160
      ],
      "op": "DUP6",
      "path": "9"
    },
    "861": {
      "fn": "Market.buyToken",
      "offset": [
        2122,
        2136
      ],
      "op": "DUP9",
      "path": "9"
    },
    "862": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "DUP9",
      "path": "9"
    },
    "863": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "CALL",
      "path": "9"
    },
    "864": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "865": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "POP",
      "path": "9"
    },
    "866": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "POP",
      "path": "9"
    },
    "867": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "POP",
      "path": "9"
    },
    "868": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "POP",
      "path": "9"
    },
    "869": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "870": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "DUP1",
      "path": "9"
    },
    "871": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "872": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x375"
    },
    "875": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "876": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "877": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "879": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "DUP1",
      "path": "9"
    },
    "880": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "881": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "882": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "884": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "REVERT",
      "path": "9"
    },
    "885": {
      "fn": "Market.buyToken",
      "offset": [
        2114,
        2161
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "886": {
      "op": "POP"
    },
    "887": {
      "fn": "Market.buyToken",
      "offset": [
        2242,
        2255
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 8,
      "value": "0x1"
    },
    "889": {
      "fn": "Market.buyToken",
      "offset": [
        2242,
        2255
      ],
      "op": "DUP2",
      "path": "9"
    },
    "890": {
      "fn": "Market.buyToken",
      "offset": [
        2242,
        2255
      ],
      "op": "ADD",
      "path": "9"
    },
    "891": {
      "fn": "Market.buyToken",
      "offset": [
        2242,
        2255
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "892": {
      "fn": "Market.buyToken",
      "offset": [
        2269,
        2284
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "894": {
      "fn": "Market.buyToken",
      "offset": [
        2269,
        2284
      ],
      "op": "DUP3",
      "path": "9"
    },
    "895": {
      "fn": "Market.buyToken",
      "offset": [
        2269,
        2284
      ],
      "op": "ADD",
      "path": "9"
    },
    "896": {
      "fn": "Market.buyToken",
      "offset": [
        2269,
        2284
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "897": {
      "fn": "Market.buyToken",
      "offset": [
        2298,
        2311
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "899": {
      "fn": "Market.buyToken",
      "offset": [
        2298,
        2311
      ],
      "op": "DUP4",
      "path": "9"
    },
    "900": {
      "fn": "Market.buyToken",
      "offset": [
        2298,
        2311
      ],
      "op": "ADD",
      "path": "9"
    },
    "901": {
      "fn": "Market.buyToken",
      "offset": [
        2298,
        2311
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "902": {
      "fn": "Market.buyToken",
      "offset": [
        2177,
        2321
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "904": {
      "fn": "Market.buyToken",
      "offset": [
        2177,
        2321
      ],
      "op": "DUP1",
      "path": "9"
    },
    "905": {
      "fn": "Market.buyToken",
      "offset": [
        2177,
        2321
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "906": {
      "op": "DUP7"
    },
    "907": {
      "op": "DUP2"
    },
    "908": {
      "op": "MSTORE"
    },
    "909": {
      "fn": "Market.buyToken",
      "offset": [
        2218,
        2228
      ],
      "op": "CALLER",
      "path": "9"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "912": {
      "op": "DUP3"
    },
    "913": {
      "op": "ADD"
    },
    "914": {
      "op": "MSTORE"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "921": {
      "op": "SHL"
    },
    "922": {
      "op": "SUB"
    },
    "923": {
      "fn": "Market.buyToken",
      "offset": [
        2242,
        2255
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "924": {
      "fn": "Market.buyToken",
      "offset": [
        2242,
        2255
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "925": {
      "fn": "Market.buyToken",
      "offset": [
        2242,
        2255
      ],
      "op": "AND",
      "path": "9"
    },
    "926": {
      "op": "SWAP1"
    },
    "927": {
      "op": "DUP5"
    },
    "928": {
      "op": "ADD"
    },
    "929": {
      "op": "MSTORE"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "932": {
      "op": "DUP4"
    },
    "933": {
      "op": "ADD"
    },
    "934": {
      "op": "SWAP2"
    },
    "935": {
      "op": "SWAP1"
    },
    "936": {
      "op": "SWAP2"
    },
    "937": {
      "op": "MSTORE"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "940": {
      "op": "DUP3"
    },
    "941": {
      "op": "ADD"
    },
    "942": {
      "op": "MSTORE"
    },
    "943": {
      "fn": "Market.buyToken",
      "offset": [
        2177,
        2321
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xF3DEBAF22196A6DDF52A60FA71058CD7EDF5E25BB98F4E96C994A5D4A9B0DD3E"
    },
    "976": {
      "fn": "Market.buyToken",
      "offset": [
        2177,
        2321
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "979": {
      "op": "ADD"
    },
    "980": {
      "fn": "Market.buyToken",
      "offset": [
        2177,
        2321
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "981": {
      "fn": "Market.buyToken",
      "offset": [
        2177,
        2321
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "983": {
      "fn": "Market.buyToken",
      "offset": [
        2177,
        2321
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "984": {
      "fn": "Market.buyToken",
      "offset": [
        2177,
        2321
      ],
      "op": "DUP1",
      "path": "9"
    },
    "985": {
      "fn": "Market.buyToken",
      "offset": [
        2177,
        2321
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "986": {
      "fn": "Market.buyToken",
      "offset": [
        2177,
        2321
      ],
      "op": "SUB",
      "path": "9"
    },
    "987": {
      "fn": "Market.buyToken",
      "offset": [
        2177,
        2321
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "988": {
      "fn": "Market.buyToken",
      "offset": [
        2177,
        2321
      ],
      "op": "LOG1",
      "path": "9"
    },
    "989": {
      "fn": "Market.buyToken",
      "offset": [
        1606,
        2328
      ],
      "op": "POP",
      "path": "9"
    },
    "990": {
      "fn": "Market.buyToken",
      "offset": [
        1552,
        2328
      ],
      "op": "POP",
      "path": "9"
    },
    "991": {
      "fn": "Market.buyToken",
      "jump": "o",
      "offset": [
        1552,
        2328
      ],
      "op": "JUMP",
      "path": "9"
    },
    "992": {
      "fn": "Market.cancel",
      "offset": [
        2334,
        2869
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "993": {
      "fn": "Market.cancel",
      "offset": [
        2386,
        2409
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "995": {
      "fn": "Market.cancel",
      "offset": [
        2412,
        2432
      ],
      "op": "DUP2",
      "path": "9"
    },
    "996": {
      "fn": "Market.cancel",
      "offset": [
        2412,
        2432
      ],
      "op": "DUP2",
      "path": "9"
    },
    "997": {
      "fn": "Market.cancel",
      "offset": [
        2412,
        2432
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "998": {
      "fn": "Market.cancel",
      "offset": [
        2412,
        2421
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1000": {
      "fn": "Market.cancel",
      "offset": [
        2412,
        2432
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1002": {
      "fn": "Market.cancel",
      "offset": [
        2412,
        2432
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1003": {
      "fn": "Market.cancel",
      "offset": [
        2412,
        2432
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1005": {
      "fn": "Market.cancel",
      "offset": [
        2412,
        2432
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1006": {
      "fn": "Market.cancel",
      "offset": [
        2412,
        2432
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1007": {
      "fn": "Market.cancel",
      "offset": [
        2465,
        2479
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 9
    },
    "1008": {
      "fn": "Market.cancel",
      "offset": [
        2465,
        2479
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1009": {
      "fn": "Market.cancel",
      "offset": [
        2465,
        2479
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "1012": {
      "fn": "Market.cancel",
      "offset": [
        2465,
        2479
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1013": {
      "fn": "Market.cancel",
      "offset": [
        2465,
        2479
      ],
      "op": "DIV",
      "path": "9"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1020": {
      "op": "SHL"
    },
    "1021": {
      "op": "SUB"
    },
    "1022": {
      "fn": "Market.cancel",
      "offset": [
        2465,
        2479
      ],
      "op": "AND",
      "path": "9"
    },
    "1023": {
      "fn": "Market.cancel",
      "offset": [
        2451,
        2461
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1024": {
      "branch": 21,
      "fn": "Market.cancel",
      "offset": [
        2451,
        2479
      ],
      "op": "EQ",
      "path": "9"
    },
    "1025": {
      "fn": "Market.cancel",
      "offset": [
        2443,
        2514
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x44C"
    },
    "1028": {
      "branch": 21,
      "fn": "Market.cancel",
      "offset": [
        2443,
        2514
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1029": {
      "fn": "Market.cancel",
      "offset": [
        2443,
        2514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1031": {
      "fn": "Market.cancel",
      "offset": [
        2443,
        2514
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1032": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "fn": "Market.cancel",
      "offset": [
        2443,
        2514
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1040": {
      "fn": "Market.cancel",
      "offset": [
        2443,
        2514
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1043": {
      "fn": "Market.cancel",
      "offset": [
        2443,
        2514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1045": {
      "fn": "Market.cancel",
      "offset": [
        2443,
        2514
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1046": {
      "fn": "Market.cancel",
      "offset": [
        2443,
        2514
      ],
      "op": "ADD",
      "path": "9"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1052": {
      "op": "DUP3"
    },
    "1053": {
      "op": "ADD"
    },
    "1054": {
      "op": "MSTORE"
    },
    "1055": {
      "op": "PUSH32",
      "value": "0x6F6E6C792073656C6C65722063616E2063616E63656C206C697374696E670000"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1090": {
      "op": "DUP3"
    },
    "1091": {
      "op": "ADD"
    },
    "1092": {
      "op": "MSTORE"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1095": {
      "op": "ADD"
    },
    "1096": {
      "fn": "Market.cancel",
      "offset": [
        2443,
        2514
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x207"
    },
    "1099": {
      "op": "JUMP"
    },
    "1100": {
      "fn": "Market.cancel",
      "offset": [
        2443,
        2514
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1101": {
      "fn": "Market.cancel",
      "offset": [
        2563,
        2583
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 10,
      "value": "0x0"
    },
    "1103": {
      "fn": "Market.cancel",
      "offset": [
        2545,
        2559
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1104": {
      "fn": "Market.cancel",
      "offset": [
        2545,
        2559
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1105": {
      "fn": "Market.cancel",
      "offset": [
        2545,
        2559
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "1107": {
      "fn": "Market.cancel",
      "offset": [
        2545,
        2559
      ],
      "op": "AND",
      "path": "9"
    },
    "1108": {
      "fn": "Market.cancel",
      "offset": [
        2545,
        2583
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1110": {
      "fn": "Market.cancel",
      "offset": [
        2545,
        2583
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1111": {
      "fn": "Market.cancel",
      "offset": [
        2545,
        2583
      ],
      "op": "GT",
      "path": "9"
    },
    "1112": {
      "fn": "Market.cancel",
      "offset": [
        2545,
        2583
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1113": {
      "fn": "Market.cancel",
      "offset": [
        2545,
        2583
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x464"
    },
    "1116": {
      "fn": "Market.cancel",
      "offset": [
        2545,
        2583
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1117": {
      "fn": "Market.cancel",
      "offset": [
        2545,
        2583
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x464"
    },
    "1120": {
      "fn": "Market.cancel",
      "offset": [
        2545,
        2583
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x720"
    },
    "1123": {
      "fn": "Market.cancel",
      "jump": "i",
      "offset": [
        2545,
        2583
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1124": {
      "fn": "Market.cancel",
      "offset": [
        2545,
        2583
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1125": {
      "branch": 22,
      "fn": "Market.cancel",
      "offset": [
        2545,
        2583
      ],
      "op": "EQ",
      "path": "9"
    },
    "1126": {
      "fn": "Market.cancel",
      "offset": [
        2524,
        2630
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4A9"
    },
    "1129": {
      "branch": 22,
      "fn": "Market.cancel",
      "offset": [
        2524,
        2630
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1130": {
      "fn": "Market.cancel",
      "offset": [
        2524,
        2630
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1132": {
      "fn": "Market.cancel",
      "offset": [
        2524,
        2630
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1133": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1139": {
      "op": "SHL"
    },
    "1140": {
      "fn": "Market.cancel",
      "offset": [
        2524,
        2630
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1141": {
      "fn": "Market.cancel",
      "offset": [
        2524,
        2630
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1144": {
      "fn": "Market.cancel",
      "offset": [
        2524,
        2630
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1146": {
      "fn": "Market.cancel",
      "offset": [
        2524,
        2630
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1147": {
      "fn": "Market.cancel",
      "offset": [
        2524,
        2630
      ],
      "op": "ADD",
      "path": "9"
    },
    "1148": {
      "op": "MSTORE"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1153": {
      "op": "DUP3"
    },
    "1154": {
      "op": "ADD"
    },
    "1155": {
      "op": "MSTORE"
    },
    "1156": {
      "op": "PUSH21",
      "value": "0x4C697374696E67206973206E6F7420616374697665"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "1180": {
      "op": "SHL"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1183": {
      "op": "DUP3"
    },
    "1184": {
      "op": "ADD"
    },
    "1185": {
      "op": "MSTORE"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "fn": "Market.cancel",
      "offset": [
        2524,
        2630
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x207"
    },
    "1192": {
      "op": "JUMP"
    },
    "1193": {
      "fn": "Market.cancel",
      "offset": [
        2524,
        2630
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1194": {
      "fn": "Market.cancel",
      "offset": [
        2641,
        2681
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 11
    },
    "1195": {
      "fn": "Market.cancel",
      "offset": [
        2641,
        2681
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1198": {
      "op": "NOT"
    },
    "1199": {
      "fn": "Market.cancel",
      "offset": [
        2641,
        2681
      ],
      "op": "AND",
      "path": "9"
    },
    "1200": {
      "fn": "Market.cancel",
      "offset": [
        2658,
        2681
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1202": {
      "fn": "Market.cancel",
      "offset": [
        2641,
        2681
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1203": {
      "fn": "Market.cancel",
      "offset": [
        2641,
        2681
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1204": {
      "fn": "Market.cancel",
      "offset": [
        2641,
        2681
      ],
      "op": "OR",
      "path": "9"
    },
    "1205": {
      "fn": "Market.cancel",
      "offset": [
        2641,
        2681
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1206": {
      "fn": "Market.cancel",
      "offset": [
        2641,
        2681
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1207": {
      "fn": "Market.cancel",
      "offset": [
        2641,
        2681
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1209": {
      "fn": "Market.cancel",
      "offset": [
        2700,
        2713
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 12
    },
    "1210": {
      "fn": "Market.cancel",
      "offset": [
        2700,
        2713
      ],
      "op": "ADD",
      "path": "9"
    },
    "1211": {
      "fn": "Market.cancel",
      "offset": [
        2700,
        2713
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1212": {
      "fn": "Market.cancel",
      "offset": [
        2792,
        2807
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1213": {
      "fn": "Market.cancel",
      "offset": [
        2792,
        2807
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1214": {
      "fn": "Market.cancel",
      "offset": [
        2792,
        2807
      ],
      "op": "ADD",
      "path": "9"
    },
    "1215": {
      "fn": "Market.cancel",
      "offset": [
        2792,
        2807
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1216": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1218": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1219": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1226": {
      "op": "SHL"
    },
    "1227": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1228": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1229": {
      "fn": "Market.cancel",
      "offset": [
        2749,
        2753
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "1230": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1232": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1233": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "ADD",
      "path": "9"
    },
    "1234": {
      "op": "MSTORE"
    },
    "1235": {
      "fn": "Market.cancel",
      "offset": [
        2768,
        2778
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1238": {
      "op": "DUP3"
    },
    "1239": {
      "op": "ADD"
    },
    "1240": {
      "op": "MSTORE"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1243": {
      "op": "DUP2"
    },
    "1244": {
      "op": "ADD"
    },
    "1245": {
      "op": "SWAP2"
    },
    "1246": {
      "op": "SWAP1"
    },
    "1247": {
      "op": "SWAP2"
    },
    "1248": {
      "op": "MSTORE"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1255": {
      "op": "SHL"
    },
    "1256": {
      "op": "SUB"
    },
    "1257": {
      "fn": "Market.cancel",
      "offset": [
        2700,
        2713
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1258": {
      "fn": "Market.cancel",
      "offset": [
        2700,
        2713
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1259": {
      "fn": "Market.cancel",
      "offset": [
        2700,
        2713
      ],
      "op": "AND",
      "path": "9"
    },
    "1260": {
      "fn": "Market.cancel",
      "offset": [
        2700,
        2713
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1261": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2727
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x23B872DD"
    },
    "1266": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2727
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1269": {
      "op": "ADD"
    },
    "1270": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1272": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1274": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1275": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1276": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1277": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "SUB",
      "path": "9"
    },
    "1278": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1279": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1281": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1282": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1283": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "1284": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1285": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1286": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1287": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x50F"
    },
    "1290": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1291": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1293": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1294": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1295": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1296": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "POP",
      "path": "9"
    },
    "1297": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "GAS",
      "path": "9"
    },
    "1298": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "CALL",
      "path": "9"
    },
    "1299": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1300": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1301": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1302": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x523"
    },
    "1305": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1306": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1307": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1309": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1310": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "1311": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1312": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1314": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1315": {
      "fn": "Market.cancel",
      "offset": [
        2692,
        2817
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1316": {
      "op": "POP"
    },
    "1317": {
      "op": "POP"
    },
    "1318": {
      "fn": "Market.cancel",
      "offset": [
        2833,
        2862
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 13,
      "value": "0x40"
    },
    "1320": {
      "fn": "Market.cancel",
      "offset": [
        2833,
        2862
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1321": {
      "fn": "Market.cancel",
      "offset": [
        2833,
        2862
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1322": {
      "op": "DUP6"
    },
    "1323": {
      "op": "DUP2"
    },
    "1324": {
      "op": "MSTORE"
    },
    "1325": {
      "fn": "Market.cancel",
      "offset": [
        2851,
        2861
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1328": {
      "op": "DUP3"
    },
    "1329": {
      "op": "ADD"
    },
    "1330": {
      "op": "MSTORE"
    },
    "1331": {
      "fn": "Market.cancel",
      "offset": [
        2833,
        2862
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x8DD3C361EB2366FF27C2DB0EB07B9261F1D052570742AB8C9A0C326F37AA576D"
    },
    "1364": {
      "fn": "Market.cancel",
      "offset": [
        2833,
        2862
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1365": {
      "op": "POP"
    },
    "1366": {
      "op": "ADD"
    },
    "1367": {
      "op": "SWAP1"
    },
    "1368": {
      "op": "POP"
    },
    "1369": {
      "fn": "Market.cancel",
      "offset": [
        2833,
        2862
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3D4"
    },
    "1372": {
      "op": "JUMP"
    },
    "1373": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1374": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 14,
      "value": "0x40"
    },
    "1376": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1377": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1384": {
      "op": "SHL"
    },
    "1385": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1386": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1387": {
      "fn": "Market.listToken",
      "offset": [
        946,
        956
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1388": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1390": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1391": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "ADD",
      "path": "9"
    },
    "1392": {
      "op": "MSTORE"
    },
    "1393": {
      "fn": "Market.listToken",
      "offset": [
        966,
        970
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1396": {
      "op": "DUP3"
    },
    "1397": {
      "op": "ADD"
    },
    "1398": {
      "op": "MSTORE"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1401": {
      "op": "DUP2"
    },
    "1402": {
      "op": "ADD"
    },
    "1403": {
      "op": "DUP4"
    },
    "1404": {
      "op": "SWAP1"
    },
    "1405": {
      "op": "MSTORE"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1412": {
      "op": "SHL"
    },
    "1413": {
      "op": "SUB"
    },
    "1414": {
      "fn": "Market.listToken",
      "offset": [
        918,
        945
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1415": {
      "fn": "Market.listToken",
      "offset": [
        918,
        945
      ],
      "op": "AND",
      "path": "9"
    },
    "1416": {
      "fn": "Market.listToken",
      "offset": [
        918,
        945
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1417": {
      "fn": "Market.listToken",
      "offset": [
        918,
        945
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x23B872DD"
    },
    "1422": {
      "fn": "Market.listToken",
      "offset": [
        918,
        945
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1425": {
      "op": "ADD"
    },
    "1426": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1428": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1430": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1431": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1432": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1433": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "SUB",
      "path": "9"
    },
    "1434": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1435": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1437": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1438": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1439": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "1440": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1441": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1442": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1443": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5AB"
    },
    "1446": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1447": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1449": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1450": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1451": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1452": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "POP",
      "path": "9"
    },
    "1453": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "GAS",
      "path": "9"
    },
    "1454": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "CALL",
      "path": "9"
    },
    "1455": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1456": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1457": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1458": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5BF"
    },
    "1461": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1462": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1463": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1465": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1466": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "1467": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1468": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1470": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1471": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1472": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "POP",
      "path": "9"
    },
    "1473": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "POP",
      "path": "9"
    },
    "1474": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "POP",
      "path": "9"
    },
    "1475": {
      "fn": "Market.listToken",
      "offset": [
        918,
        981
      ],
      "op": "POP",
      "path": "9"
    },
    "1476": {
      "fn": "Market.listToken",
      "offset": [
        991,
        1013
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1478": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1480": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1481": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1482": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "1484": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "ADD",
      "path": "9"
    },
    "1485": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1487": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1488": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1489": {
      "fn": "Market.listToken",
      "offset": [
        1037,
        1057
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1491": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1493": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1494": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "GT",
      "path": "9"
    },
    "1495": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1496": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5E3"
    },
    "1499": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1500": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5E3"
    },
    "1503": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x720"
    },
    "1506": {
      "fn": "Market.listToken",
      "jump": "i",
      "offset": [
        1016,
        1150
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1507": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1508": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1509": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1510": {
      "fn": "Market.listToken",
      "offset": [
        1071,
        1081
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1511": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1513": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1514": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "ADD",
      "path": "9"
    },
    "1515": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1525": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "AND",
      "path": "9"
    },
    "1526": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1528": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1529": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "ADD",
      "path": "9"
    },
    "1530": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1531": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "1533": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1534": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "ADD",
      "path": "9"
    },
    "1535": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1536": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1537": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1538": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "1540": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "ADD",
      "path": "9"
    },
    "1541": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1542": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1543": {
      "fn": "Market.listToken",
      "offset": [
        1016,
        1150
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1546": {
      "fn": "Market.listToken",
      "offset": [
        1161,
        1173
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 15
    },
    "1547": {
      "fn": "Market.listToken",
      "offset": [
        1161,
        1173
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1548": {
      "fn": "Market.listToken",
      "offset": [
        991,
        1150
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1549": {
      "fn": "Market.listToken",
      "offset": [
        991,
        1150
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1550": {
      "op": "POP"
    },
    "1551": {
      "op": "DUP1"
    },
    "1552": {
      "fn": "Market.listToken",
      "offset": [
        1161,
        1173
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x618"
    },
    "1555": {
      "fn": "Market.listToken",
      "offset": [
        1161,
        1173
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1556": {
      "fn": "Market.listToken",
      "offset": [
        1161,
        1173
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7DC"
    },
    "1559": {
      "fn": "Market.listToken",
      "jump": "i",
      "offset": [
        1161,
        1173
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1560": {
      "fn": "Market.listToken",
      "offset": [
        1161,
        1173
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1561": {
      "fn": "Market.listToken",
      "offset": [
        1161,
        1173
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1562": {
      "fn": "Market.listToken",
      "offset": [
        1161,
        1173
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1563": {
      "fn": "Market.listToken",
      "offset": [
        1161,
        1173
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1564": {
      "op": "POP"
    },
    "1565": {
      "op": "POP"
    },
    "1566": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 16,
      "value": "0x0"
    },
    "1568": {
      "fn": "Market.listToken",
      "offset": [
        1194,
        1204
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1569": {
      "fn": "Market.listToken",
      "offset": [
        1194,
        1204
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1570": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1205
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1571": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1205
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1572": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1193
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1574": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1576": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1205
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1577": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1205
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1578": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1205
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1579": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1581": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1205
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1582": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1205
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1583": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1205
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1584": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1585": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1586": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1587": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1588": {
      "fn": "Market.listToken",
      "offset": [
        1208,
        1215
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1589": {
      "fn": "Market.listToken",
      "offset": [
        1208,
        1215
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1590": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1205
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1591": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1205
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1594": {
      "op": "NOT"
    },
    "1595": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "AND",
      "path": "9"
    },
    "1596": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1597": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1598": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1600": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1601": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "GT",
      "path": "9"
    },
    "1602": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1603": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x64E"
    },
    "1606": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1607": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x64E"
    },
    "1610": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x720"
    },
    "1613": {
      "fn": "Market.listToken",
      "jump": "i",
      "offset": [
        1184,
        1215
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1614": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1615": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "MUL",
      "path": "9"
    },
    "1616": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "OR",
      "path": "9"
    },
    "1617": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1618": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1619": {
      "op": "POP"
    },
    "1620": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1622": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1623": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1624": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "ADD",
      "path": "9"
    },
    "1625": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1626": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1627": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1628": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "op": "SUB"
    },
    "1637": {
      "op": "NOT"
    },
    "1638": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "AND",
      "path": "9"
    },
    "1639": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1648": {
      "op": "SHL"
    },
    "1649": {
      "op": "SUB"
    },
    "1650": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1651": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1652": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "AND",
      "path": "9"
    },
    "1653": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "MUL",
      "path": "9"
    },
    "1654": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "OR",
      "path": "9"
    },
    "1655": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1656": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1657": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1659": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1660": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1661": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "ADD",
      "path": "9"
    },
    "1662": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1665": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1666": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "ADD",
      "path": "9"
    },
    "1667": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1668": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "op": "SUB"
    },
    "1677": {
      "op": "NOT"
    },
    "1678": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "AND",
      "path": "9"
    },
    "1679": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1680": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1681": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "AND",
      "path": "9"
    },
    "1682": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1683": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1684": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1685": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "OR",
      "path": "9"
    },
    "1686": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1687": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1688": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "1690": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1691": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1692": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "ADD",
      "path": "9"
    },
    "1693": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1694": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1696": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1697": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "ADD",
      "path": "9"
    },
    "1698": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1699": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "1701": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "1702": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1703": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "ADD",
      "path": "9"
    },
    "1704": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1705": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1707": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1708": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "1709": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "ADD",
      "path": "9"
    },
    "1710": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "1711": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1712": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "1713": {
      "fn": "Market.listToken",
      "offset": [
        1184,
        1215
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1716": {
      "fn": "Market.listToken",
      "offset": [
        1238,
        1248
      ],
      "op": "SLOAD",
      "path": "9",
      "statement": 17
    },
    "1717": {
      "fn": "Market.listToken",
      "offset": [
        1231,
        1284
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1718": {
      "fn": "Market.listToken",
      "offset": [
        1231,
        1284
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1719": {
      "op": "SWAP1"
    },
    "1720": {
      "op": "DUP2"
    },
    "1721": {
      "op": "MSTORE"
    },
    "1722": {
      "fn": "Market.listToken",
      "offset": [
        1250,
        1260
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1723": {
      "op": "SWAP4"
    },
    "1724": {
      "op": "DUP2"
    },
    "1725": {
      "op": "ADD"
    },
    "1726": {
      "op": "SWAP4"
    },
    "1727": {
      "op": "SWAP1"
    },
    "1728": {
      "op": "SWAP4"
    },
    "1729": {
      "op": "MSTORE"
    },
    "1730": {
      "op": "SWAP1"
    },
    "1731": {
      "op": "DUP9"
    },
    "1732": {
      "op": "AND"
    },
    "1733": {
      "op": "SWAP1"
    },
    "1734": {
      "op": "DUP3"
    },
    "1735": {
      "op": "ADD"
    },
    "1736": {
      "op": "MSTORE"
    },
    "1737": {
      "op": "SWAP1"
    },
    "1738": {
      "op": "DUP2"
    },
    "1739": {
      "op": "ADD"
    },
    "1740": {
      "op": "DUP6"
    },
    "1741": {
      "op": "SWAP1"
    },
    "1742": {
      "op": "MSTORE"
    },
    "1743": {
      "op": "SWAP1"
    },
    "1744": {
      "op": "DUP2"
    },
    "1745": {
      "op": "ADD"
    },
    "1746": {
      "op": "DUP4"
    },
    "1747": {
      "op": "SWAP1"
    },
    "1748": {
      "op": "MSTORE"
    },
    "1749": {
      "fn": "Market.listToken",
      "offset": [
        1231,
        1284
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x723F73331EAEE88EEC7FC68EF60AB6ED15E4B90D0472B55EB92FA43910BAB6DD"
    },
    "1782": {
      "fn": "Market.listToken",
      "offset": [
        1231,
        1284
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1785": {
      "op": "ADD"
    },
    "1786": {
      "fn": "Market.listToken",
      "offset": [
        1231,
        1284
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1788": {
      "fn": "Market.listToken",
      "offset": [
        1231,
        1284
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1789": {
      "fn": "Market.listToken",
      "offset": [
        1231,
        1284
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1790": {
      "fn": "Market.listToken",
      "offset": [
        1231,
        1284
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1791": {
      "fn": "Market.listToken",
      "offset": [
        1231,
        1284
      ],
      "op": "SUB",
      "path": "9"
    },
    "1792": {
      "fn": "Market.listToken",
      "offset": [
        1231,
        1284
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1793": {
      "fn": "Market.listToken",
      "offset": [
        1231,
        1284
      ],
      "op": "LOG1",
      "path": "9"
    },
    "1794": {
      "fn": "Market.listToken",
      "offset": [
        908,
        1291
      ],
      "op": "POP",
      "path": "9"
    },
    "1795": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "POP",
      "path": "9"
    },
    "1796": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "POP",
      "path": "9"
    },
    "1797": {
      "fn": "Market.listToken",
      "offset": [
        803,
        1291
      ],
      "op": "POP",
      "path": "9"
    },
    "1798": {
      "fn": "Market.listToken",
      "jump": "o",
      "offset": [
        803,
        1291
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1799": {
      "op": "JUMPDEST"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1804": {
      "op": "DUP3"
    },
    "1805": {
      "op": "DUP5"
    },
    "1806": {
      "op": "SUB"
    },
    "1807": {
      "op": "SLT"
    },
    "1808": {
      "op": "ISZERO"
    },
    "1809": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "1812": {
      "op": "JUMPI"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1815": {
      "op": "DUP1"
    },
    "1816": {
      "op": "REVERT"
    },
    "1817": {
      "op": "JUMPDEST"
    },
    "1818": {
      "op": "POP"
    },
    "1819": {
      "op": "CALLDATALOAD"
    },
    "1820": {
      "op": "SWAP2"
    },
    "1821": {
      "op": "SWAP1"
    },
    "1822": {
      "op": "POP"
    },
    "1823": {
      "jump": "o",
      "op": "JUMP"
    },
    "1824": {
      "op": "JUMPDEST"
    },
    "1825": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1832": {
      "op": "SHL"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1835": {
      "op": "MSTORE"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1840": {
      "op": "MSTORE"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1845": {
      "op": "REVERT"
    },
    "1846": {
      "op": "JUMPDEST"
    },
    "1847": {
      "op": "DUP2"
    },
    "1848": {
      "op": "MLOAD"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1851": {
      "op": "DUP3"
    },
    "1852": {
      "op": "ADD"
    },
    "1853": {
      "op": "SWAP1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1856": {
      "op": "DUP2"
    },
    "1857": {
      "op": "LT"
    },
    "1858": {
      "op": "PUSH2",
      "value": "0x75B"
    },
    "1861": {
      "op": "JUMPI"
    },
    "1862": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1869": {
      "op": "SHL"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1872": {
      "op": "MSTORE"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1877": {
      "op": "MSTORE"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1882": {
      "op": "REVERT"
    },
    "1883": {
      "op": "JUMPDEST"
    },
    "1884": {
      "op": "DUP1"
    },
    "1885": {
      "op": "DUP4"
    },
    "1886": {
      "op": "MSTORE"
    },
    "1887": {
      "op": "POP"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1890": {
      "op": "DUP4"
    },
    "1891": {
      "op": "ADD"
    },
    "1892": {
      "op": "MLOAD"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "DUP1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1898": {
      "op": "SHL"
    },
    "1899": {
      "op": "SUB"
    },
    "1900": {
      "op": "DUP1"
    },
    "1901": {
      "op": "DUP3"
    },
    "1902": {
      "op": "AND"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1905": {
      "op": "DUP6"
    },
    "1906": {
      "op": "ADD"
    },
    "1907": {
      "op": "MSTORE"
    },
    "1908": {
      "op": "DUP1"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1911": {
      "op": "DUP7"
    },
    "1912": {
      "op": "ADD"
    },
    "1913": {
      "op": "MLOAD"
    },
    "1914": {
      "op": "AND"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1917": {
      "op": "DUP6"
    },
    "1918": {
      "op": "ADD"
    },
    "1919": {
      "op": "MSTORE"
    },
    "1920": {
      "op": "POP"
    },
    "1921": {
      "op": "POP"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1924": {
      "op": "DUP4"
    },
    "1925": {
      "op": "ADD"
    },
    "1926": {
      "op": "MLOAD"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1929": {
      "op": "DUP4"
    },
    "1930": {
      "op": "ADD"
    },
    "1931": {
      "op": "MSTORE"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1934": {
      "op": "DUP4"
    },
    "1935": {
      "op": "ADD"
    },
    "1936": {
      "op": "MLOAD"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1939": {
      "op": "DUP4"
    },
    "1940": {
      "op": "ADD"
    },
    "1941": {
      "op": "MSTORE"
    },
    "1942": {
      "op": "SWAP3"
    },
    "1943": {
      "op": "SWAP2"
    },
    "1944": {
      "op": "POP"
    },
    "1945": {
      "op": "POP"
    },
    "1946": {
      "jump": "o",
      "op": "JUMP"
    },
    "1947": {
      "op": "JUMPDEST"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1950": {
      "op": "DUP1"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1955": {
      "op": "DUP5"
    },
    "1956": {
      "op": "DUP7"
    },
    "1957": {
      "op": "SUB"
    },
    "1958": {
      "op": "SLT"
    },
    "1959": {
      "op": "ISZERO"
    },
    "1960": {
      "op": "PUSH2",
      "value": "0x7B0"
    },
    "1963": {
      "op": "JUMPI"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1966": {
      "op": "DUP1"
    },
    "1967": {
      "op": "REVERT"
    },
    "1968": {
      "op": "JUMPDEST"
    },
    "1969": {
      "op": "DUP4"
    },
    "1970": {
      "op": "CALLDATALOAD"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1977": {
      "op": "SHL"
    },
    "1978": {
      "op": "SUB"
    },
    "1979": {
      "op": "DUP2"
    },
    "1980": {
      "op": "AND"
    },
    "1981": {
      "op": "DUP2"
    },
    "1982": {
      "op": "EQ"
    },
    "1983": {
      "op": "PUSH2",
      "value": "0x7C7"
    },
    "1986": {
      "op": "JUMPI"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1989": {
      "op": "DUP1"
    },
    "1990": {
      "op": "REVERT"
    },
    "1991": {
      "op": "JUMPDEST"
    },
    "1992": {
      "op": "SWAP6"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1995": {
      "op": "DUP6"
    },
    "1996": {
      "op": "ADD"
    },
    "1997": {
      "op": "CALLDATALOAD"
    },
    "1998": {
      "op": "SWAP6"
    },
    "1999": {
      "op": "POP"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2002": {
      "op": "SWAP1"
    },
    "2003": {
      "op": "SWAP5"
    },
    "2004": {
      "op": "ADD"
    },
    "2005": {
      "op": "CALLDATALOAD"
    },
    "2006": {
      "op": "SWAP4"
    },
    "2007": {
      "op": "SWAP3"
    },
    "2008": {
      "op": "POP"
    },
    "2009": {
      "op": "POP"
    },
    "2010": {
      "op": "POP"
    },
    "2011": {
      "jump": "o",
      "op": "JUMP"
    },
    "2012": {
      "op": "JUMPDEST"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2017": {
      "op": "NOT"
    },
    "2018": {
      "op": "DUP3"
    },
    "2019": {
      "op": "EQ"
    },
    "2020": {
      "op": "ISZERO"
    },
    "2021": {
      "op": "PUSH2",
      "value": "0x7FE"
    },
    "2024": {
      "op": "JUMPI"
    },
    "2025": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2032": {
      "op": "SHL"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2035": {
      "op": "MSTORE"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2040": {
      "op": "MSTORE"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2045": {
      "op": "REVERT"
    },
    "2046": {
      "op": "JUMPDEST"
    },
    "2047": {
      "op": "POP"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2050": {
      "op": "ADD"
    },
    "2051": {
      "op": "SWAP1"
    },
    "2052": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "74b2221d05b7debcf125f40c91b1bc74bdabe750",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\ncontract Market {\n    enum ListingStatus {\n        Active,\n        Sold,\n        Cancelled\n    }\n    struct Listing {\n        ListingStatus status;\n        address seller;\n        address token;\n        uint256 tokenId;\n        uint256 price;\n    }\n\n    event Listed(\n        uint256 listingId,\n        address seller,\n        address token,\n        uint256 tokenId,\n        uint256 price\n    );\n    event Sale(\n        uint256 listingId,\n        address buyer,\n        address token,\n        uint256 tokenId,\n        uint256 price\n    );\n    event Cancel(uint256 listingId, address seller);\n\n    uint256 private _listingId = 0;\n    mapping(uint256 => Listing) private _listings;\n\n    function listToken(\n        address token,\n        uint256 tokenId,\n        uint256 price\n    ) external {\n        IERC721(token).transferFrom(msg.sender, address(this), tokenId);\n        Listing memory listing = Listing(\n            ListingStatus.Active,\n            msg.sender,\n            token,\n            tokenId,\n            price\n        );\n\n        _listingId++;\n\n        _listings[_listingId] = listing;\n\n        emit Listed(_listingId, msg.sender, token, tokenId, price);\n    }\n\n    function getListing(uint256 listingId)\n        external\n        view\n        returns (Listing memory)\n    {\n        return _listings[listingId];\n    }\n\n    function getAmoutListing() external view returns (uint256) {\n        return _listingId;\n    }\n\n    function buyToken(uint256 listingId) external payable {\n        Listing storage listing = _listings[listingId];\n\n        require(msg.sender != listing.seller, \"Seller cannot be buyer\");\n        require(\n            listing.status == ListingStatus.Active,\n            \"Listing is not active\"\n        );\n\n        require(msg.value >= listing.price, \"Insufficient paymen\");\n\n        listing.status = ListingStatus.Sold;\n\n        IERC721(listing.token).transferFrom(\n            address(this),\n            msg.sender,\n            listing.tokenId\n        );\n\n        payable(listing.seller).transfer(listing.price);\n\n        emit Sale(\n            listingId,\n            msg.sender,\n            listing.token,\n            listing.tokenId,\n            listing.price\n        );\n    }\n\n    function cancel(uint256 listingId) public {\n        Listing storage listing = _listings[listingId];\n\n        require(msg.sender == listing.seller, \"only seller can cancel listing\");\n        require(\n            listing.status == ListingStatus.Active,\n            \"Listing is not active\"\n        );\n\n        listing.status = ListingStatus.Cancelled;\n\n        IERC721(listing.token).transferFrom(\n            address(this),\n            msg.sender,\n            listing.tokenId\n        );\n\n        emit Cancel(listingId, msg.sender);\n    }\n}\n",
  "sourceMap": "118:2753:9:-:0;;;744:1;715:30;;118:2753;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Market.sol",
  "type": "contract"
}