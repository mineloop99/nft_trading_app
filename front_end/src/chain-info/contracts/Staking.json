{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC721",
          "name": "_nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_apr",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_usdPerNftRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        }
      ],
      "name": "EnterStaking",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        }
      ],
      "name": "LeaveStaking",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BONUS_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_to",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userHasBeenWithdrawn",
          "type": "uint256"
        }
      ],
      "name": "calculateRewardDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "enterStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "leaveStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "safeNftTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_apr",
          "type": "uint256"
        }
      ],
      "name": "setapr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingInfo",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "rewardToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC721",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "usdPerNftRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "apr",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "multiplierNumber",
          "type": "uint256"
        }
      ],
      "name": "updateMultiplier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardHasBeenWithdrawn",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
    "1": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/Pausable.sol",
    "2": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/ReentrancyGuard.sol",
    "3": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
    "4": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "5": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
    "6": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Address.sol",
    "7": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "8": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/IERC165.sol",
    "9": "contracts/Staking.sol"
  },
  "ast": {
    "absolutePath": "contracts/Staking.sol",
    "exportedSymbols": {
      "Address": [
        1423
      ],
      "Context": [
        1048
      ],
      "IERC165": [
        1435
      ],
      "IERC20": [
        1126
      ],
      "IERC721": [
        1026
      ],
      "Ownable": [
        554
      ],
      "Pausable": [
        646
      ],
      "ReentrancyGuard": [
        686
      ],
      "SafeERC20": [
        910
      ],
      "Staking": [
        450
      ]
    },
    "id": 451,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:9"
      },
      {
        "absolutePath": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 555,
        "src": "58:52:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 911,
        "src": "111:65:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 1027,
        "src": "177:58:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 647,
        "src": "236:55:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/hungp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 687,
        "src": "292:62:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 554,
              "src": "376:7:9"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "376:7:9"
          },
          {
            "baseName": {
              "id": 9,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 646,
              "src": "385:8:9"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "385:8:9"
          },
          {
            "baseName": {
              "id": 11,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 686,
              "src": "395:15:9"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "395:15:9"
          }
        ],
        "canonicalName": "Staking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 450,
        "linearizedBaseContracts": [
          450,
          686,
          646,
          554,
          1048
        ],
        "name": "Staking",
        "nameLocation": "365:7:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 16,
            "libraryName": {
              "id": 13,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 910,
              "src": "423:9:9"
            },
            "nodeType": "UsingForDirective",
            "src": "417:27:9",
            "typeName": {
              "id": 15,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1126,
                "src": "437:6:9"
              },
              "referencedDeclaration": 1126,
              "src": "437:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1126",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 21,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nameLocation": "473:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "449:62:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 17,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "449:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041555345525f524f4c45",
                  "id": 19,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "497:13:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 18,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "487:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "487:24:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Staking.UserInfo",
            "id": 29,
            "members": [
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "nftStaked",
                "nameLocation": "579:9:9",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "569:19:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 22,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23,
                  "nodeType": "ArrayTypeName",
                  "src": "569:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "606:9:9",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "598:17:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "598:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "rewardHasBeenWithdrawn",
                "nameLocation": "670:22:9",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "662:30:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "662:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nameLocation": "550:8:9",
            "nodeType": "StructDefinition",
            "scope": 450,
            "src": "543:172:9",
            "visibility": "public"
          },
          {
            "canonicalName": "Staking.StakingInfo",
            "id": 42,
            "members": [
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "rewardToken",
                "nameLocation": "783:11:9",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "776:18:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$1126",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 31,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 30,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1126,
                    "src": "776:6:9"
                  },
                  "referencedDeclaration": 1126,
                  "src": "776:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1126",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "nftContract",
                "nameLocation": "845:11:9",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "837:19:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC721_$1026",
                  "typeString": "contract IERC721"
                },
                "typeName": {
                  "id": 34,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 33,
                    "name": "IERC721",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1026,
                    "src": "837:7:9"
                  },
                  "referencedDeclaration": 1026,
                  "src": "837:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$1026",
                    "typeString": "contract IERC721"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "usdPerNftRate",
                "nameLocation": "874:13:9",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "866:21:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "866:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "apr",
                "nameLocation": "905:3:9",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "897:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "897:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "961:9:9",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "953:17:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "953:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingInfo",
            "nameLocation": "754:11:9",
            "nodeType": "StructDefinition",
            "scope": 450,
            "src": "747:230:9",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8aa28550",
            "id": 45,
            "mutability": "mutable",
            "name": "BONUS_MULTIPLIER",
            "nameLocation": "1043:16:9",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "1028:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1028:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 44,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1062:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "703ec8c4",
            "id": 48,
            "mutability": "mutable",
            "name": "stakingInfo",
            "nameLocation": "1115:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "1096:30:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_StakingInfo_$42_storage",
              "typeString": "struct Staking.StakingInfo"
            },
            "typeName": {
              "id": 47,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46,
                "name": "StakingInfo",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42,
                "src": "1096:11:9"
              },
              "referencedDeclaration": 42,
              "src": "1096:11:9",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StakingInfo_$42_storage_ptr",
                "typeString": "struct Staking.StakingInfo"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1959a002",
            "id": 53,
            "mutability": "mutable",
            "name": "userInfo",
            "nameLocation": "1216:8:9",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "1180:44:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$29_storage_$",
              "typeString": "mapping(address => struct Staking.UserInfo)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 49,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1188:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1180:28:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$29_storage_$",
                "typeString": "mapping(address => struct Staking.UserInfo)"
              },
              "valueType": {
                "id": 51,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 50,
                  "name": "UserInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29,
                  "src": "1199:8:9"
                },
                "referencedDeclaration": 29,
                "src": "1199:8:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                  "typeString": "struct Staking.UserInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 59,
            "name": "EnterStaking",
            "nameLocation": "1237:12:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1266:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "1250:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1280:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "1272:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1272:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1249:37:9"
            },
            "src": "1231:56:9"
          },
          {
            "anonymous": false,
            "id": 65,
            "name": "LeaveStaking",
            "nameLocation": "1298:12:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1327:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1311:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1341:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1333:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1310:37:9"
            },
            "src": "1292:56:9"
          },
          {
            "anonymous": false,
            "id": 71,
            "name": "ClaimReward",
            "nameLocation": "1359:11:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1387:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1371:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1401:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1393:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1370:38:9"
            },
            "src": "1353:56:9"
          },
          {
            "anonymous": false,
            "id": 77,
            "name": "EmergencyWithdraw",
            "nameLocation": "1420:17:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1454:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "1438:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1468:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "1460:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1437:37:9"
            },
            "src": "1414:61:9"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1634:263:9",
              "statements": [
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 90,
                      "name": "stakingInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1668:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$42_storage",
                        "typeString": "struct Staking.StakingInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 92,
                          "name": "_rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "1721:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1126",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 93,
                          "name": "_apr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "1752:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 94,
                          "name": "_usdPerNftRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "1785:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 95,
                          "name": "_nftContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "1826:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC721_$1026",
                            "typeString": "contract IERC721"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 96,
                            "name": "getCurrentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 431,
                            "src": "1863:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1863:16:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1126",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC721_$1026",
                            "typeString": "contract IERC721"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 91,
                        "name": "StakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1682:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StakingInfo_$42_storage_ptr_$",
                          "typeString": "type(struct Staking.StakingInfo storage pointer)"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "rewardToken",
                        "apr",
                        "usdPerNftRate",
                        "nftContract",
                        "startTime"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1682:208:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$42_memory_ptr",
                        "typeString": "struct Staking.StakingInfo memory"
                      }
                    },
                    "src": "1668:222:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$42_storage",
                      "typeString": "struct Staking.StakingInfo storage ref"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1668:222:9"
                }
              ]
            },
            "id": 102,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "1509:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1502:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1126",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 79,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1126,
                      "src": "1502:6:9"
                    },
                    "referencedDeclaration": 1126,
                    "src": "1502:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1126",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_nftContract",
                  "nameLocation": "1539:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1531:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$1026",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 82,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 81,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1026,
                      "src": "1531:7:9"
                    },
                    "referencedDeclaration": 1026,
                    "src": "1531:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$1026",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_apr",
                  "nameLocation": "1569:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1561:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "_usdPerNftRate",
                  "nameLocation": "1613:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1605:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1492:141:9"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1634:0:9"
            },
            "scope": 450,
            "src": "1481:416:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1972:52:9",
              "statements": [
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "BONUS_MULTIPLIER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1982:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 110,
                      "name": "multiplierNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "2001:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1982:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1982:35:9"
                }
              ]
            },
            "functionSelector": "5ffe6146",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 107,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 106,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 497,
                  "src": "1962:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1962:9:9"
              }
            ],
            "name": "updateMultiplier",
            "nameLocation": "1912:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "multiplierNumber",
                  "nameLocation": "1937:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1929:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1928:26:9"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1972:0:9"
            },
            "scope": 450,
            "src": "1903:121:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "2150:39:9",
              "statements": [
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 121,
                        "name": "stakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2160:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$42_storage",
                          "typeString": "struct Staking.StakingInfo storage ref"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "apr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "2160:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 124,
                      "name": "_apr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "2178:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2160:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2160:22:9"
                }
              ]
            },
            "functionSelector": "98327702",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 119,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 118,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 497,
                  "src": "2140:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2140:9:9"
              }
            ],
            "name": "setapr",
            "nameLocation": "2112:6:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_apr",
                  "nameLocation": "2127:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "2119:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2119:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2118:14:9"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2150:0:9"
            },
            "scope": 450,
            "src": "2103:86:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "2288:378:9",
              "statements": [
                {
                  "assignments": [
                    137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 137,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "2315:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 187,
                      "src": "2298:21:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                        "typeString": "struct Staking.UserInfo"
                      },
                      "typeName": {
                        "id": 136,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 135,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "2298:8:9"
                        },
                        "referencedDeclaration": 29,
                        "src": "2298:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                          "typeString": "struct Staking.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 142,
                  "initialValue": {
                    "baseExpression": {
                      "id": 138,
                      "name": "userInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "2322:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$29_storage_$",
                        "typeString": "mapping(address => struct Staking.UserInfo storage ref)"
                      }
                    },
                    "id": 141,
                    "indexExpression": {
                      "expression": {
                        "id": 139,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2331:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2331:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2322:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$29_storage",
                      "typeString": "struct Staking.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2298:44:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 150,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2414:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2414:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2406:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 148,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2406:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2406:19:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 155,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2447:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$450",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$450",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2439:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 153,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2439:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2439:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 157,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "2466:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 143,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "2352:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$42_storage",
                            "typeString": "struct Staking.StakingInfo storage ref"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35,
                        "src": "2352:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$1026",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 969,
                      "src": "2352:40:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2352:130:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2352:130:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 165,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "2512:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 160,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 137,
                          "src": "2492:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                            "typeString": "struct Staking.UserInfo storage pointer"
                          }
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftStaked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2492:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2492:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2492:27:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "2492:27:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 168,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "2533:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                          "typeString": "struct Staking.UserInfo storage pointer"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "2533:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2551:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2533:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 180,
                  "nodeType": "IfStatement",
                  "src": "2529:83:9",
                  "trueBody": {
                    "id": 179,
                    "nodeType": "Block",
                    "src": "2554:58:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 172,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 137,
                              "src": "2568:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                                "typeString": "struct Staking.UserInfo storage pointer"
                              }
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "startTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "2568:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 175,
                              "name": "getCurrentTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "2585:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2585:16:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2568:33:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 178,
                        "nodeType": "ExpressionStatement",
                        "src": "2568:33:9"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2640:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2640:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 184,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "2652:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 181,
                      "name": "EnterStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "2627:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2627:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "EmitStatement",
                  "src": "2622:37:9"
                }
              ]
            },
            "functionSelector": "41441d3b",
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 133,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 132,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 685,
                  "src": "2275:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2275:12:9"
              }
            ],
            "name": "enterStaking",
            "nameLocation": "2239:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "2260:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "2252:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2252:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2251:16:9"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2288:0:9"
            },
            "scope": 450,
            "src": "2230:436:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "2775:516:9",
              "statements": [
                {
                  "assignments": [
                    197
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 197,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "2802:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "2785:21:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                        "typeString": "struct Staking.UserInfo"
                      },
                      "typeName": {
                        "id": 196,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 195,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "2785:8:9"
                        },
                        "referencedDeclaration": 29,
                        "src": "2785:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                          "typeString": "struct Staking.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 202,
                  "initialValue": {
                    "baseExpression": {
                      "id": 198,
                      "name": "userInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "2809:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$29_storage_$",
                        "typeString": "mapping(address => struct Staking.UserInfo storage ref)"
                      }
                    },
                    "id": 201,
                    "indexExpression": {
                      "expression": {
                        "id": 199,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2818:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2818:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2809:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$29_storage",
                      "typeString": "struct Staking.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2785:44:9"
                },
                {
                  "body": {
                    "id": 232,
                    "nodeType": "Block",
                    "src": "2958:176:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 222,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3034:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Staking_$450",
                                    "typeString": "contract Staking"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Staking_$450",
                                    "typeString": "contract Staking"
                                  }
                                ],
                                "id": 221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3026:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 220,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3026:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3026:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 224,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3057:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3057:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 226,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 197,
                                  "src": "3085:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                                    "typeString": "struct Staking.UserInfo storage pointer"
                                  }
                                },
                                "id": 227,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStaked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24,
                                "src": "3085:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 229,
                              "indexExpression": {
                                "id": 228,
                                "name": "nftIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 204,
                                "src": "3100:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3085:24:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 215,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "2972:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakingInfo_$42_storage",
                                  "typeString": "struct Staking.StakingInfo storage ref"
                                }
                              },
                              "id": 218,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nftContract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35,
                              "src": "2972:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$1026",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 979,
                            "src": "2972:36:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2972:151:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 231,
                        "nodeType": "ExpressionStatement",
                        "src": "2972:151:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 207,
                      "name": "nftIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "2891:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 208,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 197,
                          "src": "2902:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                            "typeString": "struct Staking.UserInfo storage pointer"
                          }
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftStaked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2902:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2902:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2891:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 233,
                  "initializationExpression": {
                    "assignments": [
                      204
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 204,
                        "mutability": "mutable",
                        "name": "nftIndex",
                        "nameLocation": "2865:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "2857:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2857:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 206,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2876:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2857:20:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2937:10:9",
                      "subExpression": {
                        "id": 212,
                        "name": "nftIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "2937:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 214,
                    "nodeType": "ExpressionStatement",
                    "src": "2937:10:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "2839:295:9"
                },
                {
                  "assignments": [
                    238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 238,
                      "mutability": "mutable",
                      "name": "_temp",
                      "nameLocation": "3160:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "3143:22:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 236,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3143:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 237,
                        "nodeType": "ArrayTypeName",
                        "src": "3143:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 239,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3143:22:9"
                },
                {
                  "expression": {
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 240,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "3175:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                          "typeString": "struct Staking.UserInfo storage pointer"
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nftStaked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3175:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 243,
                      "name": "_temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 238,
                      "src": "3192:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3175:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "3175:22:9"
                },
                {
                  "assignments": [
                    247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 247,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3215:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "3207:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 246,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3207:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 248,
                      "name": "claimReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "3224:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3224:13:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3207:30:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 252,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3265:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3265:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 254,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "3277:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 251,
                      "name": "LeaveStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "3252:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3252:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "EmitStatement",
                  "src": "3247:37:9"
                }
              ]
            },
            "functionSelector": "99fcfccb",
            "id": 258,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 191,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 190,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 602,
                  "src": "2748:13:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2748:13:9"
              },
              {
                "id": 193,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 192,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 685,
                  "src": "2762:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2762:12:9"
              }
            ],
            "name": "leaveStaking",
            "nameLocation": "2726:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2738:2:9"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2775:0:9"
            },
            "scope": 450,
            "src": "2717:574:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "3394:514:9",
              "statements": [
                {
                  "assignments": [
                    269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 269,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "3421:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "3404:21:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                        "typeString": "struct Staking.UserInfo"
                      },
                      "typeName": {
                        "id": 268,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 267,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "3404:8:9"
                        },
                        "referencedDeclaration": 29,
                        "src": "3404:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                          "typeString": "struct Staking.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 274,
                  "initialValue": {
                    "baseExpression": {
                      "id": 270,
                      "name": "userInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "3428:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$29_storage_$",
                        "typeString": "mapping(address => struct Staking.UserInfo storage ref)"
                      }
                    },
                    "id": 273,
                    "indexExpression": {
                      "expression": {
                        "id": 271,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3437:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3437:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3428:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$29_storage",
                      "typeString": "struct Staking.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3404:44:9"
                },
                {
                  "assignments": [
                    276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 276,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3467:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "3459:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 275,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3459:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 291,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 278,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "3509:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                            "typeString": "struct Staking.UserInfo storage pointer"
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "3509:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 280,
                          "name": "getCurrentTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "3537:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3537:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 282,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 269,
                              "src": "3567:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                                "typeString": "struct Staking.UserInfo storage pointer"
                              }
                            },
                            "id": 283,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftStaked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "3567:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3567:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 285,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "3591:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$42_storage",
                              "typeString": "struct Staking.StakingInfo storage ref"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "usdPerNftRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37,
                          "src": "3591:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3567:49:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 288,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "3630:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                            "typeString": "struct Staking.UserInfo storage pointer"
                          }
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardHasBeenWithdrawn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "3630:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 277,
                      "name": "calculateRewardDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "3476:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3476:191:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3459:208:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 297,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3714:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3714:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 299,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 276,
                        "src": "3726:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 292,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "3677:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$42_storage",
                            "typeString": "struct Staking.StakingInfo storage ref"
                          }
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "3677:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1126",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 717,
                      "src": "3677:36:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1126_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1126_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3677:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "3677:56:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 303,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 276,
                          "src": "3751:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3760:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3751:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657761726420416d6f756e743a207775743f",
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3763:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d34aa8b90f77ff517a65586c45ba567e04108d06dcfcde04dcefffb9aa5189a7",
                          "typeString": "literal_string \"Reward Amount: wut?\""
                        },
                        "value": "Reward Amount: wut?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d34aa8b90f77ff517a65586c45ba567e04108d06dcfcde04dcefffb9aa5189a7",
                          "typeString": "literal_string \"Reward Amount: wut?\""
                        }
                      ],
                      "id": 302,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3743:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3743:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "3743:42:9"
                },
                {
                  "expression": {
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 309,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "3795:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$29_storage_ptr",
                          "typeString": "struct Staking.UserInfo storage pointer"
                        }
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardHasBeenWithdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "3795:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 312,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 276,
                      "src": "3826:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3795:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "3795:37:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 316,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3859:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3859:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 318,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 276,
                        "src": "3871:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 315,
                      "name": "ClaimReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "3847:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3847:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "EmitStatement",
                  "src": "3842:36:9"
                },
                {
                  "expression": {
                    "id": 321,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 276,
                    "src": "3895:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 266,
                  "id": 322,
                  "nodeType": "Return",
                  "src": "3888:13:9"
                }
              ]
            },
            "functionSelector": "b88a802f",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 261,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 260,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 602,
                  "src": "3349:13:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3349:13:9"
              },
              {
                "id": 263,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 262,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 685,
                  "src": "3363:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3363:12:9"
              }
            ],
            "name": "claimReward",
            "nameLocation": "3328:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3339:2:9"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "3385:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3385:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3384:9:9"
            },
            "scope": 450,
            "src": "3319:589:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 376,
              "nodeType": "Block",
              "src": "4123:339:9",
              "statements": [
                {
                  "assignments": [
                    338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 338,
                      "mutability": "mutable",
                      "name": "multiplier",
                      "nameLocation": "4141:10:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "4133:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 337,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4133:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 339,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "4155:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 340,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 326,
                            "src": "4161:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4155:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 342,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4154:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 343,
                      "name": "BONUS_MULTIPLIER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "4170:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4154:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4133:53:9"
                },
                {
                  "assignments": [
                    347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 347,
                      "mutability": "mutable",
                      "name": "numberOfDays",
                      "nameLocation": "4204:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "4196:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 346,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4196:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 351,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 348,
                      "name": "multiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 338,
                      "src": "4219:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3836343030",
                      "id": 349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4232:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "86400"
                    },
                    "src": "4219:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4196:41:9"
                },
                {
                  "assignments": [
                    353
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 353,
                      "mutability": "mutable",
                      "name": "aprPerDay",
                      "nameLocation": "4280:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "4272:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 352,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4272:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 361,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 354,
                              "name": "stakingInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "4293:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$42_storage",
                                "typeString": "struct Staking.StakingInfo storage ref"
                              }
                            },
                            "id": 355,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "apr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "4293:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4311:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "4293:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 358,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4292:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "333635",
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4319:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_365_by_1",
                        "typeString": "int_const 365"
                      },
                      "value": "365"
                    },
                    "src": "4292:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4272:50:9"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 362,
                                "name": "_userAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 330,
                                "src": "4352:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 363,
                                "name": "numberOfDays",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 347,
                                "src": "4366:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4352:26:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 365,
                              "name": "aprPerDay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 353,
                              "src": "4381:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4352:38:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 367,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4351:40:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31303030",
                              "id": 368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4407:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31303030",
                              "id": 369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4414:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "src": "4407:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          }
                        ],
                        "id": 371,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4406:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      },
                      "src": "4351:68:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 373,
                      "name": "_userHasBeenWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "4434:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4351:104:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 336,
                  "id": 375,
                  "nodeType": "Return",
                  "src": "4332:123:9"
                }
              ]
            },
            "functionSelector": "9144951d",
            "id": 377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRewardDebt",
            "nameLocation": "3955:19:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3992:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "3984:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3984:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4015:3:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "4007:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4007:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "_userAmount",
                  "nameLocation": "4036:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "4028:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4028:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "_userHasBeenWithdrawn",
                  "nameLocation": "4065:21:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "4057:29:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4057:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3974:118:9"
            },
            "returnParameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 335,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "4114:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4114:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4113:9:9"
            },
            "scope": 450,
            "src": "3946:516:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "4644:260:9",
              "statements": [
                {
                  "assignments": [
                    387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 387,
                      "mutability": "mutable",
                      "name": "NftBal",
                      "nameLocation": "4662:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "4654:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 386,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4654:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 396,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 393,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4713:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Staking_$450",
                              "typeString": "contract Staking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Staking_$450",
                              "typeString": "contract Staking"
                            }
                          ],
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4705:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 391,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4705:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4705:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 388,
                          "name": "stakingInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "4671:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$42_storage",
                            "typeString": "struct Staking.StakingInfo storage ref"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "4671:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1126",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1065,
                      "src": "4671:33:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4671:48:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4654:65:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 397,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "4733:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 398,
                      "name": "NftBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 387,
                      "src": "4743:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4733:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 419,
                    "nodeType": "Block",
                    "src": "4827:71:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 415,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 379,
                              "src": "4874:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 416,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 381,
                              "src": "4879:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 410,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "4841:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakingInfo_$42_storage",
                                  "typeString": "struct Staking.StakingInfo storage ref"
                                }
                              },
                              "id": 413,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32,
                              "src": "4841:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1126",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1075,
                            "src": "4841:32:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4841:46:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 418,
                        "nodeType": "ExpressionStatement",
                        "src": "4841:46:9"
                      }
                    ]
                  },
                  "id": 420,
                  "nodeType": "IfStatement",
                  "src": "4729:169:9",
                  "trueBody": {
                    "id": 409,
                    "nodeType": "Block",
                    "src": "4751:70:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 405,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 379,
                              "src": "4798:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 406,
                              "name": "NftBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 387,
                              "src": "4803:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 400,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "4765:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakingInfo_$42_storage",
                                  "typeString": "struct Staking.StakingInfo storage ref"
                                }
                              },
                              "id": 403,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32,
                              "src": "4765:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1126",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1075,
                            "src": "4765:32:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4765:45:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 408,
                        "nodeType": "ExpressionStatement",
                        "src": "4765:45:9"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f66760cf",
            "id": 422,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 384,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 383,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 497,
                  "src": "4634:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4634:9:9"
              }
            ],
            "name": "safeNftTransfer",
            "nameLocation": "4581:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4605:3:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "4597:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4597:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4618:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "4610:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4610:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4596:30:9"
            },
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4644:0:9"
            },
            "scope": 450,
            "src": "4572:332:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "4966:39:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 427,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "4983:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "4983:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 426,
                  "id": 429,
                  "nodeType": "Return",
                  "src": "4976:22:9"
                }
              ]
            },
            "functionSelector": "29cb924d",
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTime",
            "nameLocation": "4919:14:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4933:2:9"
            },
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "4957:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4957:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4956:9:9"
            },
            "scope": 450,
            "src": "4910:95:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "5045:25:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 436,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 629,
                      "src": "5055:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5055:8:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "5055:8:9"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 434,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 433,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 497,
                  "src": "5035:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "5035:9:9"
              }
            ],
            "name": "pause",
            "nameLocation": "5020:5:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5025:2:9"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5045:0:9"
            },
            "scope": 450,
            "src": "5011:59:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 448,
              "nodeType": "Block",
              "src": "5112:27:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 445,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "5122:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5122:10:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "5122:10:9"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 449,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 443,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 442,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 497,
                  "src": "5102:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "5102:9:9"
              }
            ],
            "name": "unpause",
            "nameLocation": "5085:7:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5092:2:9"
            },
            "returnParameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5112:0:9"
            },
            "scope": 450,
            "src": "5076:63:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 451,
        "src": "356:4785:9",
        "usedErrors": []
      }
    ],
    "src": "32:5110:9"
  },
  "bytecode": "6080604052600160025534801561001557600080fd5b506040516112ae3803806112ae83398101604081905261003491610120565b61003d336100b8565b6000805460ff60a01b19169055600180556040805160a0810182526001600160a01b03958616808252949095166020860181905290850182905260608501839052426080909501859052600380546001600160a01b031990811690951790556004805490941617909255600591909155600655600755610168565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461011d57600080fd5b50565b6000806000806080858703121561013657600080fd5b845161014181610108565b602086015190945061015281610108565b6040860151606090960151949790965092505050565b611137806101776000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638aa28550116100a257806399fcfccb1161007157806399fcfccb1461026f578063b88a802f14610277578063e63ab1e91461027f578063f2fde38b146102a6578063f66760cf146102b957600080fd5b80638aa28550146102255780638da5cb5b1461022e5780639144951d14610249578063983277021461025c57600080fd5b80635c975abb116100e95780635c975abb1461018c5780635ffe6146146101a9578063703ec8c4146101bc578063715018a6146102155780638456cb591461021d57600080fd5b80631959a0021461011b57806329cb924d1461015f5780633f4ba83a1461016f57806341441d3b14610179575b600080fd5b610145610129366004610e6e565b6008602052600090815260409020600181015460029091015482565b604080519283526020830191909152015b60405180910390f35b425b604051908152602001610156565b6101776102cc565b005b610177610187366004610e89565b610309565b600054600160a01b900460ff166040519015158152602001610156565b6101776101b7366004610e89565b610415565b6003546004546005546006546007546101e2946001600160a01b03908116941692919085565b604080516001600160a01b039687168152959094166020860152928401919091526060830152608082015260a001610156565b610177610444565b610177610478565b61016160025481565b6000546040516001600160a01b039091168152602001610156565b610161610257366004610ea2565b6104aa565b61017761026a366004610e89565b610536565b610177610565565b6101616106e3565b6101617f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6101776102b4366004610e6e565b610821565b6101776102c7366004610ed4565b6108bc565b6000546001600160a01b031633146102ff5760405162461bcd60e51b81526004016102f690610efe565b60405180910390fd5b610307610a19565b565b6002600154141561032c5760405162461bcd60e51b81526004016102f690610f33565b60026001553360008181526008602052604090819020600480549251632142170760e11b81529081019390935230602484015260448301849052916001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561039657600080fd5b505af11580156103aa573d6000803e3d6000fd5b5050825460018181018555600085815260209020909101859055830154151591506103d89050574260018201555b60405182815233907ff4202ce22960ada59aa4bb9f0e324d8f77576be8352767dfc0aca182a4bf8e459060200160405180910390a2505060018055565b6000546001600160a01b0316331461043f5760405162461bcd60e51b81526004016102f690610efe565b600255565b6000546001600160a01b0316331461046e5760405162461bcd60e51b81526004016102f690610efe565b6103076000610ab6565b6000546001600160a01b031633146104a25760405162461bcd60e51b81526004016102f690610efe565b610307610b06565b60008060025486866104bc9190610f80565b6104c69190610f97565b905060006104d76201518083610fb6565b9050600061016d60038001546103e86104f09190610f97565b6104fa9190610fb6565b905084620f42408261050c858a610f97565b6105169190610f97565b6105209190610fb6565b61052a9190610f80565b98975050505050505050565b6000546001600160a01b031633146105605760405162461bcd60e51b81526004016102f690610efe565b600655565b600054600160a01b900460ff161561058f5760405162461bcd60e51b81526004016102f690610fd8565b600260015414156105b25760405162461bcd60e51b81526004016102f690610f33565b6002600155336000908152600860205260408120905b81548110156106845760045482546001600160a01b03909116906323b872dd90309033908690869081106105fe576105fe611002565b6000918252602090912001546040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561065957600080fd5b505af115801561066d573d6000803e3d6000fd5b50505050808061067c90611018565b9150506105c8565b5060608051610697908390608090610df2565b5060006106a26106e3565b60405181815290915033907fbeeac20c93f16ecc5d2707dffeb3263a7f99053ac0aa548803e9e8b5a00074389060200160405180910390a250506001805550565b60008054600160a01b900460ff161561070e5760405162461bcd60e51b81526004016102f690610fd8565b600260015414156107315760405162461bcd60e51b81526004016102f690610f33565b60026001908155336000908152600860205260408120918201546107699042600554855461075f9190610f97565b85600201546104aa565b600354909150610783906001600160a01b03163383610b6b565b600081116107c95760405162461bcd60e51b815260206004820152601360248201527252657761726420416d6f756e743a207775743f60681b60448201526064016102f6565b808260020160008282546107dd9190611033565b909155505060405181815233907fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e9060200160405180910390a29150506001805590565b6000546001600160a01b0316331461084b5760405162461bcd60e51b81526004016102f690610efe565b6001600160a01b0381166108b05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102f6565b6108b981610ab6565b50565b6000546001600160a01b031633146108e65760405162461bcd60e51b81526004016102f690610efe565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561092f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610953919061104b565b9050808211156109db5760035460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb906044015b6020604051808303816000875af11580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d59190611064565b50505050565b60035460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb90604401610992565b505050565b600054600160a01b900460ff16610a695760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016102f6565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff1615610b305760405162461bcd60e51b81526004016102f690610fd8565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610a993390565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610a1492869291600091610bfb918516908490610c78565b805190915015610a145780806020019051810190610c199190611064565b610a145760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102f6565b6060610c878484600085610c91565b90505b9392505050565b606082471015610cf25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102f6565b843b610d405760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102f6565b600080866001600160a01b03168587604051610d5c91906110b2565b60006040518083038185875af1925050503d8060008114610d99576040519150601f19603f3d011682016040523d82523d6000602084013e610d9e565b606091505b5091509150610dae828286610db9565b979650505050505050565b60608315610dc8575081610c8a565b825115610dd85782518084602001fd5b8160405162461bcd60e51b81526004016102f691906110ce565b828054828255906000526020600020908101928215610e2d579160200282015b82811115610e2d578251825591602001919060010190610e12565b50610e39929150610e3d565b5090565b5b80821115610e395760008155600101610e3e565b80356001600160a01b0381168114610e6957600080fd5b919050565b600060208284031215610e8057600080fd5b610c8a82610e52565b600060208284031215610e9b57600080fd5b5035919050565b60008060008060808587031215610eb857600080fd5b5050823594602084013594506040840135936060013592509050565b60008060408385031215610ee757600080fd5b610ef083610e52565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015610f9257610f92610f6a565b500390565b6000816000190483118215151615610fb157610fb1610f6a565b500290565b600082610fd357634e487b7160e01b600052601260045260246000fd5b500490565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561102c5761102c610f6a565b5060010190565b6000821982111561104657611046610f6a565b500190565b60006020828403121561105d57600080fd5b5051919050565b60006020828403121561107657600080fd5b81518015158114610c8a57600080fd5b60005b838110156110a1578181015183820152602001611089565b838111156109d55750506000910152565b600082516110c4818460208701611086565b9190910192915050565b60208152600082518060208401526110ed816040850160208701611086565b601f01601f1916919091016040019291505056fea26469706673582212204c98058272c05f46eff0493595567040de65772012f3fd2f75b4564067f13b3964736f6c634300080a0033",
  "bytecodeSha1": "d6fc0c72401b00070fba95561c453e030057571a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "Staking",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "47": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "Pausable.paused": {
          "48": [
            2259,
            2278,
            true
          ]
        }
      },
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "49": [
            3668,
            3689,
            false
          ],
          "50": [
            3752,
            3782,
            true
          ]
        }
      },
      "5": {},
      "6": {
        "Address.functionCallWithValue": {
          "44": [
            4745,
            4775,
            true
          ]
        },
        "Address.verifyCallResult": {
          "45": [
            7335,
            7342,
            false
          ],
          "46": [
            7476,
            7497,
            false
          ]
        }
      },
      "7": {},
      "8": {},
      "9": {
        "Staking.claimReward": {
          "42": [
            3751,
            3761,
            true
          ]
        },
        "Staking.enterStaking": {
          "41": [
            2533,
            2552,
            false
          ]
        },
        "Staking.safeNftTransfer": {
          "43": [
            4733,
            4749,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "29": [
            2131,
            2148
          ],
          "30": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "2": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "10": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "23": [
            1926,
            1999
          ],
          "24": [
            2009,
            2028
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "31": [
            1865,
            1879
          ],
          "32": [
            1889,
            1914
          ]
        },
        "Pausable._unpause": {
          "27": [
            2111,
            2126
          ],
          "28": [
            2136,
            2163
          ]
        },
        "Pausable.paused": {
          "1": [
            1104,
            1118
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "34": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "33": [
            746,
            832
          ]
        }
      },
      "5": {},
      "6": {
        "Address.functionCall": {
          "35": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "36": [
            4737,
            4818
          ],
          "37": [
            4828,
            4888
          ],
          "38": [
            4982,
            5040
          ]
        },
        "Address.verifyCallResult": {
          "39": [
            7358,
            7375
          ],
          "40": [
            7802,
            7822
          ]
        }
      },
      "7": {
        "Context._msgSender": {
          "3": [
            659,
            676
          ]
        }
      },
      "8": {},
      "9": {
        "Staking.calculateRewardDebt": {
          "12": [
            4332,
            4455
          ]
        },
        "Staking.claimReward": {
          "18": [
            3677,
            3733
          ],
          "19": [
            3743,
            3785
          ],
          "20": [
            3795,
            3832
          ],
          "21": [
            3842,
            3878
          ],
          "22": [
            3888,
            3901
          ]
        },
        "Staking.enterStaking": {
          "5": [
            2352,
            2482
          ],
          "6": [
            2492,
            2519
          ],
          "7": [
            2568,
            2601
          ],
          "8": [
            2622,
            2659
          ]
        },
        "Staking.getCurrentTime": {
          "0": [
            4976,
            4998
          ]
        },
        "Staking.leaveStaking": {
          "14": [
            2972,
            3123
          ],
          "15": [
            2937,
            2947
          ],
          "16": [
            3175,
            3197
          ],
          "17": [
            3247,
            3284
          ]
        },
        "Staking.pause": {
          "11": [
            5055,
            5063
          ]
        },
        "Staking.safeNftTransfer": {
          "25": [
            4765,
            4810
          ],
          "26": [
            4841,
            4887
          ]
        },
        "Staking.setapr": {
          "13": [
            2160,
            2182
          ]
        },
        "Staking.unpause": {
          "4": [
            5122,
            5132
          ]
        },
        "Staking.updateMultiplier": {
          "9": [
            1982,
            2017
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c80638aa28550116100a257806399fcfccb1161007157806399fcfccb1461026f578063b88a802f14610277578063e63ab1e91461027f578063f2fde38b146102a6578063f66760cf146102b957600080fd5b80638aa28550146102255780638da5cb5b1461022e5780639144951d14610249578063983277021461025c57600080fd5b80635c975abb116100e95780635c975abb1461018c5780635ffe6146146101a9578063703ec8c4146101bc578063715018a6146102155780638456cb591461021d57600080fd5b80631959a0021461011b57806329cb924d1461015f5780633f4ba83a1461016f57806341441d3b14610179575b600080fd5b610145610129366004610e6e565b6008602052600090815260409020600181015460029091015482565b604080519283526020830191909152015b60405180910390f35b425b604051908152602001610156565b6101776102cc565b005b610177610187366004610e89565b610309565b600054600160a01b900460ff166040519015158152602001610156565b6101776101b7366004610e89565b610415565b6003546004546005546006546007546101e2946001600160a01b03908116941692919085565b604080516001600160a01b039687168152959094166020860152928401919091526060830152608082015260a001610156565b610177610444565b610177610478565b61016160025481565b6000546040516001600160a01b039091168152602001610156565b610161610257366004610ea2565b6104aa565b61017761026a366004610e89565b610536565b610177610565565b6101616106e3565b6101617f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6101776102b4366004610e6e565b610821565b6101776102c7366004610ed4565b6108bc565b6000546001600160a01b031633146102ff5760405162461bcd60e51b81526004016102f690610efe565b60405180910390fd5b610307610a19565b565b6002600154141561032c5760405162461bcd60e51b81526004016102f690610f33565b60026001553360008181526008602052604090819020600480549251632142170760e11b81529081019390935230602484015260448301849052916001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561039657600080fd5b505af11580156103aa573d6000803e3d6000fd5b5050825460018181018555600085815260209020909101859055830154151591506103d89050574260018201555b60405182815233907ff4202ce22960ada59aa4bb9f0e324d8f77576be8352767dfc0aca182a4bf8e459060200160405180910390a2505060018055565b6000546001600160a01b0316331461043f5760405162461bcd60e51b81526004016102f690610efe565b600255565b6000546001600160a01b0316331461046e5760405162461bcd60e51b81526004016102f690610efe565b6103076000610ab6565b6000546001600160a01b031633146104a25760405162461bcd60e51b81526004016102f690610efe565b610307610b06565b60008060025486866104bc9190610f80565b6104c69190610f97565b905060006104d76201518083610fb6565b9050600061016d60038001546103e86104f09190610f97565b6104fa9190610fb6565b905084620f42408261050c858a610f97565b6105169190610f97565b6105209190610fb6565b61052a9190610f80565b98975050505050505050565b6000546001600160a01b031633146105605760405162461bcd60e51b81526004016102f690610efe565b600655565b600054600160a01b900460ff161561058f5760405162461bcd60e51b81526004016102f690610fd8565b600260015414156105b25760405162461bcd60e51b81526004016102f690610f33565b6002600155336000908152600860205260408120905b81548110156106845760045482546001600160a01b03909116906323b872dd90309033908690869081106105fe576105fe611002565b6000918252602090912001546040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561065957600080fd5b505af115801561066d573d6000803e3d6000fd5b50505050808061067c90611018565b9150506105c8565b5060608051610697908390608090610df2565b5060006106a26106e3565b60405181815290915033907fbeeac20c93f16ecc5d2707dffeb3263a7f99053ac0aa548803e9e8b5a00074389060200160405180910390a250506001805550565b60008054600160a01b900460ff161561070e5760405162461bcd60e51b81526004016102f690610fd8565b600260015414156107315760405162461bcd60e51b81526004016102f690610f33565b60026001908155336000908152600860205260408120918201546107699042600554855461075f9190610f97565b85600201546104aa565b600354909150610783906001600160a01b03163383610b6b565b600081116107c95760405162461bcd60e51b815260206004820152601360248201527252657761726420416d6f756e743a207775743f60681b60448201526064016102f6565b808260020160008282546107dd9190611033565b909155505060405181815233907fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e9060200160405180910390a29150506001805590565b6000546001600160a01b0316331461084b5760405162461bcd60e51b81526004016102f690610efe565b6001600160a01b0381166108b05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102f6565b6108b981610ab6565b50565b6000546001600160a01b031633146108e65760405162461bcd60e51b81526004016102f690610efe565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561092f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610953919061104b565b9050808211156109db5760035460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb906044015b6020604051808303816000875af11580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d59190611064565b50505050565b60035460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb90604401610992565b505050565b600054600160a01b900460ff16610a695760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016102f6565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff1615610b305760405162461bcd60e51b81526004016102f690610fd8565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610a993390565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610a1492869291600091610bfb918516908490610c78565b805190915015610a145780806020019051810190610c199190611064565b610a145760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102f6565b6060610c878484600085610c91565b90505b9392505050565b606082471015610cf25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102f6565b843b610d405760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102f6565b600080866001600160a01b03168587604051610d5c91906110b2565b60006040518083038185875af1925050503d8060008114610d99576040519150601f19603f3d011682016040523d82523d6000602084013e610d9e565b606091505b5091509150610dae828286610db9565b979650505050505050565b60608315610dc8575081610c8a565b825115610dd85782518084602001fd5b8160405162461bcd60e51b81526004016102f691906110ce565b828054828255906000526020600020908101928215610e2d579160200282015b82811115610e2d578251825591602001919060010190610e12565b50610e39929150610e3d565b5090565b5b80821115610e395760008155600101610e3e565b80356001600160a01b0381168114610e6957600080fd5b919050565b600060208284031215610e8057600080fd5b610c8a82610e52565b600060208284031215610e9b57600080fd5b5035919050565b60008060008060808587031215610eb857600080fd5b5050823594602084013594506040840135936060013592509050565b60008060408385031215610ee757600080fd5b610ef083610e52565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015610f9257610f92610f6a565b500390565b6000816000190483118215151615610fb157610fb1610f6a565b500290565b600082610fd357634e487b7160e01b600052601260045260246000fd5b500490565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561102c5761102c610f6a565b5060010190565b6000821982111561104657611046610f6a565b500190565b60006020828403121561105d57600080fd5b5051919050565b60006020828403121561107657600080fd5b81518015158114610c8a57600080fd5b60005b838110156110a1578181015183820152602001611089565b838111156109d55750506000910152565b600082516110c4818460208701611086565b9190910192915050565b60208152600082518060208401526110ed816040850160208701611086565b601f01601f1916919091016040019291505056fea26469706673582212204c98058272c05f46eff0493595567040de65772012f3fd2f75b4564067f13b3964736f6c634300080a0033",
  "deployedSourceMap": "356:4785:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1180:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;557:25:10;;;613:2;598:18;;591:34;;;;530:18;1180:44:9;;;;;;;;4910:95;4983:15;4910:95;;;782:25:10;;;770:2;755:18;4910:95:9;636:177:10;5076:63:9;;;:::i;:::-;;2230:436;;;;;;:::i;:::-;;:::i;1041:84:1:-;1088:4;1111:7;-1:-1:-1;;;1111:7:1;;;;1041:84;;1168:14:10;;1161:22;1143:41;;1131:2;1116:18;1041:84:1;1003:187:10;1903:121:9;;;;;;:::i;:::-;;:::i;1096:30::-;;;;;;;;;;;;;-1:-1:-1;;;;;1096:30:9;;;;;;;;;;;;;;-1:-1:-1;;;;;1541:15:10;;;1523:34;;1593:15;;;;1588:2;1573:18;;1566:43;1625:18;;;1618:34;;;;1683:2;1668:18;;1661:34;1726:3;1711:19;;1704:35;1472:3;1457:19;1096:30:9;1195:550:10;1605:92:0;;;:::i;5011:59:9:-;;;:::i;1028:35::-;;;;;;973:85:0;1019:7;1045:6;973:85;;-1:-1:-1;;;;;1045:6:0;;;1896:51:10;;1884:2;1869:18;973:85:0;1750:203:10;3946:516:9;;;;;;:::i;:::-;;:::i;2103:86::-;;;;;;:::i;:::-;;:::i;2717:574::-;;;:::i;3319:589::-;;;:::i;449:62::-;;487:24;449:62;;1846:189:0;;;;;;:::i;:::-;;:::i;4572:332:9:-;;;;;;:::i;:::-;;:::i;5076:63::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;5122:10:9::1;:8;:10::i;:::-;5076:63::o:0;2230:436::-;1680:1:2;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:2;;;;;;;:::i;:::-;1680:1;2389:7;:18;2331:10:9::1;2298:21;2322:20:::0;;;:8:::1;:20;::::0;;;;;;2352:23;;;:130;;-1:-1:-1;;;2352:130:9;;;;::::1;3750:34:10::0;;;;2447:4:9::1;3800:18:10::0;;;3793:43;3852:18;;;3845:34;;;2322:20:9;-1:-1:-1;;;;;2352:23:9;;::::1;::::0;:40:::1;::::0;3685:18:10;;2352:130:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2492:27:9;;::::1;::::0;;::::1;::::0;;:14:::1;:27:::0;;;::::1;::::0;;;;::::1;::::0;;;2533:14;::::1;::::0;:19;2529:83:::1;::::0;-1:-1:-1;2529:83:9::1;::::0;-1:-1:-1;2529:83:9::1;4983:15:::0;2568:14:::1;::::0;::::1;:33:::0;2529:83:::1;2627:32;::::0;782:25:10;;;2640:10:9::1;::::0;2627:32:::1;::::0;770:2:10;755:18;2627:32:9::1;;;;;;;-1:-1:-1::0;;1637:1:2;2562:22;;2230:436:9:o;1903:121::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1982:16:9::1;:35:::0;1903:121::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;5011:59:9:-:0;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;5055:8:9::1;:6;:8::i;3946:516::-:0;4114:7;4133:18;4170:16;;4161:5;4155:3;:11;;;;:::i;:::-;4154:32;;;;:::i;:::-;4133:53;-1:-1:-1;4196:20:9;4219:18;4232:5;4133:53;4219:18;:::i;:::-;4196:41;;4272:17;4319:3;4293:11;:15;;;4311:4;4293:22;;;;:::i;:::-;4292:30;;;;:::i;:::-;4272:50;-1:-1:-1;4434:21:9;4407:11;4272:50;4352:26;4366:12;4352:11;:26;:::i;:::-;:38;;;;:::i;:::-;4351:68;;;;:::i;:::-;:104;;;;:::i;:::-;4332:123;3946:516;-1:-1:-1;;;;;;;;3946:516:9:o;2103:86::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2160:15:9;:22;2103:86::o;2717:574::-;1088:4:1;1111:7;-1:-1:-1;;;1111:7:1;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;1680:1:2::1;2259:7;;:19;;2251:63;;;;-1:-1:-1::0;;;2251:63:2::1;;;;;;;:::i;:::-;1680:1;2389:7;:18:::0;2818:10:9::2;2785:21;2809:20:::0;;;:8:::2;:20;::::0;;;;;2839:295:::2;2902:21:::0;;2891:32;::::2;2839:295;;;2972:23:::0;;3085:24;;-1:-1:-1;;;;;2972:23:9;;::::2;::::0;:36:::2;::::0;3034:4:::2;::::0;3057:10:::2;::::0;3085:4;;3100:8;;3085:24;::::2;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;::::0;2972:151:::2;::::0;-1:-1:-1;;;;;;2972:151:9::2;::::0;;;;;;-1:-1:-1;;;;;3768:15:10;;;2972:151:9::2;::::0;::::2;3750:34:10::0;3820:15;;;;3800:18;;;3793:43;3852:18;;;3845:34;3685:18;;2972:151:9::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;2937:10;;;;;:::i;:::-;;;;2839:295;;;-1:-1:-1::0;3143:22:9::2;3175::::0;;::::2;::::0;:4;;:22;;::::2;:::i;:::-;;3207:14;3224:13;:11;:13::i;:::-;3252:32;::::0;782:25:10;;;3207:30:9;;-1:-1:-1;3265:10:9::2;::::0;3252:32:::2;::::0;770:2:10;755:18;3252:32:9::2;;;;;;;-1:-1:-1::0;;1637:1:2::1;2562:22:::0;;-1:-1:-1;2717:574:9:o;3319:589::-;3385:7;1111::1;;-1:-1:-1;;;1111:7:1;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;1680:1:2::1;2259:7;;:19;;2251:63;;;;-1:-1:-1::0;;;2251:63:2::1;;;;;;;:::i;:::-;1680:1;2389:7;:18:::0;;;3437:10:9::2;3404:21;3428:20:::0;;;:8:::2;:20;::::0;;;;3509:14;;::::2;::::0;3476:191:::2;::::0;4983:15;3591:25;;3567:21;;:49:::2;::::0;3591:25;3567:49:::2;:::i;:::-;3630:4;:27;;;3476:19;:191::i;:::-;3677:11;:23:::0;3459:208;;-1:-1:-1;3677:56:9::2;::::0;-1:-1:-1;;;;;3677:23:9::2;3714:10;3459:208:::0;3677:36:::2;:56::i;:::-;3760:1;3751:6;:10;3743:42;;;::::0;-1:-1:-1;;;3743:42:9;;5366:2:10;3743:42:9::2;::::0;::::2;5348:21:10::0;5405:2;5385:18;;;5378:30;-1:-1:-1;;;5424:18:10;;;5417:49;5483:18;;3743:42:9::2;5164:343:10::0;3743:42:9::2;3826:6;3795:4;:27;;;:37;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3847:31:9::2;::::0;782:25:10;;;3859:10:9::2;::::0;3847:31:::2;::::0;770:2:10;755:18;3847:31:9::2;;;;;;;3895:6:::0;-1:-1:-1;;1637:1:2::1;2562:22:::0;;3319:589:9;:::o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;5847:2:10;1926:73:0::1;::::0;::::1;5829:21:10::0;5886:2;5866:18;;;5859:30;5925:34;5905:18;;;5898:62;-1:-1:-1;;;5976:18:10;;;5969:36;6022:19;;1926:73:0::1;5645:402:10::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;4572:332:9:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;4671:11:9::1;:23:::0;:48:::1;::::0;-1:-1:-1;;;4671:48:9;;4713:4:::1;4671:48;::::0;::::1;1896:51:10::0;4654:14:9::1;::::0;-1:-1:-1;;;;;4671:23:9::1;::::0;:33:::1;::::0;1869:18:10;;4671:48:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4654:65;;4743:6;4733:7;:16;4729:169;;;4765:11;:23:::0;:45:::1;::::0;-1:-1:-1;;;4765:45:9;;-1:-1:-1;;;;;6433:32:10;;;4765:45:9::1;::::0;::::1;6415:51:10::0;6482:18;;;6475:34;;;4765:23:9;;::::1;::::0;:32:::1;::::0;6388:18:10;;4765:45:9::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4644:260;4572:332:::0;;:::o;4729:169::-:1;4841:11;:23:::0;:46:::1;::::0;-1:-1:-1;;;4841:46:9;;-1:-1:-1;;;;;6433:32:10;;;4841:46:9::1;::::0;::::1;6415:51:10::0;6482:18;;;6475:34;;;4841:23:9;;::::1;::::0;:32:::1;::::0;6388:18:10;;4841:46:9::1;6241:274:10::0;4729:169:9::1;4644:260;4572:332:::0;;:::o;2053:117:1:-;1088:4;1111:7;-1:-1:-1;;;1111:7:1;;;;1612:41;;;;-1:-1:-1;;;1612:41:1;;7004:2:10;1612:41:1;;;6986:21:10;7043:2;7023:18;;;7016:30;-1:-1:-1;;;7062:18:10;;;7055:50;7122:18;;1612:41:1;6802:344:10;1612:41:1;2121:5:::1;2111:15:::0;;-1:-1:-1;;;;2111:15:1::1;::::0;;2141:22:::1;666:10:7::0;2150:12:1::1;2141:22;::::0;-1:-1:-1;;;;;1914:32:10;;;1896:51;;1884:2;1869:18;2141:22:1::1;;;;;;;2053:117::o:0;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;1806:115:1:-;1088:4;1111:7;-1:-1:-1;;;1111:7:1;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:1;;;;;;;:::i;:::-;1865:7:::1;:14:::0;;-1:-1:-1;;;;1865:14:1::1;-1:-1:-1::0;;;1865:14:1::1;::::0;;1894:20:::1;1901:12;666:10:7::0;;587:96;634:205:4;773:58;;;-1:-1:-1;;;;;6433:32:10;;;773:58:4;;;6415:51:10;6482:18;;;;6475:34;;;773:58:4;;;;;;;;;;6388:18:10;;;;773:58:4;;;;;;;;-1:-1:-1;;;;;773:58:4;-1:-1:-1;;;773:58:4;;;3585:69;;;;;;;;;;;;;;;;746:86;;766:5;;773:58;-1:-1:-1;;3585:69:4;;:27;;;773:58;;3585:27;:69::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:4;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:4;;7353:2:10;3744:85:4;;;7335:21:10;7392:2;7372:18;;;7365:30;7431:34;7411:18;;;7404:62;-1:-1:-1;;;7482:18:10;;;7475:40;7532:19;;3744:85:4;7151:406:10;3461:223:6;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:6;;7764:2:10;4737:81:6;;;7746:21:10;7803:2;7783:18;;;7776:30;7842:34;7822:18;;;7815:62;-1:-1:-1;;;7893:18:10;;;7886:36;7939:19;;4737:81:6;7562:402:10;4737:81:6;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:6;;8171:2:10;4828:60:6;;;8153:21:10;8210:2;8190:18;;;8183:30;8249:31;8229:18;;;8222:59;8298:18;;4828:60:6;7969:353:10;4828:60:6;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:6;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:6:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:6;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:6;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:10;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;818:180::-;877:6;930:2;918:9;909:7;905:23;901:32;898:52;;;946:1;943;936:12;898:52;-1:-1:-1;969:23:10;;818:180;-1:-1:-1;818:180:10:o;1958:385::-;2044:6;2052;2060;2068;2121:3;2109:9;2100:7;2096:23;2092:33;2089:53;;;2138:1;2135;2128:12;2089:53;-1:-1:-1;;2161:23:10;;;2231:2;2216:18;;2203:32;;-1:-1:-1;2282:2:10;2267:18;;2254:32;;2333:2;2318:18;2305:32;;-1:-1:-1;1958:385:10;-1:-1:-1;1958:385:10:o;2530:254::-;2598:6;2606;2659:2;2647:9;2638:7;2634:23;2630:32;2627:52;;;2675:1;2672;2665:12;2627:52;2698:29;2717:9;2698:29;:::i;:::-;2688:39;2774:2;2759:18;;;;2746:32;;-1:-1:-1;;;2530:254:10:o;2789:356::-;2991:2;2973:21;;;3010:18;;;3003:30;3069:34;3064:2;3049:18;;3042:62;3136:2;3121:18;;2789:356::o;3150:355::-;3352:2;3334:21;;;3391:2;3371:18;;;3364:30;3430:33;3425:2;3410:18;;3403:61;3496:2;3481:18;;3150:355::o;3890:127::-;3951:10;3946:3;3942:20;3939:1;3932:31;3982:4;3979:1;3972:15;4006:4;4003:1;3996:15;4022:125;4062:4;4090:1;4087;4084:8;4081:34;;;4095:18;;:::i;:::-;-1:-1:-1;4132:9:10;;4022:125::o;4152:168::-;4192:7;4258:1;4254;4250:6;4246:14;4243:1;4240:21;4235:1;4228:9;4221:17;4217:45;4214:71;;;4265:18;;:::i;:::-;-1:-1:-1;4305:9:10;;4152:168::o;4325:217::-;4365:1;4391;4381:132;;4435:10;4430:3;4426:20;4423:1;4416:31;4470:4;4467:1;4460:15;4498:4;4495:1;4488:15;4381:132;-1:-1:-1;4527:9:10;;4325:217::o;4547:340::-;4749:2;4731:21;;;4788:2;4768:18;;;4761:30;-1:-1:-1;;;4822:2:10;4807:18;;4800:46;4878:2;4863:18;;4547:340::o;4892:127::-;4953:10;4948:3;4944:20;4941:1;4934:31;4984:4;4981:1;4974:15;5008:4;5005:1;4998:15;5024:135;5063:3;-1:-1:-1;;5084:17:10;;5081:43;;;5104:18;;:::i;:::-;-1:-1:-1;5151:1:10;5140:13;;5024:135::o;5512:128::-;5552:3;5583:1;5579:6;5576:1;5573:13;5570:39;;;5589:18;;:::i;:::-;-1:-1:-1;5625:9:10;;5512:128::o;6052:184::-;6122:6;6175:2;6163:9;6154:7;6150:23;6146:32;6143:52;;;6191:1;6188;6181:12;6143:52;-1:-1:-1;6214:16:10;;6052:184;-1:-1:-1;6052:184:10:o;6520:277::-;6587:6;6640:2;6628:9;6619:7;6615:23;6611:32;6608:52;;;6656:1;6653;6646:12;6608:52;6688:9;6682:16;6741:5;6734:13;6727:21;6720:5;6717:32;6707:60;;6763:1;6760;6753:12;8327:258;8399:1;8409:113;8423:6;8420:1;8417:13;8409:113;;;8499:11;;;8493:18;8480:11;;;8473:39;8445:2;8438:10;8409:113;;;8540:6;8537:1;8534:13;8531:48;;;-1:-1:-1;;8575:1:10;8557:16;;8550:27;8327:258::o;8590:274::-;8719:3;8757:6;8751:13;8773:53;8819:6;8814:3;8807:4;8799:6;8795:17;8773:53;:::i;:::-;8842:16;;;;;8590:274;-1:-1:-1;;8590:274:10:o;8869:383::-;9018:2;9007:9;9000:21;8981:4;9050:6;9044:13;9093:6;9088:2;9077:9;9073:18;9066:34;9109:66;9168:6;9163:2;9152:9;9148:18;9143:2;9135:6;9131:15;9109:66;:::i;:::-;9236:2;9215:15;-1:-1:-1;;9211:29:10;9196:45;;;;9243:2;9192:54;;8869:383;-1:-1:-1;;8869:383:10:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    356,
    5141
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AA28550 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x99FCFCCB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x99FCFCCB EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xF66760CF EQ PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x9144951D EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x98327702 EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x703EC8C4 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1959A002 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x41441D3B EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145 PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST TIMESTAMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xE89 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE89 JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1E2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 AND SWAP3 SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x444 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x478 JUMP JUMPDEST PUSH2 0x161 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x177 PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0xE89 JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x565 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x161 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xED4 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP1 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x307 PUSH2 0xA19 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x32C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP DUP3 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP6 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 ADD DUP6 SWAP1 SSTORE DUP4 ADD SLOAD ISZERO ISZERO SWAP2 POP PUSH2 0x3D8 SWAP1 POP JUMPI TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF4202CE22960ADA59AA4BB9F0E324D8F77576BE8352767DFC0ACA182A4BF8E45 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP1 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP1 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x307 PUSH1 0x0 PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP1 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x307 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD DUP7 DUP7 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D7 PUSH3 0x15180 DUP4 PUSH2 0xFB6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16D PUSH1 0x3 DUP1 ADD SLOAD PUSH2 0x3E8 PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST SWAP1 POP DUP5 PUSH3 0xF4240 DUP3 PUSH2 0x50C DUP6 DUP11 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x516 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x520 SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x52A SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP1 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x684 JUMPI PUSH1 0x4 SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x5FE JUMPI PUSH2 0x5FE PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x67C SWAP1 PUSH2 0x1018 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5C8 JUMP JUMPDEST POP PUSH1 0x60 DUP1 MLOAD PUSH2 0x697 SWAP1 DUP4 SWAP1 PUSH1 0x80 SWAP1 PUSH2 0xDF2 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x6A2 PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE SWAP1 SWAP2 POP CALLER SWAP1 PUSH32 0xBEEAC20C93F16ECC5D2707DFFEB3263A7F99053AC0AA548803E9E8B5A0007438 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 DUP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 DUP3 ADD SLOAD PUSH2 0x769 SWAP1 TIMESTAMP PUSH1 0x5 SLOAD DUP6 SLOAD PUSH2 0x75F SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST DUP6 PUSH1 0x2 ADD SLOAD PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH2 0x783 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x52657761726420416D6F756E743A207775743F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F6 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x1033 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP2 POP POP PUSH1 0x1 DUP1 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP1 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x8B9 DUP2 PUSH2 0xAB6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP1 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x92F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x953 SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9DB JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D5 SWAP2 SWAP1 PUSH2 0x1064 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x992 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xA99 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 SWAP1 DUP5 ADD MSTORE PUSH2 0xA14 SWAP3 DUP7 SWAP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xBFB SWAP2 DUP6 AND SWAP1 DUP5 SWAP1 PUSH2 0xC78 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xA14 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC19 SWAP2 SWAP1 PUSH2 0x1064 JUMP JUMPDEST PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC87 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xC91 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xCF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F6 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0xD40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD5C SWAP2 SWAP1 PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xDAE DUP3 DUP3 DUP7 PUSH2 0xDB9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xDC8 JUMPI POP DUP2 PUSH2 0xC8A JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xDD8 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x10CE JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xE2D JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xE2D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xE12 JUMP JUMPDEST POP PUSH2 0xE39 SWAP3 SWAP2 POP PUSH2 0xE3D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE3E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8A DUP3 PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF0 DUP4 PUSH2 0xE52 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF92 JUMPI PUSH2 0xF92 PUSH2 0xF6A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xFB1 JUMPI PUSH2 0xFB1 PUSH2 0xF6A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFD3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x102C JUMPI PUSH2 0x102C PUSH2 0xF6A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1046 JUMPI PUSH2 0x1046 PUSH2 0xF6A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1089 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x9D5 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x10C4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1086 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x10ED DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C SWAP9 SDIV DUP3 PUSH19 0xC05F46EFF0493595567040DE65772012F3FD2F PUSH22 0xB4564067F13B3964736F6C634300080A003300000000 ",
  "pcMap": {
    "0": {
      "offset": [
        356,
        5141
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "6": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "8": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "12": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "REVERT",
      "path": "9"
    },
    "16": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "17": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "POP",
      "path": "9"
    },
    "18": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "21": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "LT",
      "path": "9"
    },
    "22": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "26": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "29": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "SHR",
      "path": "9"
    },
    "32": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "33": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x8AA28550"
    },
    "38": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "GT",
      "path": "9"
    },
    "39": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "43": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "44": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x99FCFCCB"
    },
    "49": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "GT",
      "path": "9"
    },
    "50": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "54": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "55": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x99FCFCCB"
    },
    "60": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "61": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26F"
    },
    "64": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "65": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "66": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xB88A802F"
    },
    "71": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "72": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x277"
    },
    "75": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "76": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "77": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xE63AB1E9"
    },
    "82": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "83": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x27F"
    },
    "86": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "87": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "88": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "94": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2A6"
    },
    "97": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "98": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "99": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xF66760CF"
    },
    "104": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "105": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2B9"
    },
    "108": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "109": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "112": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "REVERT",
      "path": "9"
    },
    "113": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "114": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "115": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x8AA28550"
    },
    "120": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "121": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x225"
    },
    "124": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "125": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "126": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x8DA5CB5B"
    },
    "131": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "132": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x22E"
    },
    "135": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "136": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "137": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x9144951D"
    },
    "142": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "143": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x249"
    },
    "146": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "147": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "148": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x98327702"
    },
    "153": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "154": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25C"
    },
    "157": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "158": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "161": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "REVERT",
      "path": "9"
    },
    "162": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "163": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "164": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x5C975ABB"
    },
    "169": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "GT",
      "path": "9"
    },
    "170": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "174": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "175": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x5C975ABB"
    },
    "180": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "181": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18C"
    },
    "184": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "185": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "186": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x5FFE6146"
    },
    "191": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "192": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A9"
    },
    "195": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "196": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "197": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x703EC8C4"
    },
    "202": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "203": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1BC"
    },
    "206": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "207": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "208": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x715018A6"
    },
    "213": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "214": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x215"
    },
    "217": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "218": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "219": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x8456CB59"
    },
    "224": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "225": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x21D"
    },
    "228": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "229": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "232": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "REVERT",
      "path": "9"
    },
    "233": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "234": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "235": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x1959A002"
    },
    "240": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "241": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "245": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "246": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x29CB924D"
    },
    "251": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "252": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x15F"
    },
    "255": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "256": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "257": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x3F4BA83A"
    },
    "262": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "263": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16F"
    },
    "266": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "267": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "268": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x41441D3B"
    },
    "273": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "EQ",
      "path": "9"
    },
    "274": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x179"
    },
    "277": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "278": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "279": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        356,
        5141
      ],
      "op": "REVERT",
      "path": "9"
    },
    "283": {
      "offset": [
        1180,
        1224
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "284": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x145"
    },
    "287": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x129"
    },
    "290": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "291": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "293": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE6E"
    },
    "296": {
      "fn": null,
      "jump": "i",
      "offset": [
        1180,
        1224
      ],
      "op": "JUMP",
      "path": "9"
    },
    "297": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "298": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x8"
    },
    "300": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "302": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "303": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "305": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "306": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "DUP2",
      "path": "9"
    },
    "307": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "308": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "310": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "311": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "312": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "314": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "DUP2",
      "path": "9"
    },
    "315": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "ADD",
      "path": "9"
    },
    "316": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "317": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "319": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "320": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "321": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "ADD",
      "path": "9"
    },
    "322": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "323": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "DUP3",
      "path": "9"
    },
    "324": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "JUMP",
      "path": "9"
    },
    "325": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "326": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "328": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "DUP1",
      "path": "9"
    },
    "329": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "330": {
      "op": "SWAP3"
    },
    "331": {
      "op": "DUP4"
    },
    "332": {
      "op": "MSTORE"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "335": {
      "op": "DUP4"
    },
    "336": {
      "op": "ADD"
    },
    "337": {
      "op": "SWAP2"
    },
    "338": {
      "op": "SWAP1"
    },
    "339": {
      "op": "SWAP2"
    },
    "340": {
      "op": "MSTORE"
    },
    "341": {
      "op": "ADD"
    },
    "342": {
      "offset": [
        1180,
        1224
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "343": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "345": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "346": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "DUP1",
      "path": "9"
    },
    "347": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "348": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "SUB",
      "path": "9"
    },
    "349": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "350": {
      "fn": null,
      "offset": [
        1180,
        1224
      ],
      "op": "RETURN",
      "path": "9"
    },
    "351": {
      "fn": "Staking.getCurrentTime",
      "offset": [
        4910,
        5005
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "352": {
      "fn": "Staking.getCurrentTime",
      "offset": [
        4983,
        4998
      ],
      "op": "TIMESTAMP",
      "path": "9",
      "statement": 0
    },
    "353": {
      "fn": "Staking.getCurrentTime",
      "offset": [
        4910,
        5005
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "354": {
      "fn": "Staking.getCurrentTime",
      "offset": [
        4910,
        5005
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "356": {
      "fn": "Staking.getCurrentTime",
      "offset": [
        4910,
        5005
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "357": {
      "op": "SWAP1"
    },
    "358": {
      "op": "DUP2"
    },
    "359": {
      "op": "MSTORE"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "362": {
      "op": "ADD"
    },
    "363": {
      "fn": "Staking.getCurrentTime",
      "offset": [
        4910,
        5005
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x156"
    },
    "366": {
      "op": "JUMP"
    },
    "367": {
      "fn": "Staking.unpause",
      "offset": [
        5076,
        5139
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "368": {
      "fn": "Staking.unpause",
      "offset": [
        5076,
        5139
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x177"
    },
    "371": {
      "fn": "Staking.unpause",
      "offset": [
        5076,
        5139
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2CC"
    },
    "374": {
      "fn": "Staking.unpause",
      "jump": "i",
      "offset": [
        5076,
        5139
      ],
      "op": "JUMP",
      "path": "9"
    },
    "375": {
      "fn": "Staking.unpause",
      "offset": [
        5076,
        5139
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "376": {
      "fn": "Staking.unpause",
      "offset": [
        5076,
        5139
      ],
      "op": "STOP",
      "path": "9"
    },
    "377": {
      "fn": "Staking.enterStaking",
      "offset": [
        2230,
        2666
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "378": {
      "fn": "Staking.enterStaking",
      "offset": [
        2230,
        2666
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x177"
    },
    "381": {
      "fn": "Staking.enterStaking",
      "offset": [
        2230,
        2666
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x187"
    },
    "384": {
      "fn": "Staking.enterStaking",
      "offset": [
        2230,
        2666
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "385": {
      "fn": "Staking.enterStaking",
      "offset": [
        2230,
        2666
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "387": {
      "fn": "Staking.enterStaking",
      "offset": [
        2230,
        2666
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE89"
    },
    "390": {
      "fn": "Staking.enterStaking",
      "jump": "i",
      "offset": [
        2230,
        2666
      ],
      "op": "JUMP",
      "path": "9"
    },
    "391": {
      "fn": "Staking.enterStaking",
      "offset": [
        2230,
        2666
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "392": {
      "fn": "Staking.enterStaking",
      "offset": [
        2230,
        2666
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x309"
    },
    "395": {
      "fn": "Staking.enterStaking",
      "jump": "i",
      "offset": [
        2230,
        2666
      ],
      "op": "JUMP",
      "path": "9"
    },
    "396": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "397": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "399": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 1
    },
    "400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "404": {
      "op": "SHL"
    },
    "405": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "406": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "1"
    },
    "407": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "409": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "1"
    },
    "410": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "412": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "413": {
      "op": "SWAP1"
    },
    "414": {
      "op": "ISZERO"
    },
    "415": {
      "op": "ISZERO"
    },
    "416": {
      "op": "DUP2"
    },
    "417": {
      "op": "MSTORE"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "420": {
      "op": "ADD"
    },
    "421": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x156"
    },
    "424": {
      "op": "JUMP"
    },
    "425": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1903,
        2024
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "426": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1903,
        2024
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x177"
    },
    "429": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1903,
        2024
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B7"
    },
    "432": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1903,
        2024
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "433": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1903,
        2024
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "435": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1903,
        2024
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE89"
    },
    "438": {
      "fn": "Staking.updateMultiplier",
      "jump": "i",
      "offset": [
        1903,
        2024
      ],
      "op": "JUMP",
      "path": "9"
    },
    "439": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1903,
        2024
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "440": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1903,
        2024
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x415"
    },
    "443": {
      "fn": "Staking.updateMultiplier",
      "jump": "i",
      "offset": [
        1903,
        2024
      ],
      "op": "JUMP",
      "path": "9"
    },
    "444": {
      "offset": [
        1096,
        1126
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "445": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "447": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "448": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "450": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "451": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "453": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "454": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x6"
    },
    "456": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "457": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x7"
    },
    "459": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "460": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1E2"
    },
    "463": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "470": {
      "op": "SHL"
    },
    "471": {
      "op": "SUB"
    },
    "472": {
      "offset": [
        1096,
        1126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "473": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "DUP2",
      "path": "9"
    },
    "474": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "AND",
      "path": "9"
    },
    "475": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "476": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "AND",
      "path": "9"
    },
    "477": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "478": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "479": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "480": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "DUP6",
      "path": "9"
    },
    "481": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "JUMP",
      "path": "9"
    },
    "482": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "483": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "485": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "DUP1",
      "path": "9"
    },
    "486": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1096,
        1126
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "493": {
      "op": "SHL"
    },
    "494": {
      "op": "SUB"
    },
    "495": {
      "op": "SWAP7"
    },
    "496": {
      "op": "DUP8"
    },
    "497": {
      "op": "AND"
    },
    "498": {
      "op": "DUP2"
    },
    "499": {
      "op": "MSTORE"
    },
    "500": {
      "op": "SWAP6"
    },
    "501": {
      "op": "SWAP1"
    },
    "502": {
      "op": "SWAP5"
    },
    "503": {
      "op": "AND"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "506": {
      "op": "DUP7"
    },
    "507": {
      "op": "ADD"
    },
    "508": {
      "op": "MSTORE"
    },
    "509": {
      "op": "SWAP3"
    },
    "510": {
      "op": "DUP5"
    },
    "511": {
      "op": "ADD"
    },
    "512": {
      "op": "SWAP2"
    },
    "513": {
      "op": "SWAP1"
    },
    "514": {
      "op": "SWAP2"
    },
    "515": {
      "op": "MSTORE"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "518": {
      "op": "DUP4"
    },
    "519": {
      "op": "ADD"
    },
    "520": {
      "op": "MSTORE"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "523": {
      "op": "DUP3"
    },
    "524": {
      "op": "ADD"
    },
    "525": {
      "op": "MSTORE"
    },
    "526": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "528": {
      "op": "ADD"
    },
    "529": {
      "offset": [
        1096,
        1126
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x156"
    },
    "532": {
      "op": "JUMP"
    },
    "533": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "534": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "537": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x444"
    },
    "540": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "541": {
      "fn": "Staking.pause",
      "offset": [
        5011,
        5070
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "542": {
      "fn": "Staking.pause",
      "offset": [
        5011,
        5070
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x177"
    },
    "545": {
      "fn": "Staking.pause",
      "offset": [
        5011,
        5070
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x478"
    },
    "548": {
      "fn": "Staking.pause",
      "jump": "i",
      "offset": [
        5011,
        5070
      ],
      "op": "JUMP",
      "path": "9"
    },
    "549": {
      "offset": [
        1028,
        1063
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "550": {
      "fn": "Staking.pause",
      "offset": [
        1028,
        1063
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x161"
    },
    "553": {
      "fn": "Staking.pause",
      "offset": [
        1028,
        1063
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "555": {
      "fn": "Staking.pause",
      "offset": [
        1028,
        1063
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "556": {
      "fn": "Staking.pause",
      "offset": [
        1028,
        1063
      ],
      "op": "DUP2",
      "path": "9"
    },
    "557": {
      "fn": "Staking.pause",
      "offset": [
        1028,
        1063
      ],
      "op": "JUMP",
      "path": "9"
    },
    "558": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "559": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "561": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "562": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "564": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "571": {
      "op": "SHL"
    },
    "572": {
      "op": "SUB"
    },
    "573": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "574": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "575": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "576": {
      "op": "DUP2"
    },
    "577": {
      "op": "MSTORE"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "580": {
      "op": "ADD"
    },
    "581": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156"
    },
    "584": {
      "op": "JUMP"
    },
    "585": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        3946,
        4462
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "586": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        3946,
        4462
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x161"
    },
    "589": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        3946,
        4462
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x257"
    },
    "592": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        3946,
        4462
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "593": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        3946,
        4462
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "595": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        3946,
        4462
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xEA2"
    },
    "598": {
      "fn": "Staking.calculateRewardDebt",
      "jump": "i",
      "offset": [
        3946,
        4462
      ],
      "op": "JUMP",
      "path": "9"
    },
    "599": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        3946,
        4462
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "600": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        3946,
        4462
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4AA"
    },
    "603": {
      "fn": "Staking.calculateRewardDebt",
      "jump": "i",
      "offset": [
        3946,
        4462
      ],
      "op": "JUMP",
      "path": "9"
    },
    "604": {
      "fn": "Staking.setapr",
      "offset": [
        2103,
        2189
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "605": {
      "fn": "Staking.setapr",
      "offset": [
        2103,
        2189
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x177"
    },
    "608": {
      "fn": "Staking.setapr",
      "offset": [
        2103,
        2189
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26A"
    },
    "611": {
      "fn": "Staking.setapr",
      "offset": [
        2103,
        2189
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "612": {
      "fn": "Staking.setapr",
      "offset": [
        2103,
        2189
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "614": {
      "fn": "Staking.setapr",
      "offset": [
        2103,
        2189
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE89"
    },
    "617": {
      "fn": "Staking.setapr",
      "jump": "i",
      "offset": [
        2103,
        2189
      ],
      "op": "JUMP",
      "path": "9"
    },
    "618": {
      "fn": "Staking.setapr",
      "offset": [
        2103,
        2189
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "619": {
      "fn": "Staking.setapr",
      "offset": [
        2103,
        2189
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x536"
    },
    "622": {
      "fn": "Staking.setapr",
      "jump": "i",
      "offset": [
        2103,
        2189
      ],
      "op": "JUMP",
      "path": "9"
    },
    "623": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2717,
        3291
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "624": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2717,
        3291
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x177"
    },
    "627": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2717,
        3291
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x565"
    },
    "630": {
      "fn": "Staking.leaveStaking",
      "jump": "i",
      "offset": [
        2717,
        3291
      ],
      "op": "JUMP",
      "path": "9"
    },
    "631": {
      "fn": "Staking.claimReward",
      "offset": [
        3319,
        3908
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "632": {
      "fn": "Staking.claimReward",
      "offset": [
        3319,
        3908
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x161"
    },
    "635": {
      "fn": "Staking.claimReward",
      "offset": [
        3319,
        3908
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6E3"
    },
    "638": {
      "fn": "Staking.claimReward",
      "jump": "i",
      "offset": [
        3319,
        3908
      ],
      "op": "JUMP",
      "path": "9"
    },
    "639": {
      "offset": [
        449,
        511
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "640": {
      "fn": "Staking.claimReward",
      "offset": [
        449,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x161"
    },
    "643": {
      "offset": [
        487,
        511
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
    },
    "676": {
      "offset": [
        449,
        511
      ],
      "op": "DUP2",
      "path": "9"
    },
    "677": {
      "fn": "Staking.claimReward",
      "offset": [
        449,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "678": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "679": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "682": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4"
    },
    "685": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "686": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "688": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE6E"
    },
    "691": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "692": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "693": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x821"
    },
    "696": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "697": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4572,
        4904
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "698": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4572,
        4904
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x177"
    },
    "701": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4572,
        4904
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2C7"
    },
    "704": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4572,
        4904
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "705": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4572,
        4904
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "707": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4572,
        4904
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xED4"
    },
    "710": {
      "fn": "Staking.safeNftTransfer",
      "jump": "i",
      "offset": [
        4572,
        4904
      ],
      "op": "JUMP",
      "path": "9"
    },
    "711": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4572,
        4904
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "712": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4572,
        4904
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8BC"
    },
    "715": {
      "fn": "Staking.safeNftTransfer",
      "jump": "i",
      "offset": [
        4572,
        4904
      ],
      "op": "JUMP",
      "path": "9"
    },
    "716": {
      "fn": "Staking.unpause",
      "offset": [
        5076,
        5139
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "717": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "719": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "726": {
      "op": "SHL"
    },
    "727": {
      "op": "SUB"
    },
    "728": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "729": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 3
    },
    "730": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "731": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "734": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "735": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "737": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "738": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "742": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "744": {
      "op": "SHL"
    },
    "745": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "746": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "747": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "749": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "750": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "753": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "754": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEFE"
    },
    "757": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "758": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "759": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "761": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "762": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "763": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "764": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "765": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "766": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "767": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "768": {
      "fn": "Staking.unpause",
      "offset": [
        5122,
        5132
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 4,
      "value": "0x307"
    },
    "771": {
      "fn": "Staking.unpause",
      "offset": [
        5122,
        5130
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA19"
    },
    "774": {
      "fn": "Staking.unpause",
      "jump": "i",
      "offset": [
        5122,
        5132
      ],
      "op": "JUMP",
      "path": "9"
    },
    "775": {
      "fn": "Staking.unpause",
      "offset": [
        5122,
        5132
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "776": {
      "fn": "Staking.unpause",
      "jump": "o",
      "offset": [
        5076,
        5139
      ],
      "op": "JUMP",
      "path": "9"
    },
    "777": {
      "fn": "Staking.enterStaking",
      "offset": [
        2230,
        2666
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "778": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "780": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "782": {
      "fn": "Staking.enterStaking",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "783": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "2"
    },
    "784": {
      "fn": "Staking.enterStaking",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "785": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32C"
    },
    "788": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "789": {
      "fn": "Staking.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "791": {
      "fn": "Staking.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "792": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "796": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "798": {
      "op": "SHL"
    },
    "799": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "800": {
      "fn": "Staking.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "801": {
      "fn": "Staking.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "803": {
      "fn": "Staking.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "804": {
      "fn": "Staking.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6"
    },
    "807": {
      "fn": "Staking.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "808": {
      "fn": "Staking.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF33"
    },
    "811": {
      "fn": "Staking.enterStaking",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "2"
    },
    "812": {
      "fn": "Staking.enterStaking",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "813": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "815": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "817": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "818": {
      "fn": "Staking.enterStaking",
      "offset": [
        2331,
        2341
      ],
      "op": "CALLER",
      "path": "9"
    },
    "819": {
      "fn": "Staking.enterStaking",
      "offset": [
        2298,
        2319
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "821": {
      "fn": "Staking.enterStaking",
      "offset": [
        2322,
        2342
      ],
      "op": "DUP2",
      "path": "9"
    },
    "822": {
      "fn": "Staking.enterStaking",
      "offset": [
        2322,
        2342
      ],
      "op": "DUP2",
      "path": "9"
    },
    "823": {
      "fn": "Staking.enterStaking",
      "offset": [
        2322,
        2342
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "824": {
      "fn": "Staking.enterStaking",
      "offset": [
        2322,
        2330
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x8"
    },
    "826": {
      "fn": "Staking.enterStaking",
      "offset": [
        2322,
        2342
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "828": {
      "fn": "Staking.enterStaking",
      "offset": [
        2322,
        2342
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "829": {
      "fn": "Staking.enterStaking",
      "offset": [
        2322,
        2342
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "831": {
      "fn": "Staking.enterStaking",
      "offset": [
        2322,
        2342
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "832": {
      "fn": "Staking.enterStaking",
      "offset": [
        2322,
        2342
      ],
      "op": "DUP2",
      "path": "9"
    },
    "833": {
      "fn": "Staking.enterStaking",
      "offset": [
        2322,
        2342
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "834": {
      "fn": "Staking.enterStaking",
      "offset": [
        2322,
        2342
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "835": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2375
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 5,
      "value": "0x4"
    },
    "837": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2375
      ],
      "op": "DUP1",
      "path": "9"
    },
    "838": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2375
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "839": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "840": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "841": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "846": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "848": {
      "op": "SHL"
    },
    "849": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "DUP2",
      "path": "9"
    },
    "850": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "851": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "852": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "DUP2",
      "path": "9"
    },
    "853": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "ADD",
      "path": "9"
    },
    "854": {
      "op": "SWAP4"
    },
    "855": {
      "op": "SWAP1"
    },
    "856": {
      "op": "SWAP4"
    },
    "857": {
      "op": "MSTORE"
    },
    "858": {
      "fn": "Staking.enterStaking",
      "offset": [
        2447,
        2451
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "861": {
      "op": "DUP5"
    },
    "862": {
      "op": "ADD"
    },
    "863": {
      "op": "MSTORE"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "866": {
      "op": "DUP4"
    },
    "867": {
      "op": "ADD"
    },
    "868": {
      "op": "DUP5"
    },
    "869": {
      "op": "SWAP1"
    },
    "870": {
      "op": "MSTORE"
    },
    "871": {
      "fn": "Staking.enterStaking",
      "offset": [
        2322,
        2342
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "878": {
      "op": "SHL"
    },
    "879": {
      "op": "SUB"
    },
    "880": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2375
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "881": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2375
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "882": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2375
      ],
      "op": "AND",
      "path": "9"
    },
    "883": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2375
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "884": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2392
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x42842E0E"
    },
    "889": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2392
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "895": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "897": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "898": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "DUP1",
      "path": "9"
    },
    "899": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "DUP4",
      "path": "9"
    },
    "900": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "SUB",
      "path": "9"
    },
    "901": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "DUP2",
      "path": "9"
    },
    "902": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "904": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "DUP8",
      "path": "9"
    },
    "905": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "DUP1",
      "path": "9"
    },
    "906": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "907": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "908": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "DUP1",
      "path": "9"
    },
    "909": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "910": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x396"
    },
    "913": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "914": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "916": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "DUP1",
      "path": "9"
    },
    "917": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "REVERT",
      "path": "9"
    },
    "918": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "919": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "POP",
      "path": "9"
    },
    "920": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "GAS",
      "path": "9"
    },
    "921": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "CALL",
      "path": "9"
    },
    "922": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "923": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "DUP1",
      "path": "9"
    },
    "924": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "925": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3AA"
    },
    "928": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "929": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "930": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "932": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "DUP1",
      "path": "9"
    },
    "933": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "934": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "935": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "937": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "REVERT",
      "path": "9"
    },
    "938": {
      "fn": "Staking.enterStaking",
      "offset": [
        2352,
        2482
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "939": {
      "op": "POP"
    },
    "940": {
      "op": "POP"
    },
    "941": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 6
    },
    "942": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "943": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "945": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "DUP2",
      "path": "9"
    },
    "946": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "DUP2",
      "path": "9"
    },
    "947": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "ADD",
      "path": "9"
    },
    "948": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "DUP6",
      "path": "9"
    },
    "949": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "950": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2506
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "952": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "DUP6",
      "path": "9"
    },
    "953": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "DUP2",
      "path": "9"
    },
    "954": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "955": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "957": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "958": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "959": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "960": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "961": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "ADD",
      "path": "9"
    },
    "962": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "DUP6",
      "path": "9"
    },
    "963": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "964": {
      "fn": "Staking.enterStaking",
      "offset": [
        2492,
        2519
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "965": {
      "fn": "Staking.enterStaking",
      "offset": [
        2533,
        2547
      ],
      "op": "DUP4",
      "path": "9"
    },
    "966": {
      "fn": "Staking.enterStaking",
      "offset": [
        2533,
        2547
      ],
      "op": "ADD",
      "path": "9"
    },
    "967": {
      "fn": "Staking.enterStaking",
      "offset": [
        2533,
        2547
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "968": {
      "branch": 41,
      "fn": "Staking.enterStaking",
      "offset": [
        2533,
        2552
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "969": {
      "fn": "Staking.enterStaking",
      "offset": [
        2529,
        2612
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "970": {
      "fn": "Staking.enterStaking",
      "offset": [
        2529,
        2612
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "971": {
      "op": "POP"
    },
    "972": {
      "fn": "Staking.enterStaking",
      "offset": [
        2529,
        2612
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3D8"
    },
    "975": {
      "fn": "Staking.enterStaking",
      "offset": [
        2529,
        2612
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "976": {
      "op": "POP"
    },
    "977": {
      "branch": 41,
      "fn": "Staking.enterStaking",
      "offset": [
        2529,
        2612
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "978": {
      "fn": "Staking.getCurrentTime",
      "offset": [
        4983,
        4998
      ],
      "op": "TIMESTAMP",
      "path": "9"
    },
    "979": {
      "fn": "Staking.enterStaking",
      "offset": [
        2568,
        2582
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 7,
      "value": "0x1"
    },
    "981": {
      "fn": "Staking.enterStaking",
      "offset": [
        2568,
        2582
      ],
      "op": "DUP3",
      "path": "9"
    },
    "982": {
      "fn": "Staking.enterStaking",
      "offset": [
        2568,
        2582
      ],
      "op": "ADD",
      "path": "9"
    },
    "983": {
      "fn": "Staking.enterStaking",
      "offset": [
        2568,
        2601
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "984": {
      "fn": "Staking.enterStaking",
      "offset": [
        2529,
        2612
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "985": {
      "fn": "Staking.enterStaking",
      "offset": [
        2627,
        2659
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 8,
      "value": "0x40"
    },
    "987": {
      "fn": "Staking.enterStaking",
      "offset": [
        2627,
        2659
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "988": {
      "op": "DUP3"
    },
    "989": {
      "op": "DUP2"
    },
    "990": {
      "op": "MSTORE"
    },
    "991": {
      "fn": "Staking.enterStaking",
      "offset": [
        2640,
        2650
      ],
      "op": "CALLER",
      "path": "9"
    },
    "992": {
      "fn": "Staking.enterStaking",
      "offset": [
        2640,
        2650
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "993": {
      "fn": "Staking.enterStaking",
      "offset": [
        2627,
        2659
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xF4202CE22960ADA59AA4BB9F0E324D8F77576BE8352767DFC0ACA182A4BF8E45"
    },
    "1026": {
      "fn": "Staking.enterStaking",
      "offset": [
        2627,
        2659
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1029": {
      "op": "ADD"
    },
    "1030": {
      "fn": "Staking.enterStaking",
      "offset": [
        2627,
        2659
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1032": {
      "fn": "Staking.enterStaking",
      "offset": [
        2627,
        2659
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1033": {
      "fn": "Staking.enterStaking",
      "offset": [
        2627,
        2659
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1034": {
      "fn": "Staking.enterStaking",
      "offset": [
        2627,
        2659
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1035": {
      "fn": "Staking.enterStaking",
      "offset": [
        2627,
        2659
      ],
      "op": "SUB",
      "path": "9"
    },
    "1036": {
      "fn": "Staking.enterStaking",
      "offset": [
        2627,
        2659
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1037": {
      "fn": "Staking.enterStaking",
      "offset": [
        2627,
        2659
      ],
      "op": "LOG2",
      "path": "9"
    },
    "1038": {
      "op": "POP"
    },
    "1039": {
      "op": "POP"
    },
    "1040": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1042": {
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1043": {
      "fn": "Staking.enterStaking",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1044": {
      "fn": "Staking.enterStaking",
      "jump": "o",
      "offset": [
        2230,
        2666
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1045": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1903,
        2024
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1046": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1048": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1055": {
      "op": "SHL"
    },
    "1056": {
      "op": "SUB"
    },
    "1057": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1058": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1059": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1060": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43F"
    },
    "1063": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1064": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1066": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1067": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1073": {
      "op": "SHL"
    },
    "1074": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1075": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1076": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1078": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1079": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1082": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1083": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEFE"
    },
    "1086": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1087": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1088": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1982,
        1998
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 9,
      "value": "0x2"
    },
    "1090": {
      "fn": "Staking.updateMultiplier",
      "offset": [
        1982,
        2017
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1091": {
      "fn": "Staking.updateMultiplier",
      "jump": "o",
      "offset": [
        1903,
        2024
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1092": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1093": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1095": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1102": {
      "op": "SHL"
    },
    "1103": {
      "op": "SUB"
    },
    "1104": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1105": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1106": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1107": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46E"
    },
    "1110": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1111": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1113": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1114": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1120": {
      "op": "SHL"
    },
    "1121": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1122": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1123": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1125": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1126": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1129": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1130": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEFE"
    },
    "1133": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1134": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1135": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x307"
    },
    "1138": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1140": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB6"
    },
    "1143": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1144": {
      "fn": "Staking.pause",
      "offset": [
        5011,
        5070
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1145": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1147": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1154": {
      "op": "SHL"
    },
    "1155": {
      "op": "SUB"
    },
    "1156": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1157": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1158": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1159": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A2"
    },
    "1162": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1163": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1165": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1166": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1172": {
      "op": "SHL"
    },
    "1173": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1174": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1175": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1177": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1178": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1181": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1182": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEFE"
    },
    "1185": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1186": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1187": {
      "fn": "Staking.pause",
      "offset": [
        5055,
        5063
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 11,
      "value": "0x307"
    },
    "1190": {
      "fn": "Staking.pause",
      "offset": [
        5055,
        5061
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB06"
    },
    "1193": {
      "fn": "Staking.pause",
      "jump": "i",
      "offset": [
        5055,
        5063
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1194": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        3946,
        4462
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1195": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4114,
        4121
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1197": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4133,
        4151
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1198": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4170,
        4186
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1200": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4170,
        4186
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1201": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4161,
        4166
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1202": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4155,
        4158
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1203": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4155,
        4166
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4BC"
    },
    "1206": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4155,
        4166
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1207": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4155,
        4166
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1208": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4155,
        4166
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF80"
    },
    "1211": {
      "fn": "Staking.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4155,
        4166
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1212": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4155,
        4166
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1213": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4154,
        4186
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4C6"
    },
    "1216": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4154,
        4186
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1217": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4154,
        4186
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1218": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4154,
        4186
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF97"
    },
    "1221": {
      "fn": "Staking.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4154,
        4186
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1222": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4154,
        4186
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1223": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4133,
        4186
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1224": {
      "op": "POP"
    },
    "1225": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4196,
        4216
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1227": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4219,
        4237
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4D7"
    },
    "1230": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4232,
        4237
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x15180"
    },
    "1234": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4133,
        4186
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1235": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4219,
        4237
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFB6"
    },
    "1238": {
      "fn": "Staking.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4219,
        4237
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1239": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4219,
        4237
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1240": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4196,
        4237
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1241": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4196,
        4237
      ],
      "op": "POP",
      "path": "9"
    },
    "1242": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4272,
        4289
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1244": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4319,
        4322
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16D"
    },
    "1247": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4293,
        4304
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1249": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4293,
        4308
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1250": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4293,
        4308
      ],
      "op": "ADD",
      "path": "9"
    },
    "1251": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4293,
        4308
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1252": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4311,
        4315
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3E8"
    },
    "1255": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4293,
        4315
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4F0"
    },
    "1258": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4293,
        4315
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1259": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4293,
        4315
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1260": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4293,
        4315
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF97"
    },
    "1263": {
      "fn": "Staking.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4293,
        4315
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1264": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4293,
        4315
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1265": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4292,
        4322
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4FA"
    },
    "1268": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4292,
        4322
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1269": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4292,
        4322
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1270": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4292,
        4322
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFB6"
    },
    "1273": {
      "fn": "Staking.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4292,
        4322
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1274": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4292,
        4322
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1275": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4272,
        4322
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1276": {
      "op": "POP"
    },
    "1277": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4434,
        4455
      ],
      "op": "DUP5",
      "path": "9",
      "statement": 12
    },
    "1278": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4407,
        4418
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0xF4240"
    },
    "1282": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4272,
        4322
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1283": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4352,
        4378
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x50C"
    },
    "1286": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4366,
        4378
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1287": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4352,
        4363
      ],
      "op": "DUP11",
      "path": "9"
    },
    "1288": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4352,
        4378
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF97"
    },
    "1291": {
      "fn": "Staking.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4352,
        4378
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1292": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4352,
        4378
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1293": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4352,
        4390
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x516"
    },
    "1296": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4352,
        4390
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1297": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4352,
        4390
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1298": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4352,
        4390
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF97"
    },
    "1301": {
      "fn": "Staking.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4352,
        4390
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1302": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4352,
        4390
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1303": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4351,
        4419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x520"
    },
    "1306": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4351,
        4419
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1307": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4351,
        4419
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1308": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4351,
        4419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFB6"
    },
    "1311": {
      "fn": "Staking.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4351,
        4419
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1312": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4351,
        4419
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1313": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4351,
        4455
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x52A"
    },
    "1316": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4351,
        4455
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1317": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4351,
        4455
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1318": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4351,
        4455
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF80"
    },
    "1321": {
      "fn": "Staking.calculateRewardDebt",
      "jump": "i",
      "offset": [
        4351,
        4455
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1322": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4351,
        4455
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1323": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        4332,
        4455
      ],
      "op": "SWAP9",
      "path": "9"
    },
    "1324": {
      "fn": "Staking.calculateRewardDebt",
      "offset": [
        3946,
        4462
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "1325": {
      "op": "POP"
    },
    "1326": {
      "op": "POP"
    },
    "1327": {
      "op": "POP"
    },
    "1328": {
      "op": "POP"
    },
    "1329": {
      "op": "POP"
    },
    "1330": {
      "op": "POP"
    },
    "1331": {
      "op": "POP"
    },
    "1332": {
      "op": "POP"
    },
    "1333": {
      "fn": "Staking.calculateRewardDebt",
      "jump": "o",
      "offset": [
        3946,
        4462
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1334": {
      "fn": "Staking.setapr",
      "offset": [
        2103,
        2189
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1335": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1337": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1344": {
      "op": "SHL"
    },
    "1345": {
      "op": "SUB"
    },
    "1346": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1347": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1348": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1349": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x560"
    },
    "1352": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1353": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1355": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1356": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1362": {
      "op": "SHL"
    },
    "1363": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1364": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1365": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1367": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1368": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "1371": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1372": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEFE"
    },
    "1375": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1376": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1377": {
      "fn": "Staking.setapr",
      "offset": [
        2160,
        2175
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 13,
      "value": "0x6"
    },
    "1379": {
      "fn": "Staking.setapr",
      "offset": [
        2160,
        2182
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1380": {
      "fn": "Staking.setapr",
      "jump": "o",
      "offset": [
        2103,
        2189
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1381": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2717,
        3291
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1382": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1384": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1389": {
      "op": "SHL"
    },
    "1390": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1391": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "1"
    },
    "1392": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1394": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "1"
    },
    "1395": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1396": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58F"
    },
    "1399": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1400": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1402": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1403": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1409": {
      "op": "SHL"
    },
    "1410": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1411": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1412": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1414": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "1"
    },
    "1415": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F6"
    },
    "1418": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1419": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFD8"
    },
    "1422": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1423": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1424": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1426": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1428": {
      "fn": "Pausable.paused",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1429": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "2"
    },
    "1430": {
      "fn": "Pausable.paused",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1431": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B2"
    },
    "1434": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1435": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1437": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1438": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1444": {
      "op": "SHL"
    },
    "1445": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1446": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1447": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1449": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "1450": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6"
    },
    "1453": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1454": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF33"
    },
    "1457": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1458": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1459": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1461": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1463": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1464": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2818,
        2828
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1465": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2785,
        2806
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1467": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2809,
        2829
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1468": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2809,
        2829
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1469": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2809,
        2829
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1470": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2809,
        2817
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x8"
    },
    "1472": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2809,
        2829
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1474": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2809,
        2829
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1475": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2809,
        2829
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1477": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2809,
        2829
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1478": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2809,
        2829
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1479": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2809,
        2829
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1480": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2839,
        3134
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1481": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2902,
        2923
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1482": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2902,
        2923
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1483": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2891,
        2923
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1484": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2891,
        2923
      ],
      "op": "LT",
      "path": "9"
    },
    "1485": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2839,
        3134
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1486": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2839,
        3134
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x684"
    },
    "1489": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2839,
        3134
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1490": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        2995
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 14,
      "value": "0x4"
    },
    "1492": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        2995
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1493": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1494": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "op": "SUB"
    },
    "1503": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        2995
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1504": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        2995
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1505": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        2995
      ],
      "op": "AND",
      "path": "9"
    },
    "1506": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        2995
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1507": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3008
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x23B872DD"
    },
    "1512": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3008
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1513": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3034,
        3038
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "1514": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3034,
        3038
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1515": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3057,
        3067
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1516": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3057,
        3067
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1517": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3089
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1518": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3089
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1519": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3100,
        3108
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1520": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3100,
        3108
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1521": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1522": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "LT",
      "path": "9"
    },
    "1523": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5FE"
    },
    "1526": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1527": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5FE"
    },
    "1530": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1002"
    },
    "1533": {
      "fn": "Staking.leaveStaking",
      "jump": "i",
      "offset": [
        3085,
        3109
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1534": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1535": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1537": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1538": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1539": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1540": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1542": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1543": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1544": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1545": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "ADD",
      "path": "9"
    },
    "1546": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3085,
        3109
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1547": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1549": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1556": {
      "op": "SHL"
    },
    "1557": {
      "op": "SUB"
    },
    "1558": {
      "op": "NOT"
    },
    "1559": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "1561": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1562": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1563": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "SHL",
      "path": "9"
    },
    "1564": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "AND",
      "path": "9"
    },
    "1565": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1566": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1573": {
      "op": "SHL"
    },
    "1574": {
      "op": "SUB"
    },
    "1575": {
      "op": "SWAP4"
    },
    "1576": {
      "op": "DUP5"
    },
    "1577": {
      "op": "AND"
    },
    "1578": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1580": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1581": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "ADD",
      "path": "9"
    },
    "1582": {
      "op": "MSTORE"
    },
    "1583": {
      "op": "SWAP3"
    },
    "1584": {
      "op": "SWAP1"
    },
    "1585": {
      "op": "SWAP2"
    },
    "1586": {
      "op": "AND"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1589": {
      "op": "DUP4"
    },
    "1590": {
      "op": "ADD"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1594": {
      "op": "DUP3"
    },
    "1595": {
      "op": "ADD"
    },
    "1596": {
      "op": "MSTORE"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1599": {
      "op": "ADD"
    },
    "1600": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1602": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1604": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1605": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1606": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1607": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "SUB",
      "path": "9"
    },
    "1608": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1609": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1611": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1612": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1613": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "1614": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1615": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1616": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1617": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x659"
    },
    "1620": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1621": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1623": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1624": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1625": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1626": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "POP",
      "path": "9"
    },
    "1627": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "GAS",
      "path": "9"
    },
    "1628": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "CALL",
      "path": "9"
    },
    "1629": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1630": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1631": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1632": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x66D"
    },
    "1635": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1636": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1637": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1639": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1640": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "1641": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1642": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1644": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1645": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1646": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "POP",
      "path": "9"
    },
    "1647": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "POP",
      "path": "9"
    },
    "1648": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "POP",
      "path": "9"
    },
    "1649": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2972,
        3123
      ],
      "op": "POP",
      "path": "9"
    },
    "1650": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2937,
        2947
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 15
    },
    "1651": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2937,
        2947
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1652": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2937,
        2947
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x67C"
    },
    "1655": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2937,
        2947
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1656": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2937,
        2947
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1018"
    },
    "1659": {
      "fn": "Staking.leaveStaking",
      "jump": "i",
      "offset": [
        2937,
        2947
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1660": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2937,
        2947
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1661": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2937,
        2947
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1662": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2937,
        2947
      ],
      "op": "POP",
      "path": "9"
    },
    "1663": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2937,
        2947
      ],
      "op": "POP",
      "path": "9"
    },
    "1664": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2839,
        3134
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C8"
    },
    "1667": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2839,
        3134
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1668": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2839,
        3134
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1669": {
      "op": "POP"
    },
    "1670": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3143,
        3165
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "1672": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3175,
        3197
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 16
    },
    "1673": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3175,
        3197
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1674": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3175,
        3197
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x697"
    },
    "1677": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3175,
        3197
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1678": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3175,
        3179
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1679": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3175,
        3179
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1680": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3175,
        3197
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "1682": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3175,
        3197
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1683": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3175,
        3197
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDF2"
    },
    "1686": {
      "fn": "Staking.leaveStaking",
      "jump": "i",
      "offset": [
        3175,
        3197
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1687": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3175,
        3197
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1688": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3175,
        3197
      ],
      "op": "POP",
      "path": "9"
    },
    "1689": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3207,
        3221
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1691": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3224,
        3237
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6A2"
    },
    "1694": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3224,
        3235
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6E3"
    },
    "1697": {
      "fn": "Staking.leaveStaking",
      "jump": "i",
      "offset": [
        3224,
        3237
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1698": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3224,
        3237
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1699": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3252,
        3284
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 17,
      "value": "0x40"
    },
    "1701": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3252,
        3284
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1702": {
      "op": "DUP2"
    },
    "1703": {
      "op": "DUP2"
    },
    "1704": {
      "op": "MSTORE"
    },
    "1705": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3207,
        3237
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1706": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3207,
        3237
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1707": {
      "op": "POP"
    },
    "1708": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3265,
        3275
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1709": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3265,
        3275
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1710": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3252,
        3284
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xBEEAC20C93F16ECC5D2707DFFEB3263A7F99053AC0AA548803E9E8B5A0007438"
    },
    "1743": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3252,
        3284
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1746": {
      "op": "ADD"
    },
    "1747": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3252,
        3284
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1749": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3252,
        3284
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1750": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3252,
        3284
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1751": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3252,
        3284
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1752": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3252,
        3284
      ],
      "op": "SUB",
      "path": "9"
    },
    "1753": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3252,
        3284
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1754": {
      "fn": "Staking.leaveStaking",
      "offset": [
        3252,
        3284
      ],
      "op": "LOG2",
      "path": "9"
    },
    "1755": {
      "op": "POP"
    },
    "1756": {
      "op": "POP"
    },
    "1757": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1759": {
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1760": {
      "fn": "Staking.leaveStaking",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1761": {
      "op": "POP"
    },
    "1762": {
      "fn": "Staking.leaveStaking",
      "jump": "o",
      "offset": [
        2717,
        3291
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1763": {
      "fn": "Staking.claimReward",
      "offset": [
        3319,
        3908
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1764": {
      "fn": "Staking.claimReward",
      "offset": [
        3385,
        3392
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1766": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1767": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1772": {
      "op": "SHL"
    },
    "1773": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1774": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "1"
    },
    "1775": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1777": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "1"
    },
    "1778": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1779": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x70E"
    },
    "1782": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1783": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1785": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1786": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1792": {
      "op": "SHL"
    },
    "1793": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1794": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1795": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1797": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "1"
    },
    "1798": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F6"
    },
    "1801": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1802": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFD8"
    },
    "1805": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1806": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1807": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1809": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1811": {
      "fn": "Pausable.paused",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1812": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "2"
    },
    "1813": {
      "branch": 48,
      "fn": "Pausable.paused",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1814": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x731"
    },
    "1817": {
      "branch": 48,
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1818": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1820": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1821": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1827": {
      "op": "SHL"
    },
    "1828": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1829": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1830": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1832": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "2"
    },
    "1833": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6"
    },
    "1836": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1837": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF33"
    },
    "1840": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1841": {
      "fn": "Pausable.paused",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1842": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1844": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1846": {
      "offset": [
        2389,
        2407
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1847": {
      "fn": "Pausable.paused",
      "offset": [
        2389,
        2407
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1848": {
      "fn": "Pausable.paused",
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1849": {
      "fn": "Staking.claimReward",
      "offset": [
        3437,
        3447
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1850": {
      "fn": "Staking.claimReward",
      "offset": [
        3404,
        3425
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1852": {
      "fn": "Staking.claimReward",
      "offset": [
        3428,
        3448
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1853": {
      "fn": "Staking.claimReward",
      "offset": [
        3428,
        3448
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1854": {
      "fn": "Staking.claimReward",
      "offset": [
        3428,
        3448
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1855": {
      "fn": "Staking.claimReward",
      "offset": [
        3428,
        3436
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x8"
    },
    "1857": {
      "fn": "Staking.claimReward",
      "offset": [
        3428,
        3448
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1859": {
      "fn": "Staking.claimReward",
      "offset": [
        3428,
        3448
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1860": {
      "fn": "Staking.claimReward",
      "offset": [
        3428,
        3448
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1862": {
      "fn": "Staking.claimReward",
      "offset": [
        3428,
        3448
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1863": {
      "fn": "Staking.claimReward",
      "offset": [
        3428,
        3448
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1864": {
      "fn": "Staking.claimReward",
      "offset": [
        3509,
        3523
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1865": {
      "fn": "Staking.claimReward",
      "offset": [
        3509,
        3523
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1866": {
      "fn": "Staking.claimReward",
      "offset": [
        3509,
        3523
      ],
      "op": "ADD",
      "path": "9"
    },
    "1867": {
      "fn": "Staking.claimReward",
      "offset": [
        3509,
        3523
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1868": {
      "fn": "Staking.claimReward",
      "offset": [
        3476,
        3667
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x769"
    },
    "1871": {
      "fn": "Staking.claimReward",
      "offset": [
        3476,
        3667
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1872": {
      "fn": "Staking.getCurrentTime",
      "offset": [
        4983,
        4998
      ],
      "op": "TIMESTAMP",
      "path": "9"
    },
    "1873": {
      "fn": "Staking.claimReward",
      "offset": [
        3591,
        3616
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "1875": {
      "fn": "Staking.claimReward",
      "offset": [
        3591,
        3616
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1876": {
      "fn": "Staking.claimReward",
      "offset": [
        3567,
        3588
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1877": {
      "fn": "Staking.claimReward",
      "offset": [
        3567,
        3588
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1878": {
      "fn": "Staking.claimReward",
      "offset": [
        3567,
        3616
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x75F"
    },
    "1881": {
      "fn": "Staking.claimReward",
      "offset": [
        3567,
        3616
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1882": {
      "fn": "Staking.claimReward",
      "offset": [
        3591,
        3616
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1883": {
      "fn": "Staking.claimReward",
      "offset": [
        3567,
        3616
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF97"
    },
    "1886": {
      "fn": "Staking.claimReward",
      "jump": "i",
      "offset": [
        3567,
        3616
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1887": {
      "fn": "Staking.claimReward",
      "offset": [
        3567,
        3616
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1888": {
      "fn": "Staking.claimReward",
      "offset": [
        3630,
        3634
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1889": {
      "fn": "Staking.claimReward",
      "offset": [
        3630,
        3657
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1891": {
      "fn": "Staking.claimReward",
      "offset": [
        3630,
        3657
      ],
      "op": "ADD",
      "path": "9"
    },
    "1892": {
      "fn": "Staking.claimReward",
      "offset": [
        3630,
        3657
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1893": {
      "fn": "Staking.claimReward",
      "offset": [
        3476,
        3495
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4AA"
    },
    "1896": {
      "fn": "Staking.claimReward",
      "jump": "i",
      "offset": [
        3476,
        3667
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1897": {
      "fn": "Staking.claimReward",
      "offset": [
        3476,
        3667
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1898": {
      "fn": "Staking.claimReward",
      "offset": [
        3677,
        3688
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 18,
      "value": "0x3"
    },
    "1900": {
      "fn": "Staking.claimReward",
      "offset": [
        3677,
        3700
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1901": {
      "fn": "Staking.claimReward",
      "offset": [
        3459,
        3667
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1902": {
      "fn": "Staking.claimReward",
      "offset": [
        3459,
        3667
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1903": {
      "op": "POP"
    },
    "1904": {
      "fn": "Staking.claimReward",
      "offset": [
        3677,
        3733
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x783"
    },
    "1907": {
      "fn": "Staking.claimReward",
      "offset": [
        3677,
        3733
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1914": {
      "op": "SHL"
    },
    "1915": {
      "op": "SUB"
    },
    "1916": {
      "fn": "Staking.claimReward",
      "offset": [
        3677,
        3700
      ],
      "op": "AND",
      "path": "9"
    },
    "1917": {
      "fn": "Staking.claimReward",
      "offset": [
        3714,
        3724
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1918": {
      "fn": "Staking.claimReward",
      "offset": [
        3459,
        3667
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1919": {
      "fn": "Staking.claimReward",
      "offset": [
        3677,
        3713
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB6B"
    },
    "1922": {
      "fn": "Staking.claimReward",
      "jump": "i",
      "offset": [
        3677,
        3733
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1923": {
      "fn": "Staking.claimReward",
      "offset": [
        3677,
        3733
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1924": {
      "fn": "Staking.claimReward",
      "offset": [
        3760,
        3761
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 19,
      "value": "0x0"
    },
    "1926": {
      "fn": "Staking.claimReward",
      "offset": [
        3751,
        3757
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1927": {
      "branch": 42,
      "fn": "Staking.claimReward",
      "offset": [
        3751,
        3761
      ],
      "op": "GT",
      "path": "9"
    },
    "1928": {
      "fn": "Staking.claimReward",
      "offset": [
        3743,
        3785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7C9"
    },
    "1931": {
      "branch": 42,
      "fn": "Staking.claimReward",
      "offset": [
        3743,
        3785
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1932": {
      "fn": "Staking.claimReward",
      "offset": [
        3743,
        3785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1934": {
      "fn": "Staking.claimReward",
      "offset": [
        3743,
        3785
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1935": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1941": {
      "op": "SHL"
    },
    "1942": {
      "fn": "Staking.claimReward",
      "offset": [
        3743,
        3785
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1943": {
      "fn": "Staking.claimReward",
      "offset": [
        3743,
        3785
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1946": {
      "fn": "Staking.claimReward",
      "offset": [
        3743,
        3785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1948": {
      "fn": "Staking.claimReward",
      "offset": [
        3743,
        3785
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1949": {
      "fn": "Staking.claimReward",
      "offset": [
        3743,
        3785
      ],
      "op": "ADD",
      "path": "9"
    },
    "1950": {
      "op": "MSTORE"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1955": {
      "op": "DUP3"
    },
    "1956": {
      "op": "ADD"
    },
    "1957": {
      "op": "MSTORE"
    },
    "1958": {
      "op": "PUSH19",
      "value": "0x52657761726420416D6F756E743A207775743F"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1980": {
      "op": "SHL"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1983": {
      "op": "DUP3"
    },
    "1984": {
      "op": "ADD"
    },
    "1985": {
      "op": "MSTORE"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1988": {
      "op": "ADD"
    },
    "1989": {
      "fn": "Staking.claimReward",
      "offset": [
        3743,
        3785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F6"
    },
    "1992": {
      "op": "JUMP"
    },
    "1993": {
      "fn": "Staking.claimReward",
      "offset": [
        3743,
        3785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1994": {
      "fn": "Staking.claimReward",
      "offset": [
        3826,
        3832
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 20
    },
    "1995": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3799
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1996": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3822
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1998": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3822
      ],
      "op": "ADD",
      "path": "9"
    },
    "1999": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3822
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2001": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3832
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2002": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3832
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2003": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3832
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2004": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3832
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7DD"
    },
    "2007": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3832
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2008": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3832
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2009": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3832
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1033"
    },
    "2012": {
      "fn": "Staking.claimReward",
      "jump": "i",
      "offset": [
        3795,
        3832
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2013": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3832
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2014": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3832
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2015": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3832
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2016": {
      "fn": "Staking.claimReward",
      "offset": [
        3795,
        3832
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2017": {
      "op": "POP"
    },
    "2018": {
      "op": "POP"
    },
    "2019": {
      "fn": "Staking.claimReward",
      "offset": [
        3847,
        3878
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 21,
      "value": "0x40"
    },
    "2021": {
      "fn": "Staking.claimReward",
      "offset": [
        3847,
        3878
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2022": {
      "op": "DUP2"
    },
    "2023": {
      "op": "DUP2"
    },
    "2024": {
      "op": "MSTORE"
    },
    "2025": {
      "fn": "Staking.claimReward",
      "offset": [
        3859,
        3869
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2026": {
      "fn": "Staking.claimReward",
      "offset": [
        3859,
        3869
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2027": {
      "fn": "Staking.claimReward",
      "offset": [
        3847,
        3878
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E"
    },
    "2060": {
      "fn": "Staking.claimReward",
      "offset": [
        3847,
        3878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2063": {
      "op": "ADD"
    },
    "2064": {
      "fn": "Staking.claimReward",
      "offset": [
        3847,
        3878
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2066": {
      "fn": "Staking.claimReward",
      "offset": [
        3847,
        3878
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2067": {
      "fn": "Staking.claimReward",
      "offset": [
        3847,
        3878
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2068": {
      "fn": "Staking.claimReward",
      "offset": [
        3847,
        3878
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2069": {
      "fn": "Staking.claimReward",
      "offset": [
        3847,
        3878
      ],
      "op": "SUB",
      "path": "9"
    },
    "2070": {
      "fn": "Staking.claimReward",
      "offset": [
        3847,
        3878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2071": {
      "fn": "Staking.claimReward",
      "offset": [
        3847,
        3878
      ],
      "op": "LOG2",
      "path": "9"
    },
    "2072": {
      "fn": "Staking.claimReward",
      "offset": [
        3895,
        3901
      ],
      "op": "SWAP2",
      "path": "9",
      "statement": 22
    },
    "2073": {
      "op": "POP"
    },
    "2074": {
      "op": "POP"
    },
    "2075": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2077": {
      "offset": [
        2562,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2078": {
      "fn": "Staking.claimReward",
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2079": {
      "fn": "Staking.claimReward",
      "offset": [
        3319,
        3908
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2080": {
      "fn": "Staking.claimReward",
      "jump": "o",
      "offset": [
        3319,
        3908
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2081": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2082": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2084": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2091": {
      "op": "SHL"
    },
    "2092": {
      "op": "SUB"
    },
    "2093": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2094": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2095": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2096": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84B"
    },
    "2099": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2100": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2102": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2103": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2109": {
      "op": "SHL"
    },
    "2110": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2111": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2112": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2114": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2115": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "2118": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2119": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEFE"
    },
    "2122": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2123": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2130": {
      "op": "SHL"
    },
    "2131": {
      "op": "SUB"
    },
    "2132": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 23
    },
    "2133": {
      "branch": 47,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "2134": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B0"
    },
    "2137": {
      "branch": 47,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2138": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2140": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2141": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2147": {
      "op": "SHL"
    },
    "2148": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2149": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2152": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2155": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "2156": {
      "op": "MSTORE"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2161": {
      "op": "DUP3"
    },
    "2162": {
      "op": "ADD"
    },
    "2163": {
      "op": "MSTORE"
    },
    "2164": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2199": {
      "op": "DUP3"
    },
    "2200": {
      "op": "ADD"
    },
    "2201": {
      "op": "MSTORE"
    },
    "2202": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2211": {
      "op": "SHL"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2214": {
      "op": "DUP3"
    },
    "2215": {
      "op": "ADD"
    },
    "2216": {
      "op": "MSTORE"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2219": {
      "op": "ADD"
    },
    "2220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "2223": {
      "op": "JUMP"
    },
    "2224": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 24,
      "value": "0x8B9"
    },
    "2228": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2229": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB6"
    },
    "2232": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2233": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "2235": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2236": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4572,
        4904
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2237": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2239": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2246": {
      "op": "SHL"
    },
    "2247": {
      "op": "SUB"
    },
    "2248": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2249": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2250": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2251": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E6"
    },
    "2254": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2255": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2257": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2258": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2264": {
      "op": "SHL"
    },
    "2265": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2266": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2267": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2269": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2270": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "2273": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2274": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEFE"
    },
    "2277": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2278": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2279": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4682
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "2281": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4694
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2282": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2284": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2285": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2294": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2295": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4713,
        4717
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "2296": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2298": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2299": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "ADD",
      "path": "9"
    },
    "2300": {
      "op": "MSTORE"
    },
    "2301": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4654,
        4668
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2303": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4654,
        4668
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2310": {
      "op": "SHL"
    },
    "2311": {
      "op": "SUB"
    },
    "2312": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4694
      ],
      "op": "AND",
      "path": "9"
    },
    "2313": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4694
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2314": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4704
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x70A08231"
    },
    "2319": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4704
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2322": {
      "op": "ADD"
    },
    "2323": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2325": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2327": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2328": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2329": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2330": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "SUB",
      "path": "9"
    },
    "2331": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2332": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2333": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "GAS",
      "path": "9"
    },
    "2334": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "2335": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2336": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2337": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2338": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x92F"
    },
    "2341": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2342": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2343": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2345": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2346": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "2347": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2348": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2350": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2351": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2352": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "POP",
      "path": "9"
    },
    "2353": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "POP",
      "path": "9"
    },
    "2354": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "POP",
      "path": "9"
    },
    "2355": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "POP",
      "path": "9"
    },
    "2356": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2358": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2359": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2360": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2362": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "NOT",
      "path": "9"
    },
    "2363": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2365": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2366": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "ADD",
      "path": "9"
    },
    "2367": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "AND",
      "path": "9"
    },
    "2368": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2369": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "ADD",
      "path": "9"
    },
    "2370": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2371": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2373": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2374": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "POP",
      "path": "9"
    },
    "2375": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2376": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "ADD",
      "path": "9"
    },
    "2377": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2378": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x953"
    },
    "2381": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2382": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2383": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x104B"
    },
    "2386": {
      "fn": "Staking.safeNftTransfer",
      "jump": "i",
      "offset": [
        4671,
        4719
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2387": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4671,
        4719
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2388": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4654,
        4719
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2389": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4654,
        4719
      ],
      "op": "POP",
      "path": "9"
    },
    "2390": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4743,
        4749
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2391": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4733,
        4740
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2392": {
      "branch": 43,
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4733,
        4749
      ],
      "op": "GT",
      "path": "9"
    },
    "2393": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4729,
        4898
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2394": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4729,
        4898
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9DB"
    },
    "2397": {
      "branch": 43,
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4729,
        4898
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2398": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4776
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 25,
      "value": "0x3"
    },
    "2400": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4788
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2401": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2403": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2404": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2411": {
      "op": "SHL"
    },
    "2412": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2413": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2420": {
      "op": "SHL"
    },
    "2421": {
      "op": "SUB"
    },
    "2422": {
      "op": "DUP6"
    },
    "2423": {
      "op": "DUP2"
    },
    "2424": {
      "op": "AND"
    },
    "2425": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2427": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2428": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "ADD",
      "path": "9"
    },
    "2429": {
      "op": "MSTORE"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2432": {
      "op": "DUP3"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "op": "DUP5"
    },
    "2435": {
      "op": "SWAP1"
    },
    "2436": {
      "op": "MSTORE"
    },
    "2437": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4788
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2438": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4788
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2439": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4788
      ],
      "op": "AND",
      "path": "9"
    },
    "2440": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4788
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2441": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4797
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA9059CBB"
    },
    "2446": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4797
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2449": {
      "op": "ADD"
    },
    "2450": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2451": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2453": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2455": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2456": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2457": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2458": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "SUB",
      "path": "9"
    },
    "2459": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2460": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2462": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2463": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "GAS",
      "path": "9"
    },
    "2464": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "CALL",
      "path": "9"
    },
    "2465": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2466": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2467": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2468": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9B1"
    },
    "2471": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2472": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2473": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2475": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2476": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "2477": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2478": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2480": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2481": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2482": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "POP",
      "path": "9"
    },
    "2483": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "POP",
      "path": "9"
    },
    "2484": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "POP",
      "path": "9"
    },
    "2485": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "POP",
      "path": "9"
    },
    "2486": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2488": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2489": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2490": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2492": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "NOT",
      "path": "9"
    },
    "2493": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2495": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2496": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "ADD",
      "path": "9"
    },
    "2497": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "AND",
      "path": "9"
    },
    "2498": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2499": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "ADD",
      "path": "9"
    },
    "2500": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2501": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2503": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2504": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "POP",
      "path": "9"
    },
    "2505": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2506": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "ADD",
      "path": "9"
    },
    "2507": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2508": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D5"
    },
    "2511": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2512": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2513": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1064"
    },
    "2516": {
      "fn": "Staking.safeNftTransfer",
      "jump": "i",
      "offset": [
        4765,
        4810
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2517": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2518": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4765,
        4810
      ],
      "op": "POP",
      "path": "9"
    },
    "2519": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4644,
        4904
      ],
      "op": "POP",
      "path": "9"
    },
    "2520": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4572,
        4904
      ],
      "op": "POP",
      "path": "9"
    },
    "2521": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4572,
        4904
      ],
      "op": "POP",
      "path": "9"
    },
    "2522": {
      "fn": "Staking.safeNftTransfer",
      "jump": "o",
      "offset": [
        4572,
        4904
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2523": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4729,
        4898
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2524": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4852
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 26,
      "value": "0x3"
    },
    "2526": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4864
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2527": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4887
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2529": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4887
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2530": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2537": {
      "op": "SHL"
    },
    "2538": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4887
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2539": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4887
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2546": {
      "op": "SHL"
    },
    "2547": {
      "op": "SUB"
    },
    "2548": {
      "op": "DUP6"
    },
    "2549": {
      "op": "DUP2"
    },
    "2550": {
      "op": "AND"
    },
    "2551": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4887
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2553": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4887
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2554": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4887
      ],
      "op": "ADD",
      "path": "9"
    },
    "2555": {
      "op": "MSTORE"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2558": {
      "op": "DUP3"
    },
    "2559": {
      "op": "ADD"
    },
    "2560": {
      "op": "DUP6"
    },
    "2561": {
      "op": "SWAP1"
    },
    "2562": {
      "op": "MSTORE"
    },
    "2563": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4864
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2564": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4864
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2565": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4864
      ],
      "op": "AND",
      "path": "9"
    },
    "2566": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4864
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2567": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4873
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA9059CBB"
    },
    "2572": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4873
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2575": {
      "op": "ADD"
    },
    "2576": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4841,
        4887
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x992"
    },
    "2579": {
      "op": "JUMP"
    },
    "2580": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4729,
        4898
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2581": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4644,
        4904
      ],
      "op": "POP",
      "path": "9"
    },
    "2582": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4572,
        4904
      ],
      "op": "POP",
      "path": "9"
    },
    "2583": {
      "fn": "Staking.safeNftTransfer",
      "offset": [
        4572,
        4904
      ],
      "op": "POP",
      "path": "9"
    },
    "2584": {
      "fn": "Staking.safeNftTransfer",
      "jump": "o",
      "offset": [
        4572,
        4904
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2585": {
      "fn": "Pausable._unpause",
      "offset": [
        2053,
        2170
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2586": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2588": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2593": {
      "op": "SHL"
    },
    "2594": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2595": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "1"
    },
    "2596": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2598": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "1"
    },
    "2599": {
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA69"
    },
    "2602": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2603": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2605": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2606": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2612": {
      "op": "SHL"
    },
    "2613": {
      "offset": [
        1612,
        1653
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2614": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2617": {
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2619": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2620": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "ADD",
      "path": "1"
    },
    "2621": {
      "op": "MSTORE"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2624": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2626": {
      "op": "DUP3"
    },
    "2627": {
      "op": "ADD"
    },
    "2628": {
      "op": "MSTORE"
    },
    "2629": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "2652": {
      "op": "SHL"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2655": {
      "op": "DUP3"
    },
    "2656": {
      "op": "ADD"
    },
    "2657": {
      "op": "MSTORE"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2660": {
      "op": "ADD"
    },
    "2661": {
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F6"
    },
    "2664": {
      "op": "JUMP"
    },
    "2665": {
      "offset": [
        1612,
        1653
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2666": {
      "fn": "Pausable._unpause",
      "offset": [
        2121,
        2126
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 27,
      "value": "0x0"
    },
    "2668": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2669": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2674": {
      "op": "SHL"
    },
    "2675": {
      "op": "NOT"
    },
    "2676": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "AND",
      "path": "1"
    },
    "2677": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2678": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2679": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 28,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "2712": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2713": {
      "fn": "Pausable._unpause",
      "offset": [
        2150,
        2162
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2714": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2716": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2723": {
      "op": "SHL"
    },
    "2724": {
      "op": "SUB"
    },
    "2725": {
      "op": "SWAP1"
    },
    "2726": {
      "op": "SWAP2"
    },
    "2727": {
      "op": "AND"
    },
    "2728": {
      "op": "DUP2"
    },
    "2729": {
      "op": "MSTORE"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2732": {
      "op": "ADD"
    },
    "2733": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2735": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2736": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2737": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2738": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "SUB",
      "path": "1"
    },
    "2739": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2740": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "LOG1",
      "path": "1"
    },
    "2741": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2053,
        2170
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2742": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2743": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2745": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2746": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2753": {
      "op": "SHL"
    },
    "2754": {
      "op": "SUB"
    },
    "2755": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 29
    },
    "2756": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2757": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2764": {
      "op": "SHL"
    },
    "2765": {
      "op": "SUB"
    },
    "2766": {
      "op": "NOT"
    },
    "2767": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2768": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "2769": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2770": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "2771": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2772": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2773": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x40"
    },
    "2775": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2776": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2777": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2778": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2779": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "2780": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2781": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2782": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2783": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2816": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2817": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2818": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2819": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "2820": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "2821": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2822": {
      "fn": "Pausable._pause",
      "offset": [
        1806,
        1921
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2823": {
      "fn": "Pausable.paused",
      "offset": [
        1088,
        1092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2825": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2830": {
      "op": "SHL"
    },
    "2831": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2832": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "DIV",
      "path": "1"
    },
    "2833": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2835": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "1"
    },
    "2836": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2837": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB30"
    },
    "2840": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2841": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2843": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2850": {
      "op": "SHL"
    },
    "2851": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2852": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2853": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2855": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "1"
    },
    "2856": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F6"
    },
    "2859": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2860": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFD8"
    },
    "2863": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2864": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2865": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1872
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 31,
      "value": "0x0"
    },
    "2867": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2868": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2873": {
      "op": "SHL"
    },
    "2874": {
      "op": "NOT"
    },
    "2875": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "AND",
      "path": "1"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2880": {
      "op": "SHL"
    },
    "2881": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "OR",
      "path": "1"
    },
    "2882": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2883": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2884": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 32,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "2917": {
      "fn": "Pausable._pause",
      "offset": [
        1901,
        1913
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA99"
    },
    "2920": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2921": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2922": {
      "fn": "Context._msgSender",
      "offset": [
        587,
        683
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2923": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2924": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 33,
      "value": "0x40"
    },
    "2926": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2927": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2934": {
      "op": "SHL"
    },
    "2935": {
      "op": "SUB"
    },
    "2936": {
      "op": "DUP5"
    },
    "2937": {
      "op": "DUP2"
    },
    "2938": {
      "op": "AND"
    },
    "2939": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "2941": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2942": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "4"
    },
    "2943": {
      "op": "MSTORE"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2946": {
      "op": "DUP1"
    },
    "2947": {
      "op": "DUP4"
    },
    "2948": {
      "op": "ADD"
    },
    "2949": {
      "op": "DUP6"
    },
    "2950": {
      "op": "SWAP1"
    },
    "2951": {
      "op": "MSTORE"
    },
    "2952": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2953": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2954": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2955": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2956": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SUB",
      "path": "4"
    },
    "2957": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2958": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2959": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "4"
    },
    "2960": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2961": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2964": {
      "op": "SWAP1"
    },
    "2965": {
      "op": "SWAP3"
    },
    "2966": {
      "op": "ADD"
    },
    "2967": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2968": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2969": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2971": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2972": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2973": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "4"
    },
    "2974": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2975": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2982": {
      "op": "SHL"
    },
    "2983": {
      "op": "SUB"
    },
    "2984": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "4"
    },
    "2985": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2992": {
      "op": "SHL"
    },
    "2993": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "OR",
      "path": "4"
    },
    "2994": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2995": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2996": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2997": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2998": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2999": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3000": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "4"
    },
    "3001": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3002": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3003": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3004": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3005": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3006": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3007": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3040": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3041": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3042": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "4"
    },
    "3043": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3044": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA14"
    },
    "3047": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3048": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3049": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3050": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3053": {
      "op": "SWAP2"
    },
    "3054": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBFB"
    },
    "3057": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3058": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3059": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "4"
    },
    "3060": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3061": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3062": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3063": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC78"
    },
    "3066": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3067": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3068": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3069": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3070": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3071": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3072": {
      "op": "POP"
    },
    "3073": {
      "branch": 49,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3074": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA14"
    },
    "3077": {
      "branch": 49,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3078": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 34
    },
    "3079": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3080": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3082": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "4"
    },
    "3083": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3084": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3085": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3086": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "4"
    },
    "3087": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3088": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC19"
    },
    "3091": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3092": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3093": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1064"
    },
    "3096": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3097": {
      "branch": 50,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3098": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA14"
    },
    "3101": {
      "branch": 50,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3102": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3104": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3111": {
      "op": "SHL"
    },
    "3112": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3113": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3116": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3118": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3119": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "4"
    },
    "3120": {
      "op": "MSTORE"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3125": {
      "op": "DUP3"
    },
    "3126": {
      "op": "ADD"
    },
    "3127": {
      "op": "MSTORE"
    },
    "3128": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3163": {
      "op": "DUP3"
    },
    "3164": {
      "op": "ADD"
    },
    "3165": {
      "op": "MSTORE"
    },
    "3166": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "3179": {
      "op": "SHL"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3182": {
      "op": "DUP3"
    },
    "3183": {
      "op": "ADD"
    },
    "3184": {
      "op": "MSTORE"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3187": {
      "op": "ADD"
    },
    "3188": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F6"
    },
    "3191": {
      "op": "JUMP"
    },
    "3192": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3193": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "3195": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 35,
      "value": "0xC87"
    },
    "3198": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3199": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3200": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3202": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3203": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC91"
    },
    "3206": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3207": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3208": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3209": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "POP",
      "path": "6"
    },
    "3210": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3211": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3212": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3213": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "6"
    },
    "3214": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "6"
    },
    "3215": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "6"
    },
    "3216": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3217": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3218": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "3220": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 36
    },
    "3221": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "6"
    },
    "3222": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "6"
    },
    "3223": {
      "branch": 44,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3224": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCF2"
    },
    "3227": {
      "branch": 44,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3228": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3230": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3237": {
      "op": "SHL"
    },
    "3238": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3239": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3242": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3244": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3245": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "6"
    },
    "3246": {
      "op": "MSTORE"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3251": {
      "op": "DUP3"
    },
    "3252": {
      "op": "ADD"
    },
    "3253": {
      "op": "MSTORE"
    },
    "3254": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3289": {
      "op": "DUP3"
    },
    "3290": {
      "op": "ADD"
    },
    "3291": {
      "op": "MSTORE"
    },
    "3292": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "3301": {
      "op": "SHL"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3304": {
      "op": "DUP3"
    },
    "3305": {
      "op": "ADD"
    },
    "3306": {
      "op": "MSTORE"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3309": {
      "op": "ADD"
    },
    "3310": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F6"
    },
    "3313": {
      "op": "JUMP"
    },
    "3314": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3315": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3316": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "3317": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 37,
      "value": "0xD40"
    },
    "3320": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3323": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3324": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3330": {
      "op": "SHL"
    },
    "3331": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3332": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3335": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3337": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3338": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "6"
    },
    "3339": {
      "op": "MSTORE"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3344": {
      "op": "DUP3"
    },
    "3345": {
      "op": "ADD"
    },
    "3346": {
      "op": "MSTORE"
    },
    "3347": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3382": {
      "op": "DUP3"
    },
    "3383": {
      "op": "ADD"
    },
    "3384": {
      "op": "MSTORE"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3387": {
      "op": "ADD"
    },
    "3388": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F6"
    },
    "3391": {
      "op": "JUMP"
    },
    "3392": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3393": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3395": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3396": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3403": {
      "op": "SHL"
    },
    "3404": {
      "op": "SUB"
    },
    "3405": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "6"
    },
    "3406": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3407": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3408": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3410": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3411": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD5C"
    },
    "3414": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3415": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3416": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10B2"
    },
    "3419": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3420": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3421": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3423": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3425": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3426": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3427": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3428": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "6"
    },
    "3429": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3430": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3431": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3432": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "6"
    },
    "3433": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "6"
    },
    "3434": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3435": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "6"
    },
    "3436": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "6"
    },
    "3437": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "6"
    },
    "3438": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3439": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3440": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3442": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3443": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "6"
    },
    "3444": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD99"
    },
    "3447": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3448": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3450": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3451": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3452": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "6"
    },
    "3453": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "3455": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "6"
    },
    "3456": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "3458": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3459": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "6"
    },
    "3460": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "6"
    },
    "3461": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3462": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "6"
    },
    "3463": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3465": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3466": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3467": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3468": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3469": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3470": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3472": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3474": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3475": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "6"
    },
    "3476": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3477": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD9E"
    },
    "3480": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3481": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3482": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "3484": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3485": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "6"
    },
    "3486": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3487": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "6"
    },
    "3488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3489": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "6"
    },
    "3490": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3491": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "6"
    },
    "3492": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 38,
      "value": "0xDAE"
    },
    "3495": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5006,
        5013
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3496": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5015,
        5025
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3497": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5027,
        5039
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3498": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5005
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDB9"
    },
    "3501": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3502": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3503": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5040
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "3504": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "3505": {
      "op": "POP"
    },
    "3506": {
      "op": "POP"
    },
    "3507": {
      "op": "POP"
    },
    "3508": {
      "op": "POP"
    },
    "3509": {
      "op": "POP"
    },
    "3510": {
      "op": "POP"
    },
    "3511": {
      "op": "POP"
    },
    "3512": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3513": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7161,
        7853
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3514": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7307,
        7319
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "3516": {
      "branch": 45,
      "fn": "Address.verifyCallResult",
      "offset": [
        7335,
        7342
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3517": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3518": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDC8"
    },
    "3521": {
      "branch": 45,
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3522": {
      "op": "POP"
    },
    "3523": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7365,
        7375
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 39
    },
    "3524": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC8A"
    },
    "3527": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3528": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3529": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3530": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3531": {
      "branch": 46,
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7497
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3532": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDD8"
    },
    "3535": {
      "branch": 46,
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3536": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7670,
        7680
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3537": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7664,
        7681
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3538": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7730,
        7745
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3539": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7727
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3540": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7713,
        7715
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3542": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7709,
        7728
      ],
      "op": "ADD",
      "path": "6"
    },
    "3543": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7702,
        7746
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3544": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3545": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7809,
        7821
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 40
    },
    "3546": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3548": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3549": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3555": {
      "op": "SHL"
    },
    "3556": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3557": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3558": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3560": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "ADD",
      "path": "6"
    },
    "3561": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F6"
    },
    "3564": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3565": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3566": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10CE"
    },
    "3569": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7802,
        7822
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3570": {
      "op": "JUMPDEST"
    },
    "3571": {
      "op": "DUP3"
    },
    "3572": {
      "op": "DUP1"
    },
    "3573": {
      "op": "SLOAD"
    },
    "3574": {
      "op": "DUP3"
    },
    "3575": {
      "op": "DUP3"
    },
    "3576": {
      "op": "SSTORE"
    },
    "3577": {
      "op": "SWAP1"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3580": {
      "op": "MSTORE"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3585": {
      "op": "KECCAK256"
    },
    "3586": {
      "op": "SWAP1"
    },
    "3587": {
      "op": "DUP2"
    },
    "3588": {
      "op": "ADD"
    },
    "3589": {
      "op": "SWAP3"
    },
    "3590": {
      "op": "DUP3"
    },
    "3591": {
      "op": "ISZERO"
    },
    "3592": {
      "op": "PUSH2",
      "value": "0xE2D"
    },
    "3595": {
      "op": "JUMPI"
    },
    "3596": {
      "op": "SWAP2"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3599": {
      "op": "MUL"
    },
    "3600": {
      "op": "DUP3"
    },
    "3601": {
      "op": "ADD"
    },
    "3602": {
      "op": "JUMPDEST"
    },
    "3603": {
      "op": "DUP3"
    },
    "3604": {
      "op": "DUP2"
    },
    "3605": {
      "op": "GT"
    },
    "3606": {
      "op": "ISZERO"
    },
    "3607": {
      "op": "PUSH2",
      "value": "0xE2D"
    },
    "3610": {
      "op": "JUMPI"
    },
    "3611": {
      "op": "DUP3"
    },
    "3612": {
      "op": "MLOAD"
    },
    "3613": {
      "op": "DUP3"
    },
    "3614": {
      "op": "SSTORE"
    },
    "3615": {
      "op": "SWAP2"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3618": {
      "op": "ADD"
    },
    "3619": {
      "op": "SWAP2"
    },
    "3620": {
      "op": "SWAP1"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3623": {
      "op": "ADD"
    },
    "3624": {
      "op": "SWAP1"
    },
    "3625": {
      "op": "PUSH2",
      "value": "0xE12"
    },
    "3628": {
      "op": "JUMP"
    },
    "3629": {
      "op": "JUMPDEST"
    },
    "3630": {
      "op": "POP"
    },
    "3631": {
      "op": "PUSH2",
      "value": "0xE39"
    },
    "3634": {
      "op": "SWAP3"
    },
    "3635": {
      "op": "SWAP2"
    },
    "3636": {
      "op": "POP"
    },
    "3637": {
      "op": "PUSH2",
      "value": "0xE3D"
    },
    "3640": {
      "jump": "i",
      "op": "JUMP"
    },
    "3641": {
      "op": "JUMPDEST"
    },
    "3642": {
      "op": "POP"
    },
    "3643": {
      "op": "SWAP1"
    },
    "3644": {
      "jump": "o",
      "op": "JUMP"
    },
    "3645": {
      "op": "JUMPDEST"
    },
    "3646": {
      "op": "JUMPDEST"
    },
    "3647": {
      "op": "DUP1"
    },
    "3648": {
      "op": "DUP3"
    },
    "3649": {
      "op": "GT"
    },
    "3650": {
      "op": "ISZERO"
    },
    "3651": {
      "op": "PUSH2",
      "value": "0xE39"
    },
    "3654": {
      "op": "JUMPI"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3657": {
      "op": "DUP2"
    },
    "3658": {
      "op": "SSTORE"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3661": {
      "op": "ADD"
    },
    "3662": {
      "op": "PUSH2",
      "value": "0xE3E"
    },
    "3665": {
      "op": "JUMP"
    },
    "3666": {
      "op": "JUMPDEST"
    },
    "3667": {
      "op": "DUP1"
    },
    "3668": {
      "op": "CALLDATALOAD"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3675": {
      "op": "SHL"
    },
    "3676": {
      "op": "SUB"
    },
    "3677": {
      "op": "DUP2"
    },
    "3678": {
      "op": "AND"
    },
    "3679": {
      "op": "DUP2"
    },
    "3680": {
      "op": "EQ"
    },
    "3681": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "3684": {
      "op": "JUMPI"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3687": {
      "op": "DUP1"
    },
    "3688": {
      "op": "REVERT"
    },
    "3689": {
      "op": "JUMPDEST"
    },
    "3690": {
      "op": "SWAP2"
    },
    "3691": {
      "op": "SWAP1"
    },
    "3692": {
      "op": "POP"
    },
    "3693": {
      "jump": "o",
      "op": "JUMP"
    },
    "3694": {
      "op": "JUMPDEST"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3699": {
      "op": "DUP3"
    },
    "3700": {
      "op": "DUP5"
    },
    "3701": {
      "op": "SUB"
    },
    "3702": {
      "op": "SLT"
    },
    "3703": {
      "op": "ISZERO"
    },
    "3704": {
      "op": "PUSH2",
      "value": "0xE80"
    },
    "3707": {
      "op": "JUMPI"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3710": {
      "op": "DUP1"
    },
    "3711": {
      "op": "REVERT"
    },
    "3712": {
      "op": "JUMPDEST"
    },
    "3713": {
      "op": "PUSH2",
      "value": "0xC8A"
    },
    "3716": {
      "op": "DUP3"
    },
    "3717": {
      "op": "PUSH2",
      "value": "0xE52"
    },
    "3720": {
      "jump": "i",
      "op": "JUMP"
    },
    "3721": {
      "op": "JUMPDEST"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3726": {
      "op": "DUP3"
    },
    "3727": {
      "op": "DUP5"
    },
    "3728": {
      "op": "SUB"
    },
    "3729": {
      "op": "SLT"
    },
    "3730": {
      "op": "ISZERO"
    },
    "3731": {
      "op": "PUSH2",
      "value": "0xE9B"
    },
    "3734": {
      "op": "JUMPI"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3737": {
      "op": "DUP1"
    },
    "3738": {
      "op": "REVERT"
    },
    "3739": {
      "op": "JUMPDEST"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "op": "CALLDATALOAD"
    },
    "3742": {
      "op": "SWAP2"
    },
    "3743": {
      "op": "SWAP1"
    },
    "3744": {
      "op": "POP"
    },
    "3745": {
      "jump": "o",
      "op": "JUMP"
    },
    "3746": {
      "op": "JUMPDEST"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3749": {
      "op": "DUP1"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3752": {
      "op": "DUP1"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3755": {
      "op": "DUP6"
    },
    "3756": {
      "op": "DUP8"
    },
    "3757": {
      "op": "SUB"
    },
    "3758": {
      "op": "SLT"
    },
    "3759": {
      "op": "ISZERO"
    },
    "3760": {
      "op": "PUSH2",
      "value": "0xEB8"
    },
    "3763": {
      "op": "JUMPI"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3766": {
      "op": "DUP1"
    },
    "3767": {
      "op": "REVERT"
    },
    "3768": {
      "op": "JUMPDEST"
    },
    "3769": {
      "op": "POP"
    },
    "3770": {
      "op": "POP"
    },
    "3771": {
      "op": "DUP3"
    },
    "3772": {
      "op": "CALLDATALOAD"
    },
    "3773": {
      "op": "SWAP5"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3776": {
      "op": "DUP5"
    },
    "3777": {
      "op": "ADD"
    },
    "3778": {
      "op": "CALLDATALOAD"
    },
    "3779": {
      "op": "SWAP5"
    },
    "3780": {
      "op": "POP"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3783": {
      "op": "DUP5"
    },
    "3784": {
      "op": "ADD"
    },
    "3785": {
      "op": "CALLDATALOAD"
    },
    "3786": {
      "op": "SWAP4"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3789": {
      "op": "ADD"
    },
    "3790": {
      "op": "CALLDATALOAD"
    },
    "3791": {
      "op": "SWAP3"
    },
    "3792": {
      "op": "POP"
    },
    "3793": {
      "op": "SWAP1"
    },
    "3794": {
      "op": "POP"
    },
    "3795": {
      "jump": "o",
      "op": "JUMP"
    },
    "3796": {
      "op": "JUMPDEST"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3799": {
      "op": "DUP1"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3802": {
      "op": "DUP4"
    },
    "3803": {
      "op": "DUP6"
    },
    "3804": {
      "op": "SUB"
    },
    "3805": {
      "op": "SLT"
    },
    "3806": {
      "op": "ISZERO"
    },
    "3807": {
      "op": "PUSH2",
      "value": "0xEE7"
    },
    "3810": {
      "op": "JUMPI"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3813": {
      "op": "DUP1"
    },
    "3814": {
      "op": "REVERT"
    },
    "3815": {
      "op": "JUMPDEST"
    },
    "3816": {
      "op": "PUSH2",
      "value": "0xEF0"
    },
    "3819": {
      "op": "DUP4"
    },
    "3820": {
      "op": "PUSH2",
      "value": "0xE52"
    },
    "3823": {
      "jump": "i",
      "op": "JUMP"
    },
    "3824": {
      "op": "JUMPDEST"
    },
    "3825": {
      "op": "SWAP5"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3828": {
      "op": "SWAP4"
    },
    "3829": {
      "op": "SWAP1"
    },
    "3830": {
      "op": "SWAP4"
    },
    "3831": {
      "op": "ADD"
    },
    "3832": {
      "op": "CALLDATALOAD"
    },
    "3833": {
      "op": "SWAP4"
    },
    "3834": {
      "op": "POP"
    },
    "3835": {
      "op": "POP"
    },
    "3836": {
      "op": "POP"
    },
    "3837": {
      "jump": "o",
      "op": "JUMP"
    },
    "3838": {
      "op": "JUMPDEST"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3841": {
      "op": "DUP1"
    },
    "3842": {
      "op": "DUP3"
    },
    "3843": {
      "op": "MSTORE"
    },
    "3844": {
      "op": "DUP2"
    },
    "3845": {
      "op": "DUP2"
    },
    "3846": {
      "op": "ADD"
    },
    "3847": {
      "op": "MSTORE"
    },
    "3848": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3883": {
      "op": "DUP3"
    },
    "3884": {
      "op": "ADD"
    },
    "3885": {
      "op": "MSTORE"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3888": {
      "op": "ADD"
    },
    "3889": {
      "op": "SWAP1"
    },
    "3890": {
      "jump": "o",
      "op": "JUMP"
    },
    "3891": {
      "op": "JUMPDEST"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3894": {
      "op": "DUP1"
    },
    "3895": {
      "op": "DUP3"
    },
    "3896": {
      "op": "MSTORE"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3899": {
      "op": "SWAP1"
    },
    "3900": {
      "op": "DUP3"
    },
    "3901": {
      "op": "ADD"
    },
    "3902": {
      "op": "MSTORE"
    },
    "3903": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3938": {
      "op": "DUP3"
    },
    "3939": {
      "op": "ADD"
    },
    "3940": {
      "op": "MSTORE"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3943": {
      "op": "ADD"
    },
    "3944": {
      "op": "SWAP1"
    },
    "3945": {
      "jump": "o",
      "op": "JUMP"
    },
    "3946": {
      "op": "JUMPDEST"
    },
    "3947": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3954": {
      "op": "SHL"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3957": {
      "op": "MSTORE"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3962": {
      "op": "MSTORE"
    },
    "3963": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3967": {
      "op": "REVERT"
    },
    "3968": {
      "op": "JUMPDEST"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3971": {
      "op": "DUP3"
    },
    "3972": {
      "op": "DUP3"
    },
    "3973": {
      "op": "LT"
    },
    "3974": {
      "op": "ISZERO"
    },
    "3975": {
      "op": "PUSH2",
      "value": "0xF92"
    },
    "3978": {
      "op": "JUMPI"
    },
    "3979": {
      "op": "PUSH2",
      "value": "0xF92"
    },
    "3982": {
      "op": "PUSH2",
      "value": "0xF6A"
    },
    "3985": {
      "jump": "i",
      "op": "JUMP"
    },
    "3986": {
      "op": "JUMPDEST"
    },
    "3987": {
      "op": "POP"
    },
    "3988": {
      "op": "SUB"
    },
    "3989": {
      "op": "SWAP1"
    },
    "3990": {
      "jump": "o",
      "op": "JUMP"
    },
    "3991": {
      "op": "JUMPDEST"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3994": {
      "op": "DUP2"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3997": {
      "op": "NOT"
    },
    "3998": {
      "op": "DIV"
    },
    "3999": {
      "op": "DUP4"
    },
    "4000": {
      "op": "GT"
    },
    "4001": {
      "op": "DUP3"
    },
    "4002": {
      "op": "ISZERO"
    },
    "4003": {
      "op": "ISZERO"
    },
    "4004": {
      "op": "AND"
    },
    "4005": {
      "op": "ISZERO"
    },
    "4006": {
      "op": "PUSH2",
      "value": "0xFB1"
    },
    "4009": {
      "op": "JUMPI"
    },
    "4010": {
      "op": "PUSH2",
      "value": "0xFB1"
    },
    "4013": {
      "op": "PUSH2",
      "value": "0xF6A"
    },
    "4016": {
      "jump": "i",
      "op": "JUMP"
    },
    "4017": {
      "op": "JUMPDEST"
    },
    "4018": {
      "op": "POP"
    },
    "4019": {
      "op": "MUL"
    },
    "4020": {
      "op": "SWAP1"
    },
    "4021": {
      "jump": "o",
      "op": "JUMP"
    },
    "4022": {
      "op": "JUMPDEST"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4025": {
      "op": "DUP3"
    },
    "4026": {
      "op": "PUSH2",
      "value": "0xFD3"
    },
    "4029": {
      "op": "JUMPI"
    },
    "4030": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4037": {
      "op": "SHL"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4040": {
      "op": "MSTORE"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4045": {
      "op": "MSTORE"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4050": {
      "op": "REVERT"
    },
    "4051": {
      "op": "JUMPDEST"
    },
    "4052": {
      "op": "POP"
    },
    "4053": {
      "op": "DIV"
    },
    "4054": {
      "op": "SWAP1"
    },
    "4055": {
      "jump": "o",
      "op": "JUMP"
    },
    "4056": {
      "op": "JUMPDEST"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4059": {
      "op": "DUP1"
    },
    "4060": {
      "op": "DUP3"
    },
    "4061": {
      "op": "MSTORE"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "4064": {
      "op": "SWAP1"
    },
    "4065": {
      "op": "DUP3"
    },
    "4066": {
      "op": "ADD"
    },
    "4067": {
      "op": "MSTORE"
    },
    "4068": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "4087": {
      "op": "SHL"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4090": {
      "op": "DUP3"
    },
    "4091": {
      "op": "ADD"
    },
    "4092": {
      "op": "MSTORE"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4095": {
      "op": "ADD"
    },
    "4096": {
      "op": "SWAP1"
    },
    "4097": {
      "jump": "o",
      "op": "JUMP"
    },
    "4098": {
      "op": "JUMPDEST"
    },
    "4099": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4106": {
      "op": "SHL"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4109": {
      "op": "MSTORE"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4114": {
      "op": "MSTORE"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4119": {
      "op": "REVERT"
    },
    "4120": {
      "op": "JUMPDEST"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4125": {
      "op": "NOT"
    },
    "4126": {
      "op": "DUP3"
    },
    "4127": {
      "op": "EQ"
    },
    "4128": {
      "op": "ISZERO"
    },
    "4129": {
      "op": "PUSH2",
      "value": "0x102C"
    },
    "4132": {
      "op": "JUMPI"
    },
    "4133": {
      "op": "PUSH2",
      "value": "0x102C"
    },
    "4136": {
      "op": "PUSH2",
      "value": "0xF6A"
    },
    "4139": {
      "jump": "i",
      "op": "JUMP"
    },
    "4140": {
      "op": "JUMPDEST"
    },
    "4141": {
      "op": "POP"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4144": {
      "op": "ADD"
    },
    "4145": {
      "op": "SWAP1"
    },
    "4146": {
      "jump": "o",
      "op": "JUMP"
    },
    "4147": {
      "op": "JUMPDEST"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4150": {
      "op": "DUP3"
    },
    "4151": {
      "op": "NOT"
    },
    "4152": {
      "op": "DUP3"
    },
    "4153": {
      "op": "GT"
    },
    "4154": {
      "op": "ISZERO"
    },
    "4155": {
      "op": "PUSH2",
      "value": "0x1046"
    },
    "4158": {
      "op": "JUMPI"
    },
    "4159": {
      "op": "PUSH2",
      "value": "0x1046"
    },
    "4162": {
      "op": "PUSH2",
      "value": "0xF6A"
    },
    "4165": {
      "jump": "i",
      "op": "JUMP"
    },
    "4166": {
      "op": "JUMPDEST"
    },
    "4167": {
      "op": "POP"
    },
    "4168": {
      "op": "ADD"
    },
    "4169": {
      "op": "SWAP1"
    },
    "4170": {
      "jump": "o",
      "op": "JUMP"
    },
    "4171": {
      "op": "JUMPDEST"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4176": {
      "op": "DUP3"
    },
    "4177": {
      "op": "DUP5"
    },
    "4178": {
      "op": "SUB"
    },
    "4179": {
      "op": "SLT"
    },
    "4180": {
      "op": "ISZERO"
    },
    "4181": {
      "op": "PUSH2",
      "value": "0x105D"
    },
    "4184": {
      "op": "JUMPI"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4187": {
      "op": "DUP1"
    },
    "4188": {
      "op": "REVERT"
    },
    "4189": {
      "op": "JUMPDEST"
    },
    "4190": {
      "op": "POP"
    },
    "4191": {
      "op": "MLOAD"
    },
    "4192": {
      "op": "SWAP2"
    },
    "4193": {
      "op": "SWAP1"
    },
    "4194": {
      "op": "POP"
    },
    "4195": {
      "jump": "o",
      "op": "JUMP"
    },
    "4196": {
      "op": "JUMPDEST"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4201": {
      "op": "DUP3"
    },
    "4202": {
      "op": "DUP5"
    },
    "4203": {
      "op": "SUB"
    },
    "4204": {
      "op": "SLT"
    },
    "4205": {
      "op": "ISZERO"
    },
    "4206": {
      "op": "PUSH2",
      "value": "0x1076"
    },
    "4209": {
      "op": "JUMPI"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4212": {
      "op": "DUP1"
    },
    "4213": {
      "op": "REVERT"
    },
    "4214": {
      "op": "JUMPDEST"
    },
    "4215": {
      "op": "DUP2"
    },
    "4216": {
      "op": "MLOAD"
    },
    "4217": {
      "op": "DUP1"
    },
    "4218": {
      "op": "ISZERO"
    },
    "4219": {
      "op": "ISZERO"
    },
    "4220": {
      "op": "DUP2"
    },
    "4221": {
      "op": "EQ"
    },
    "4222": {
      "op": "PUSH2",
      "value": "0xC8A"
    },
    "4225": {
      "op": "JUMPI"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4228": {
      "op": "DUP1"
    },
    "4229": {
      "op": "REVERT"
    },
    "4230": {
      "op": "JUMPDEST"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4233": {
      "op": "JUMPDEST"
    },
    "4234": {
      "op": "DUP4"
    },
    "4235": {
      "op": "DUP2"
    },
    "4236": {
      "op": "LT"
    },
    "4237": {
      "op": "ISZERO"
    },
    "4238": {
      "op": "PUSH2",
      "value": "0x10A1"
    },
    "4241": {
      "op": "JUMPI"
    },
    "4242": {
      "op": "DUP2"
    },
    "4243": {
      "op": "DUP2"
    },
    "4244": {
      "op": "ADD"
    },
    "4245": {
      "op": "MLOAD"
    },
    "4246": {
      "op": "DUP4"
    },
    "4247": {
      "op": "DUP3"
    },
    "4248": {
      "op": "ADD"
    },
    "4249": {
      "op": "MSTORE"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4252": {
      "op": "ADD"
    },
    "4253": {
      "op": "PUSH2",
      "value": "0x1089"
    },
    "4256": {
      "op": "JUMP"
    },
    "4257": {
      "op": "JUMPDEST"
    },
    "4258": {
      "op": "DUP4"
    },
    "4259": {
      "op": "DUP2"
    },
    "4260": {
      "op": "GT"
    },
    "4261": {
      "op": "ISZERO"
    },
    "4262": {
      "op": "PUSH2",
      "value": "0x9D5"
    },
    "4265": {
      "op": "JUMPI"
    },
    "4266": {
      "op": "POP"
    },
    "4267": {
      "op": "POP"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4270": {
      "op": "SWAP2"
    },
    "4271": {
      "op": "ADD"
    },
    "4272": {
      "op": "MSTORE"
    },
    "4273": {
      "jump": "o",
      "op": "JUMP"
    },
    "4274": {
      "op": "JUMPDEST"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4277": {
      "op": "DUP3"
    },
    "4278": {
      "op": "MLOAD"
    },
    "4279": {
      "op": "PUSH2",
      "value": "0x10C4"
    },
    "4282": {
      "op": "DUP2"
    },
    "4283": {
      "op": "DUP5"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4286": {
      "op": "DUP8"
    },
    "4287": {
      "op": "ADD"
    },
    "4288": {
      "op": "PUSH2",
      "value": "0x1086"
    },
    "4291": {
      "jump": "i",
      "op": "JUMP"
    },
    "4292": {
      "op": "JUMPDEST"
    },
    "4293": {
      "op": "SWAP2"
    },
    "4294": {
      "op": "SWAP1"
    },
    "4295": {
      "op": "SWAP2"
    },
    "4296": {
      "op": "ADD"
    },
    "4297": {
      "op": "SWAP3"
    },
    "4298": {
      "op": "SWAP2"
    },
    "4299": {
      "op": "POP"
    },
    "4300": {
      "op": "POP"
    },
    "4301": {
      "jump": "o",
      "op": "JUMP"
    },
    "4302": {
      "op": "JUMPDEST"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4305": {
      "op": "DUP2"
    },
    "4306": {
      "op": "MSTORE"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4309": {
      "op": "DUP3"
    },
    "4310": {
      "op": "MLOAD"
    },
    "4311": {
      "op": "DUP1"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4314": {
      "op": "DUP5"
    },
    "4315": {
      "op": "ADD"
    },
    "4316": {
      "op": "MSTORE"
    },
    "4317": {
      "op": "PUSH2",
      "value": "0x10ED"
    },
    "4320": {
      "op": "DUP2"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4323": {
      "op": "DUP6"
    },
    "4324": {
      "op": "ADD"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4327": {
      "op": "DUP8"
    },
    "4328": {
      "op": "ADD"
    },
    "4329": {
      "op": "PUSH2",
      "value": "0x1086"
    },
    "4332": {
      "jump": "i",
      "op": "JUMP"
    },
    "4333": {
      "op": "JUMPDEST"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4336": {
      "op": "ADD"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4339": {
      "op": "NOT"
    },
    "4340": {
      "op": "AND"
    },
    "4341": {
      "op": "SWAP2"
    },
    "4342": {
      "op": "SWAP1"
    },
    "4343": {
      "op": "SWAP2"
    },
    "4344": {
      "op": "ADD"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4347": {
      "op": "ADD"
    },
    "4348": {
      "op": "SWAP3"
    },
    "4349": {
      "op": "SWAP2"
    },
    "4350": {
      "op": "POP"
    },
    "4351": {
      "op": "POP"
    },
    "4352": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "1c5d870e686167ae3fe9f06b05ddcbf56c35d634",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract Staking is Ownable, Pausable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    // Info of each user.\n    struct UserInfo {\n        uint256[] nftStaked;\n        uint256 startTime; // Last time Staked to calculate apr\n        uint256 rewardHasBeenWithdrawn; // Reward debt.\n    }\n\n    // Info of each pool.\n    struct StakingInfo {\n        IERC20 rewardToken; // Address of LP token contract.\n        IERC721 nftContract;\n        uint256 usdPerNftRate;\n        uint256 apr; // Rate of token per year apr/1000\n        uint256 startTime;\n    }\n\n    // Bonus muliplier for early Nft makers.\n    uint256 public BONUS_MULTIPLIER = 1;\n\n    // Info of each pool.\n    StakingInfo public stakingInfo;\n    // Info of each user that stakes LP tokens.\n    mapping(address => UserInfo) public userInfo;\n\n    event EnterStaking(address indexed user, uint256 nftId);\n    event LeaveStaking(address indexed user, uint256 nftId);\n    event ClaimReward(address indexed user, uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 nftId);\n\n    constructor(\n        IERC20 _rewardToken,\n        IERC721 _nftContract,\n        uint256 _apr, // APR rate is 1/1000\n        uint256 _usdPerNftRate\n    ) {\n        // staking pool\n        stakingInfo = StakingInfo({\n            rewardToken: _rewardToken,\n            apr: _apr,\n            usdPerNftRate: _usdPerNftRate,\n            nftContract: _nftContract,\n            startTime: getCurrentTime()\n        });\n    }\n\n    function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\n        BONUS_MULTIPLIER = multiplierNumber;\n    }\n\n    // Update the given pool's Nft apr. Can only be called by the owner.\n    function setapr(uint256 _apr) public onlyOwner {\n        stakingInfo.apr = _apr;\n    }\n\n    // Stake Nft tokens to NftPool\n    function enterStaking(uint256 _nftId) public nonReentrant {\n        UserInfo storage user = userInfo[msg.sender];\n        stakingInfo.nftContract.safeTransferFrom(\n            address(msg.sender),\n            address(this),\n            _nftId\n        );\n        user.nftStaked.push(_nftId);\n        if (user.startTime == 0) {\n            user.startTime = getCurrentTime();\n        }\n\n        emit EnterStaking(msg.sender, _nftId);\n    }\n\n    // Withdraw All Nft tokens from STAKING.\n    function leaveStaking() public whenNotPaused nonReentrant {\n        UserInfo storage user = userInfo[msg.sender];\n        for (\n            uint256 nftIndex = 0;\n            nftIndex < user.nftStaked.length;\n            nftIndex++\n        ) {\n            stakingInfo.nftContract.transferFrom(\n                address(this),\n                msg.sender,\n                user.nftStaked[nftIndex]\n            );\n        }\n        uint256[] memory _temp;\n        user.nftStaked = _temp;\n        uint256 amount = claimReward();\n        emit LeaveStaking(msg.sender, amount);\n    }\n\n    // ClaimAllReward\n    function claimReward() public whenNotPaused nonReentrant returns (uint256) {\n        UserInfo storage user = userInfo[msg.sender];\n\n        uint256 amount = calculateRewardDebt(\n            user.startTime,\n            getCurrentTime(),\n            user.nftStaked.length * stakingInfo.usdPerNftRate,\n            user.rewardHasBeenWithdrawn\n        );\n        stakingInfo.rewardToken.safeTransfer(msg.sender, amount);\n        require(amount > 0, \"Reward Amount: wut?\");\n        user.rewardHasBeenWithdrawn += amount;\n        emit ClaimReward(msg.sender, amount);\n        return amount;\n    }\n\n    // Get time by current Time\n    function calculateRewardDebt(\n        uint256 _from,\n        uint256 _to,\n        uint256 _userAmount,\n        uint256 _userHasBeenWithdrawn\n    ) public view returns (uint256) {\n        uint256 multiplier = (_to - _from) * BONUS_MULTIPLIER;\n        uint256 numberOfDays = multiplier / 86400; // 1 Day = 86400 seconds\n        uint256 aprPerDay = (stakingInfo.apr * 1000) / 365;\n        return\n            (_userAmount * numberOfDays * aprPerDay) /\n            (1000 * 1000) -\n            _userHasBeenWithdrawn;\n    }\n\n    // Safe Nft transfer function, just in case if rounding error causes pool to not have enough CAKEs.\n    function safeNftTransfer(address _to, uint256 _amount) public onlyOwner {\n        uint256 NftBal = stakingInfo.rewardToken.balanceOf(address(this));\n        if (_amount > NftBal) {\n            stakingInfo.rewardToken.transfer(_to, NftBal);\n        } else {\n            stakingInfo.rewardToken.transfer(_to, _amount);\n        }\n    }\n\n    function getCurrentTime() public view returns (uint256) {\n        return block.timestamp;\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n}\n",
  "sourceMap": "356:4785:9:-:0;;;1062:1;1028:35;;1481:416;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;666:10:7;867:9:0;:23::i;:::-;934:5:1;924:15;;-1:-1:-1;;;;924:15:1;;;-1:-1:-1;1742:22:2;;1682:208:9;;;;;;;;-1:-1:-1;;;;;1682:208:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;4983:15;1682:208;;;;;;;1668:11;:222;;-1:-1:-1;;;;;;1668:222:9;;;;;;;;;;;;;;;;;;;;;;;;;;;356:4785;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:139:10:-;-1:-1:-1;;;;;97:31:10;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:555::-;286:6;294;302;310;363:3;351:9;342:7;338:23;334:33;331:53;;;380:1;377;370:12;331:53;412:9;406:16;431:39;464:5;431:39;:::i;:::-;539:2;524:18;;518:25;489:5;;-1:-1:-1;552:41:10;518:25;552:41;:::i;:::-;659:2;644:18;;638:25;703:2;688:18;;;682:25;158:555;;612:7;;-1:-1:-1;158:555:10;-1:-1:-1;;;158:555:10:o;:::-;356:4785:9;;;;;;",
  "sourcePath": "contracts/Staking.sol",
  "type": "contract"
}